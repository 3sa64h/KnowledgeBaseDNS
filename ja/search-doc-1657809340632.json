[{"title":"DNS filtering","type":0,"sectionRef":"#","url":"general/dns-filtering/","content":"","keywords":""},{"title":"What is DNS?​","type":1,"pageTitle":"DNS filtering","url":"general/dns-filtering/#what-is-dns","content":"DNS stands for &quot;Domain name system&quot;, and its purpose is to translate websites' names into something browsers can understand, i.e. IP addresses. Thus, each time you go to a website, your browser sends a request to a special server (DNS server). That server looks at the requested domain name and replies with a corresponding IP address. Very schematically it can be represented like this:  The same applies, of course, to all apps and programs that send any web requests, not just browsers. "},{"title":"How does DNS filtering work?​","type":1,"pageTitle":"DNS filtering","url":"general/dns-filtering/#how-does-dns-filtering-work","content":"When you use one of the AdGuard apps that supports DNS filtering, it acts as a buffer between your device and the DNS server. All DNS requests that your browsers or apps are about to send first get processed by AdGuard. If you're using the default DNS server provided by your ISP, your DNS traffic is likely not encrypted and vulnerable to snooping and hijacking. AdGuard will encrypt all your DNS requests before they leave your device, so that no malefactor could get access to their contents. On top of that, AdGuard can identify requests to ad, tracking, and/or adult domains and redirect them to a &quot;blackhole&quot; instead of forwarding them to the DNS server. More on that later.  DNS filtering is a powerful tool and it's supported by all major AdGuard apps: AdGuard for Windows, AdGuard for Mac, AdGuard for Android and AdGuard for iOS. DNS filtering can be broken down into two separate functions: to encrypt and reroute DNS traffic to DNS servers, and to block some domains locally by applying DNS blocklists. "},{"title":"DNS servers​","type":1,"pageTitle":"DNS filtering","url":"general/dns-filtering/#dns-servers","content":"There are thousands of DNS servers to choose from, and they are all unique in their properties and purposes. Most simply return the IP address of the requested domain, but some have additional functions: they block ad, tracking, adult domains and so on. Nowadays all major DNS servers employ one or more reliable encryption protocols: DNS-over-HTTPS, DNS-over-TLS. AdGuard also provides a DNS service, and it was the world's first to offer the very new and promising DNS-over-QUIC encryption protocol. AdGuard has different servers for different goals. This diagram illustrates how AdGuard blocking servers work:  Other DNS providers may work differently, so learn more about them before committing to this or that DNS server. You can find the list of some of the most popular DNS providers in this article. All AdGuard apps that support DNS functionality also have a list of DNS servers to choose from, or even allow to select any custom DNS server that you'd like. "},{"title":"Local DNS blocklists​","type":1,"pageTitle":"DNS filtering","url":"general/dns-filtering/#local-dns-blocklists","content":"But by relying on DNS servers only to filter your DNS traffic you lose all flexibility. If the selected server blocks a domain, you can't access it. With AdGuard, you don't even need to configure any specific DNS server to filter DNS traffic. All AdGuard products let you employ DNS blocklists, be it simple hosts files or lists that use more advanced syntax. They work similarly to regular blocklists: when a DNS request matches one of the rules in the active filter list, it gets blocked. To be more precise, it gets rerouted to a &quot;blackhole&quot;. In AdGuard for iOS, first you have to enable &quot;Advanced mode&quot; in settings in order to get access to DNS blocking. You can add as many custom blocklists as you wish. For instance, you can use AdGuard DNS filter. It quite literally blocks everything that AdGuard DNS server does, but in this case you are free to use any other DNS server. Plus, this way you can add more filters or create custom exception rules, all of which would be impossible with a simple &quot;use a blocking DNS server&quot; setup. There are hundreds of different DNS blocklists, you can look for them here. "},{"title":"Comparing DNS filtering to network filtering​","type":1,"pageTitle":"DNS filtering","url":"general/dns-filtering/#comparing-dns-filtering-to-network-filtering","content":"Network filtering is what we call the 'regular' way AdGuard standalone apps process network traffic, hence the name. Feel free to brush up on it by reading this article. First of all, we have to mention that with AdGuard you don't have to choose. You can always use both regular network filtering and DNS filtering at the same time. However, it's important to understand key differences between the two. DNS filtering has both its unique advantages and drawbacks: Pros of DNS filtering: On some platforms this is the only way to achieve system-wide filtering. For example, on iOS only the Safari browser supports content blocking in the familiar sense, for everything else there's only DNS filtering.Some forms of tracking (like CNAME-cloaked tracking) can only be dealt with by DNS filtering.The stage of processing a DNS request is the earliest you could possibly deal with an ad or a tracker, this helps save a little bit of battery life and traffic. Cons of DNS filtering: DNS filtering is &quot;rough&quot;, meaning that it won't remove whitespaces that are left behind a blocked ad, or apply any sorts of cosmetic filtering. Many of the more complicated ads can't be blocked on DNS level (or rather, they can, but only by blocking the entire domains which are being used for other purposes).  An example of difference between DNS filtering and network filtering It's not possible to know the origin of a DNS request, which means you can't distinguish between different apps on the DNS level. This harms the statistics and makes it impossible to create app-specific filtering rules. We recommend to use DNS filtering in addition to network filtering, not instead of it, whenever possible. "},{"title":"DNS filtering rules syntax","type":0,"sectionRef":"#","url":"general/dns-filtering-syntax/","content":"","keywords":""},{"title":"Introduction​","type":1,"pageTitle":"DNS filtering rules syntax","url":"general/dns-filtering-syntax/#introduction","content":"You can use AdGuard DNS filtering rules syntax to make the rules more flexible, so they can block content according to your preferences. AdGuard DNS filtering rules syntax can be used in different AdGuard products such as AdGuard Home, AdGuard DNS, AdGuard for Windows/Mac/Android. There are three different approaches to writing hosts blocklists: Adblock-style syntax: the modern approach to writing filtering rules based on using a subset of the Adblock-style rule syntax. This way blocklists are compatible with browser ad blockers. /etc/hosts syntax: the old, tried-and-true approach that uses the same syntax that operating systems do for their hosts files. Domains-only syntax: a simple list of domain names. If you are creating a blocklist, we recommend using the Adblock-style syntax. It has a couple of important advantages over the old-style syntax: Blocklists size. Using pattern matching allows you to have a single rule instead of hundreds of /etc/hosts entries. Compatibility. Your blocklist will be compatible with browser ad blockers, and it will be easier to share rules with a browser filter list. Extensibility. For the last decade the Adblock-style syntax has greatly evolved, and we don't see why we can't extend it even more and provide additional features for network-wide blockers. If you're maintaining an /etc/hosts-style blocklist or if you maintain multiple filter lists regardless of their type, we provide a tool that can be used to compile blocklists. We called it Hostlist compiler and we use it ourselves to create AdGuard DNS filter. "},{"title":"Basic Examples​","type":1,"pageTitle":"DNS filtering rules syntax","url":"general/dns-filtering-syntax/#basic-examples","content":"||example.org^: block access to the example.org domain and all its subdomains, like www.example.org. @@||example.org^: unblock access to the example.org domain and all its subdomains. 1.2.3.4 example.org: (attention, old /etc/hosts-style syntax) in AdGuard Home, respond with 1.2.3.4 to queries for the example.org domain but not its subdomains. In Private AdGuard DNS, block access to example.org. www.example.org remains allowed. In AdGuard Home, using the unspecified IP address (0.0.0.0) or a local address (127.0.0.1 and alike) for a host is basically the same as blocking that host. # Returns the IP address 1.2.3.4 for example.org. 1.2.3.4 example.org # Blocks example.com by responding with 0.0.0.0. 0.0.0.0 example.com example.org: a simple domain rule. Blocks example.org domain but not its subdomains. www.example.org remains allowed. ! Here goes a comment and # Also a comment: comments. /REGEX/: block access to the domains matching the specified regular expression. "},{"title":"Adblock-Style Syntax​","type":1,"pageTitle":"DNS filtering rules syntax","url":"general/dns-filtering-syntax/#adblock-style-syntax","content":"This is a subset of the traditional Adblock-style syntax which is used by browser ad blockers.  rule = [&quot;@@&quot;] pattern [ &quot;$&quot; modifiers ] modifiers = [modifier0, modifier1[, ...[, modifierN]]]  pattern: the hostname mask. Every hostname is matched against this mask. The pattern can also contain special characters, which are described below. @@: the marker that is used in the exception rules. Start your rule with this marker if you want to turn off filtering for the matching hostnames. modifiers: parameters that clarify the rule. They may limit the scope of the rule or even completely change the way it works. "},{"title":"Special Characters​","type":1,"pageTitle":"DNS filtering rules syntax","url":"general/dns-filtering-syntax/#special-characters","content":"*: the wildcard character. It is used to represent any set of characters. This can also be an empty string or a string of any length. ||: matches the beginning of a hostname, including any subdomain. For instance, ||example.org matches example.org and test.example.org but not testexample.org. ^: the separator character. Unlike browser ad blocking, there's nothing to separate in a hostname, so the only purpose of this character is to mark the end of the hostname. |: a pointer to the beginning or the end of the hostname. The value depends on the character placement in the mask. For example, the rule ample.org| corresponds to example.org but not to example.org.com. |example corresponds to example.org but not to test.example. "},{"title":"Regular Expressions​","type":1,"pageTitle":"DNS filtering rules syntax","url":"general/dns-filtering-syntax/#regular-expressions","content":"If you want even more flexibility in making rules, you can use regular expressions instead of the default simplified matching syntax. If you want to use a regular expression, the pattern has to look like this: pattern = &quot;/&quot; regexp &quot;/&quot;  Examples: /example.*/ will block hosts matching the example.* regexp. @@/example.*/$important will unblock hosts matching the example.* regexp. Note that this rule also implies the important modifier. "},{"title":"Comments​","type":1,"pageTitle":"DNS filtering rules syntax","url":"general/dns-filtering-syntax/#comments","content":"Any line that starts with an exclamation mark or a hash sign is a comment and it will be ignored by the filtering engine. Comments are usually placed above rules and used to describe what a rule does. Example: ! This is a comment. # This is also a comment.  "},{"title":"Rule Modifiers​","type":1,"pageTitle":"DNS filtering rules syntax","url":"general/dns-filtering-syntax/#rule-modifiers","content":"You can change the behavior of a rule by adding modifiers. Modifiers must be located at the end of the rule after the $ character and be separated by commas. Examples:  ||example.org^ is the matching pattern. $ is the delimiter, which signals that the rest of the rule are modifiers. important is the modifier. You may want to use multiple modifiers in a rule. Separate them by commas in this case: ||example.org^$client=127.0.0.1,dnstype=A ||example.org^ is the matching pattern. $ is the delimiter, which signals that the rest of the rule are modifiers. client=127.0.0.1 is the client modifier with its value, 127.0.0.1, is the delimiter. And finally, dnstype=A is the dnstype modifier with its value, A. NOTE: If a rule contains a modifier not listed in this document, the whole rule must be ignored. This way we avoid false-positives when people are trying to use unmodified browser ad blockers' filter lists like EasyList or EasyPrivacy. client​ The client modifier allows specifying clients this rule is applied to. There are two main ways to identify a client: By their IP address or CIDR prefix. This way works for all kinds of clients. By their name. This way only works for persistent clients (in AdGuard Home) and devices (in Private AdGuard DNS), which you have manually added. NOTE: In AdGuard Home, ClientIDs are not currently supported, only names are. If you have added a client with the name “My Client” and ClientID my-client spell your modifier as $client='My Client' as opposed to $client=my-client. The syntax is: $client=value1|value2|...  You can also exclude clients by adding a ~ character before the value. In this case, the rule is not be applied to this client's DNS requests. $client=~value1  Client names usually contain spaces or other special characters, which is why you should enclose the name in quotes. Both single and double ASCII quotes are supported. Use the backslash (\\) to escape quotes (&quot; and '), commas (,), and pipes (|). NOTE: When excluding a client, you must keep ~ out of the quotes. Examples: @@||*^$client=127.0.0.1: unblock everything for localhost. ||example.org^$client='Frank\\'s laptop': block example.org for the client named Frank's laptop only. Note that quote (') in the name must be escaped. ||example.org^$client=~'Mary\\'s\\, John\\'s\\, and Boris\\'s laptops': block example.org for everyone except for the client named Mary's, John's, and Boris's laptops. Note that comma (,) must be escaped as well. ||example.org^$client=~Mom|~Dad|Kids: block example.org for Kids, but not for Mom and Dad. This example demonstrates how to specify multiple clients in one rule. ||example.org^$client=192.168.0.0/24: block example.org for all clients with IP addresses in the range from 192.168.0.0 to 192.168.0.255. denyallow​ You can use the denyallow modifier to exclude domains from the blocking rule. To add multiple domains to one rule, use the | character as a separator. The syntax is: $denyallow=domain1|domain2|...  This modifier allows avoiding creating unnecessary exception rules when our blocking rule covers too many domains. You may want to block everything save for a couple of TLD domains. You could use the standard approach, i.e. rules like this: ! Block everything. /.*/ ! Unblock a couple of TLDs. @@||com^ @@||net^  The problem with this approach is that this way you will also unblock tracking domains that are located on those TLDs (i.e. google-analytics.com). Here's how to solve this with denyallow: *$denyallow=com|net  Examples: *$denyallow=com|net: block everything save for *.com and *.net. @@*$denyallow=com|net: unblock everything save for *.com and *.net. ||example.org^$denyallow=sub.example.org. block example.org and *.example.org but don't block sub.example.org. dnstype​ The dnstype modifier allows specifying DNS request or response type on which this rule will be triggered. The syntax is: $dnstype=value1|value2|... $dnstype=~value1|~value2|~...  The names of the types are case-insensitive, but are validated against a set of actual DNS resource record (RR) types. Do not combine exclusion rules with inclusion ones. This: $dnstype=~value1|value2  is equivalent to this: $dnstype=value2  Examples: ||example.org^$dnstype=AAAA: block DNS queries for the IPv6 addresses of example.org. ||example.org^$dnstype=~A|~CNAME: only allow A and CNAME DNS queries for example.org, block out the rest. NOTE: Before version v0.108.0, AdGuard Home would use the type of the request to filter the response records, as opposed to the type of the response record itself. That caused issues, since that meant that you could not write rules that would allow certain CNAME records in responses in A and AAAA requests. In v0.108.0 that behaviour was changed, so now this: ||canon.example.com^$dnstype=~CNAME  allows you to avoid filtering of the following response: ANSWERS: -&gt; example.com canonical name = canon.example.com. ttl = 60 -&gt; canon.example.com internet address = 1.2.3.4 ttl = 60  dnsrewrite​ The dnsrewrite response modifier allows replacing the content of the response to the DNS request for the matching hosts. Note that this modifier in AdGuard Home works in all rules, but in Private AdGuard DNS — only in custom ones. Rules with the dnsrewrite response modifier have higher priority than other rules in AdGuard Home. The shorthand syntax is: $dnsrewrite=1.2.3.4 $dnsrewrite=abcd::1234 $dnsrewrite=example.net $dnsrewrite=REFUSED  The keywords MUST be in all caps (e.g. NOERROR). Keyword rewrites take precedence over the other and will result in an empty response with an appropriate response code. The full syntax is of the form RCODE;RRTYPE;VALUE: $dnsrewrite=NOERROR;A;1.2.3.4 $dnsrewrite=NOERROR;AAAA;abcd::1234 $dnsrewrite=NOERROR;CNAME;example.net $dnsrewrite=REFUSED;;  The $dnsrewrite modifier with the NOERROR response code may also has empty RRTYPE and VALUE fields. The CNAME one is special because AdGuard Home will resolve the host and add its info to the response. That is, if example.net has IP 1.2.3.4, and the user has this in their filter rules: ||example.com^$dnsrewrite=example.net ! Or: ||example.com^$dnsrewrite=NOERROR;CNAME;example.net  then the response will be something like: $ nslookup example.com my.adguard.local  Server: my.adguard.local Address: 127.0.0.1#53 Non-authoritative answer: example.com canonical name = example.net. Name: example.net Address: 1.2.3.4  Next, the CNAME rewrite. After that, all other records' values are summed as one response, so this: ||example.com^$dnsrewrite=NOERROR;A;1.2.3.4 ||example.com^$dnsrewrite=NOERROR;A;1.2.3.5  will result in a response with two A records. Currently supported RR types with examples: ||4.3.2.1.in-addr.arpa^$dnsrewrite=NOERROR;PTR;example.net. adds a PTRrecord for reverse DNS. Reverse DNS requests for 1.2.3.4 to the DNS server will result in example.net. NOTE: the IP MUST be in reverse order. See RFC 1035. ||example.com^$dnsrewrite=NOERROR;A;1.2.3.4 adds an A record with the value 1.2.3.4. ||example.com^$dnsrewrite=NOERROR;AAAA;abcd::1234 adds an AAAA record with the value abcd::1234. ||example.com^$dnsrewrite=NOERROR;CNAME;example.org adds a CNAME record. See explanation above. ||example.com^$dnsrewrite=NOERROR;HTTPS;32 example.com alpn=h3 adds an HTTPS record. Only a subset of parameter values is supported: values must be contiguous and, where a value-list is expected, only one value is currently supported: ipv4hint=127.0.0.1 // Supported. ipv4hint=&quot;127.0.0.1&quot; // Unsupported. ipv4hint=127.0.0.1,127.0.0.2 // Unsupported. ipv4hint=&quot;127.0.0.1,127.0.0.2&quot; // Unsupported. This will be changed in the future. ||example.com^$dnsrewrite=NOERROR;MX;32 example.mail adds an MX record with precedence value 32 and exchange value example.mail. ||example.com^$dnsrewrite=NOERROR;SVCB;32 example.com alpn=h3 adds a SVCB value. See the HTTPS example above. ||example.com^$dnsrewrite=NOERROR;TXT;hello_world adds a TXT record with the value hello_world. ||_svctype._tcp.example.com^$dnsrewrite=NOERROR;SRV;10 60 8080 example.com adds an SRV record with priority value 10, weight value 60, port8080, and target value example.com. ||example.com^$dnsrewrite=NXDOMAIN;; responds with an NXDOMAIN code. $dnstype=AAAA,denyallow=example.org,dnsrewrite=NOERROR;; responds with an empty NOERROR answers for all AAAA requests except the ones for example.org. Exception rules remove one or all rules: @@||example.com^$dnsrewrite removes all DNS rewrite rules. @@||example.com^$dnsrewrite=1.2.3.4 removes the DNS rewrite rule that adds an A record with the value 1.2.3.4. important​ The important modifier applied to a rule increases its priority over any other rule without the modifier. Even over basic exception rules. Examples: In this example: ||example.org^$important @@||example.org^ ||example.org^$important will block all requests to *.example.org despite the exception rule. In this example: ||example.org^$important @@||example.org^$important the exception rule also has the important modifier, so it will work. badfilter​ The rules with the badfilter modifier disable other basic rules to which they refer. It means that the text of the disabled rule should match the text of the badfilter rule (without the badfilter modifier). Examples: ||example.com$badfilter disables ||example.com. @@||example.org^$badfilter disables @@||example.org^. NOTE: The badfilter modifier currently doesn't work with /etc/hosts-style rules. 127.0.0.1 example.org$badfilter will not disable the original 127.0.0.1 example.org rule. ctag​ The ctag modifier can only be used in AdGuard Home. It allows to block domains only for specific types of DNS client tags. You can assign tags to clients in the AdGuard Home UI. In the future, we plan to assign tags automatically by analyzing the behavior of each client. The syntax is: $ctag=value1|value2|...  If one of client's tags matches the ctag values, this rule applies to the client. The syntax for exclusion is: $ctag=~value1|~value2|...  If one of client's tags matches the exclusion ctag values, this rule doesn't apply to the client. Examples: ||example.org^$ctag=device_pc|device_phone: block example.org for clients tagged as device_pc or device_phone. ||example.org^$ctag=~device_phone: block example.org for all clients except those tagged as device_phone. The list of allowed tags: By device type: device_audio: audio devices.device_camera: cameras.device_gameconsole: game consoles.device_laptop: laptops,device_nas: NAS (Network-attached Storages).device_pc: PCs.device_phone: phones.device_printer: printers.device_securityalarm: security alarms.device_tablet: tablets.device_tv: TVs.device_other: other devices. By operating system: os_android: Android.os_ios: iOS.os_linux: Linux.os_macos: macOS.os_windows: Windows.os_other: other OSes. By user group: user_admin: administrators.user_regular: regular users.user_child: children. "},{"title":"/etc/hosts-Style Syntax​","type":1,"pageTitle":"DNS filtering rules syntax","url":"general/dns-filtering-syntax/#etc-hosts-syntax","content":"For each host a single line should be present with the following information: IP_address canonical_hostname [aliases...]  Fields of the entries are separated by any number of space or tab characters. Text from the # character until the end of the line is a comment and is ignored. Hostnames may contain only alphanumeric characters, hyphen-minus signs (-), and periods (.). They must begin with an alphabetic character and end with an alphanumeric character. Optional aliases provide for name changes, alternate spellings, shorter hostnames, or generic hostnames (for example, localhost). Example: # This is a comment 127.0.0.1 example.org example.info 127.0.0.1 example.com 127.0.0.1 example.net # this is also a comment  In AdGuard Home, the IP addresses are used to respond to DNS queries for these domains. In Private AdGuard DNS, these addresses are simply blocked. "},{"title":"Domains-Only Syntax​","type":1,"pageTitle":"DNS filtering rules syntax","url":"general/dns-filtering-syntax/#domains-only-syntax","content":"A simple list of domain names, one name per line. Example: # This is a comment example.com example.org example.net # this is also a comment  If a string is not a valid domain (e.g. *.example.org), AdGuard Home will consider it to be an Adblock-style rule. "},{"title":"Hostlists Compiler​","type":1,"pageTitle":"DNS filtering rules syntax","url":"general/dns-filtering-syntax/#hostlists-compiler","content":"If you are maintaining a blocklist and use different sources in it, Hostlists compiler may be useful to you. It is a simple tool that makes it easier to compile a hosts blocklist compatible with AdGuard Home, Private AdGuard DNS or any other AdGuard product with DNS filtering. What it's capable of: Compile a single blocklist from multiple sources. Exclude the rules you don't need. Cleanup the resulting list: deduplicate, remove invalid rules, and compress the list. "},{"title":"Credits and Acknowledgements","type":0,"sectionRef":"#","url":"miscellaneous/acknowledgements/","content":"","keywords":""},{"title":"AdGuard DNS​","type":1,"pageTitle":"Credits and Acknowledgements","url":"miscellaneous/acknowledgements/#adguard-dns","content":"DNS module by Miek Gieben: https://github.com/miekg/dnsGCache module by Jun Kimura: https://github.com/bluele/gcacheGo-Cache module by Patrick Mylund Nielsen: https://github.com/patrickmn/go-cacheGofumpt program by Daniel Martí: mvdan.cc/gofumptQUIC-Go module by Lucas Clemente: https://github.com/lucas-clemente/quic-goStaticcheck program by Dominik Honnef: https://staticcheck.io "},{"title":"AdGuard API and Websites​","type":1,"pageTitle":"Credits and Acknowledgements","url":"miscellaneous/acknowledgements/#adguard-api-and-websites","content":"Symfony: http://symfony.com/React: https://reactjs.org/Vue: https://vuejs.org/PostgreSQL: https://www.postgresql.org/Spring https://spring.io/ClickHouse: https://clickhouse.com/Logstash: https://github.com/elastic/logstash "},{"title":"Private AdGuard DNS beta test","type":0,"sectionRef":"#","url":"miscellaneous/beta-testing/","content":"","keywords":""},{"title":"How to become a beta tester​","type":1,"pageTitle":"Private AdGuard DNS beta test","url":"miscellaneous/beta-testing/#how-to-become-a-beta-tester","content":"To become a beta tester of Private AdGuard DNS go to the AdGuard DNS website, click the 'Join beta' button in the upper right corner, sign in through social media or an existing AdGuard account. That's it: now you can set up your Pivate AdGuard DNS, use the service and send us reports on how it works. "},{"title":"How to report a bug​","type":1,"pageTitle":"Private AdGuard DNS beta test","url":"miscellaneous/beta-testing/#how-to-report-a-bug","content":"Let’s imagine it happened — you spotted a bug. Or maybe you just want to share your suggestion with developers? Anyway, there are several ways to let us know: Go to forum.adguard.com and post there a new thread (or find an existing one) in the 'Beta Testing' category of the forum. Make sure to read forum rules first; Go to the AdGuard DNS repository, create a new issue there and describe the bug/feature request in detail. The above methods are the most preferred, but you can use others if necessary: Find us on various social media platforms, like Facebook, Reddit, etc. However, this is not the most efficient way to discuss technical matters. Email our support team from the Support tab in the app or write directly to support@adguard.com. "},{"title":"Known DNS Providers","type":0,"sectionRef":"#","url":"general/dns-providers/","content":"","keywords":""},{"title":"AdGuard DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#adguard-dns","content":"AdGuard DNS is an alternative solution for ad blocking, privacy protection, and parental control. It provides the number of necessary protection features against online ads, trackers, and phishing, no matter what platform and device you use. Default​ These servers provide blocking ads, tracking and phishing Protocol\tAddress\tDNS, IPv4\t94.140.14.14 and 94.140.15.15\tAdd to AdGuard DNS, IPv6\t2a10:50c0::ad1:ff and 2a10:50c0::ad2:ff\tAdd to AdGuard DNS-over-HTTPS\thttps://dns.adguard.com/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dns.adguard.com\tAdd to AdGuard DNS-over-QUIC\tquic://dns.adguard.com\tAdd to AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt.default.ns1.adguard.com IP: 94.140.14.14:5443\tAdd to AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt.default.ns1.adguard.com IP: [2a10:50c0::ad1:ff]:5443\tAdd to AdGuard Family Protection​ These servers provide the Default features + Blocking adult websites + Safe search Protocol\tAddress\tDNS, IPv4\t94.140.14.15 and 94.140.15.16\tAdd to AdGuard DNS, IPv6\t2a10:50c0::bad1:ff and 2a10:50c0::bad2:ff\tAdd to AdGuard DNS-over-HTTPS\thttps://dns-family.adguard.com/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dns-family.adguard.com\tAdd to AdGuard DNS-over-QUIC\tquic://dns-family.adguard.com\tAdd to AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt.family.ns1.adguard.com IP: 94.140.14.15:5443\tAdd to AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt.family.ns1.adguard.com IP: [2a10:50c0::bad1:ff]:5443\tAdd to AdGuard Non-filtering​ These servers provide a secure and reliable connection, but they don't filter anything like the &quot;Default&quot; and &quot;Family protection&quot; servers. Protocol\tAddress\tDNS, IPv4\t94.140.14.140 and 94.140.14.141\tAdd to AdGuard DNS, IPv6\t2a10:50c0::1:ff and 2a10:50c0::2:ff\tAdd to AdGuard DNS-over-HTTPS\thttps://dns-unfiltered.adguard.com/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dns-unfiltered.adguard.com\tAdd to AdGuard DNS-over-QUIC\tquic://dns-unfiltered.adguard.com\tAdd to AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt.unfiltered.ns1.adguard.com IP: 94.140.14.140:5443\tAdd to AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt.unfiltered.ns1.adguard.com IP: [2a10:50c0::1:ff]:5443\tAdd to AdGuard "},{"title":"Yandex DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#yandex-dns","content":"Yandex.DNS is a free recursive DNS service. Yandex.DNS' servers are located in Russia, CIS countries, and Western Europe. Users' requests are processed by the nearest data center which provides high connection speeds. Basic​ In &quot;Basic&quot; mode, there is no traffic filtering Protocol\tAddress\tDNS, IPv4\t77.88.8.8 and 77.88.8.1\tAdd to AdGuard DNS, IPv6\t2a02:6b8::feed:0ff and 2a02:6b8:0:1::feed:0ff\tAdd to AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.browser.yandex.net IP: 77.88.8.78:15353\tAdd to AdGuard Safe​ In &quot;Safe&quot; mode, protection from infected and fraudulent sites is provided Protocol\tAddress\tDNS, IPv4\t77.88.8.88 and 77.88.8.2\tAdd to AdGuard DNS, IPv6\t2a02:6b8::feed:bad and 2a02:6b8:0:1::feed:bad\tAdd to AdGuard Family​ In &quot;Family&quot; mode, protection from infected, fraudulent and adult sites is provided Protocol\tAddress\tDNS, IPv4\t77.88.8.3 and 77.88.8.7\tAdd to AdGuard DNS, IPv6\t2a02:6b8::feed:a11 and 2a02:6b8:0:1::feed:a11\tAdd to AdGuard "},{"title":"CleanBrowsing​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#cleanbrowsing","content":"Cleanbrowsing is a DNS service which provides customizable filtering. This service offers a safe way to browse the web without inappropriate content. Family Filter​ Blocks access to all adult, pornographic and explicit sites, including proxy &amp; VPN domains and mixed content sites Protocol\tAddress\tDNS, IPv4\t185.228.168.168 and 185.228.169.168\tAdd to AdGuard DNS, IPv6\t2a0d:2a00:1:: and 2a0d:2a00:2::\tAdd to AdGuard DNSCrypt, IPv4\tProvider: cleanbrowsing.org IP: 185.228.168.168:8443\tAdd to AdGuard DNSCrypt, IPv6\tProvider: cleanbrowsing.org IP: [2a0d:2a00:1::]:8443\tAdd to AdGuard DNS-over-HTTPS\thttps://doh.cleanbrowsing.org/doh/family-filter/\tAdd to AdGuard DNS-over-TLS\ttls://family-filter-dns.cleanbrowsing.org\tAdd to AdGuard Adult Filter​ Less restrictive than the Family filter, it only blocks access to adult content and malicious and phishing domains Protocol\tAddress\tDNS, IPv4\t185.228.168.10 and 185.228.169.11\tAdd to AdGuard DNS, IPv6\t2a0d:2a00:1::1 and 2a0d:2a00:2::1\tAdd to AdGuard DNSCrypt, IPv4\tProvider: cleanbrowsing.org IP: 185.228.168.10:8443\tAdd to AdGuard DNSCrypt, IPv6\tProvider: cleanbrowsing.org IP: [2a0d:2a00:1::1]:8443\tAdd to AdGuard DNS-over-HTTPS\thttps://doh.cleanbrowsing.org/doh/adult-filter/\tAdd to AdGuard DNS-over-TLS\ttls://adult-filter-dns.cleanbrowsing.org\tAdd to AdGuard Security Filter​ Blocks phishing, spam and malicious domains Protocol\tAddress\tDNS, IPv4\t185.228.168.9 and 185.228.169.9\tAdd to AdGuard DNS, IPv6\t2a0d:2a00:1::2 and 2a0d:2a00:2::2\tAdd to AdGuard DNS-over-HTTPS\thttps://doh.cleanbrowsing.org/doh/security-filter/\tAdd to AdGuard DNS-over-TLS\ttls://security-filter-dns.cleanbrowsing.org\tAdd to AdGuard "},{"title":"Comodo Secure DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#comodo-secure-dns","content":"Comodo Secure DNS is a domain name resolution service that resolves your DNS requests through worldwide network of DNS servers. Removes excessive ads and protects from phishing and spyware. Protocol\tAddress\tDNS, IPv4\t8.26.56.26 and 8.20.247.20\tAdd to AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.shield-2.dnsbycomodo.com IP: 8.20.247.2\tAdd to AdGuard "},{"title":"Neustar Recursive DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#neustar-recursive-dns","content":"Neustar Recursive DNS is a free cloud-based recursive DNS service that delivers fast and reliable access to sites and online applications with built-in security and threat intelligence. Reliability &amp; Performance 1​ These servers provide reliable and fast DNS lookups without blocking any specific categories Protocol\tAddress\tDNS, IPv4\t156.154.70.1 and 156.154.71.1\tAdd to AdGuard DNS, IPv6\t2610:a1:1018::1 and 2610:a1:1019::1\tAdd to AdGuard Reliability &amp; Performance 2*​ These servers provide reliable and fast DNS lookups without blocking any specific categories and also prevent redirecting NXDomain (Non-existent Domain) responses to a landing page Protocol\tAddress\tDNS, IPv4\t156.154.70.5 and 156.154.71.5\tAdd to AdGuard DNS, IPv6\t2610:a1:1018::5 and 2610:a1:1019::5\tAdd to AdGuard Threat Protection​ These servers provide protection against malicious domains and also include &quot;Reliability &amp; Performance&quot; features Protocol\tAddress\tDNS, IPv4\t156.154.70.2 and 156.154.71.2\tAdd to AdGuard DNS, IPv6\t2610:a1:1018::2 and 2610:a1:1019::2\tAdd to AdGuard Family Secure​ These servers provide blocking access to mature content and also include &quot;Reliability &amp; Performance&quot; + &quot;Threat Protection&quot; features Protocol\tAddress\tDNS, IPv4\t156.154.70.3 and 156.154.71.3\tAdd to AdGuard DNS, IPv6\t2610:a1:1018::3 and 2610:a1:1019::3\tAdd to AdGuard Business Secure​ These servers provide blocking unwanted and time-wasting content and also include &quot;Reliability &amp; Performance&quot; + &quot;Threat Protection&quot; + &quot;Family Secure&quot; features Protocol\tAddress\tDNS, IPv4\t156.154.70.4 and 156.154.71.4\tAdd to AdGuard DNS, IPv6\t2610:a1:1018::4 and 2610:a1:1019::4\tAdd to AdGuard "},{"title":"Cisco OpenDNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#cisco-opendns","content":"Cisco OpenDNS is a service which extends the DNS by incorporating features such as content filtering and phishing protection with a zero downtime. Standard​ DNS servers with custom filtering that protects your device from malware Protocol\tAddress\tDNS, IPv4\t208.67.222.222 and 208.67.220.220\tAdd to AdGuard DNS, IPv6\t2620:119:35::35 and 2620:119:53::53\tAdd to AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.opendns.com IP: 208.67.220.220\tAdd to AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.opendns.com IP: [2620:0:ccc::2]\tAdd to AdGuard DNS-over-HTTPS\thttps://doh.opendns.com/dns-query\tAdd to AdGuard FamilyShield​ OpenDNS servers that provide adult content blocking Protocol\tAddress\tDNS, IPv4\t208.67.222.123 and 208.67.220.123\tAdd to AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.opendns.com IP: 208.67.220.123\tAdd to AdGuard DNS-over-HTTPS\thttps://doh.familyshield.opendns.com/dns-query\tAdd to AdGuard "},{"title":"Google DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#google-dns","content":"Google DNS is a free, global DNS resolution service that you can use as an alternative to your current DNS provider. Protocol\tAddress\tDNS, IPv4\t8.8.8.8 and 8.8.4.4\tAdd to AdGuard DNS, IPv6\t2001:4860:4860::8888 and 2001:4860:4860::8844\tAdd to AdGuard DNS-over-HTTPS\thttps://dns.google/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dns.google\tAdd to AdGuard "},{"title":"Cloudflare DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#cloudflare-dns","content":"Cloudflare DNS is a free and fast DNS service which functions as a recursive name server providing domain name resolution for any host on the Internet. Standard​ Protocol\tAddress\tDNS, IPv4\t1.1.1.1 and 1.0.0.1\tAdd to AdGuard DNS, IPv6\t2606:4700:4700::1111 and 2606:4700:4700::1001\tAdd to AdGuard DNS-over-HTTPS, IPv4\thttps://dns.cloudflare.com/dns-query\tAdd to AdGuard DNS-over-HTTPS, IPv6\thttps://dns.cloudflare.com/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://1dot1dot1dot1.cloudflare-dns.com\tAdd to AdGuard Malware blocking only​ Protocol\tAddress\tDNS, IPv4\t1.1.1.2 and 1.0.0.2\tAdd to AdGuard DNS, IPv6\t2606:4700:4700::1112 and 2606:4700:4700::1002\tAdd to AdGuard DNS-over-HTTPS\thttps://security.cloudflare-dns.com/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://security.cloudflare-dns.com\tAdd to AdGuard Malware and adult content blocking​ Protocol\tAddress\tDNS, IPv4\t1.1.1.3 and 1.0.0.3\tAdd to AdGuard DNS, IPv6\t2606:4700:4700::1113 and 2606:4700:4700::1003\tAdd to AdGuard DNS-over-HTTPS, IPv4\thttps://family.cloudflare-dns.com/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://family.cloudflare-dns.com\tAdd to AdGuard "},{"title":"Quad9 DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#quad9-dns","content":"Quad9 DNS is a free, recursive, anycast DNS platform that provides high-performance, privacy, and security protection from phishing and spyware. Quad9 servers don't provide a censoring component. Standard​ Regular DNS servers which provide protection from phishing and spyware. They include blocklists, DNSSEC validation, and other security features. Protocol\tAddress\tDNS, IPv4\t9.9.9.9 and 149.112.112.112\tAdd to AdGuard DNS, IPv6\t2620:fe::fe IP: 2620:fe::fe:9\tAdd to AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.quad9.net IP: 9.9.9.9:8443\tAdd to AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.quad9.net IP: [2620:fe::fe]:8443\tAdd to AdGuard DNS-over-HTTPS\thttps://dns.quad9.net/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dns.quad9.net\tAdd to AdGuard Unsecured​ Unsecured DNS servers provide no security blocklist, no DNSSEC, No EDNS client-Subnet Protocol\tAddress\tDNS, IPv4\t9.9.9.10 and 149.112.112.10\tAdd to AdGuard DNS, IPv6\t2620:fe::10 IP: 2620:fe::fe:10\tAdd to AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.quad9.net IP: 9.9.9.10:8443\tAdd to AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.quad9.net IP: [2620:fe::fe:10]:8443\tAdd to AdGuard DNS-over-HTTPS\thttps://dns10.quad9.net/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dns10.quad9.net\tAdd to AdGuard ECS support​ EDNS Client-Subnet is a method that includes components of end-user IP address data in requests that are sent to authoritative DNS servers. It provides security blocklist, DNSSEC, EDNS Client-Subnet. Protocol\tAddress\tDNS, IPv4\t9.9.9.11 and 149.112.112.11\tAdd to AdGuard DNS, IPv6\t2620:fe::11 IP: 2620:fe::fe:11\tAdd to AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.quad9.net IP: 9.9.9.11:8443\tAdd to AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.quad9.net IP: [2620:fe::11]:8443\tAdd to AdGuard DNS-over-HTTPS\thttps://dns11.quad9.net/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dns11.quad9.net\tAdd to AdGuard "},{"title":"Verisign Public DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#verisign-public-dns","content":"Verisign Public DNS is a free DNS service that offers improved DNS stability and security over other alternatives. Verisign respects users' privacy: it doesn't sell public DNS data to third parties and redirect users' queries to serve them any ads. Protocol\tAddress\tDNS, IPv4\t64.6.64.6 or 64.6.65.6\tAdd to AdGuard DNS, IPv6\t2620:74:1b::1:1 or 2620:74:1c::2:2\tAdd to AdGuard "},{"title":"SWITCH DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#switch-dns","content":"SWITCH DNS is a swiss public DNS service provided by switch.ch Protocol\tAddress\tDNS, IPv4\tProvider: dns.switch.ch IP: 130.59.31.248\tAdd to AdGuard DNS, IPv6\tProvider: dns.switch.ch IPv6: 2001:620:0:ff::2\tAdd to AdGuard DNS-over-HTTPS\thttps://dns.switch.ch/dns-query\tAdd to AdGuard DNS-over-TLS\tHostname: tls://dns.switch.ch IP: 130.59.31.248 and IPv6: 2001:620:0:ff::2\tAdd to AdGuard "},{"title":"Dyn DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#dyn-dns","content":"Dyn DNS is a free alternative DNS service by Dyn Protocol\tAddress\tDNS, IPv4\t216.146.35.35 and 216.146.36.36\tAdd to AdGuard "},{"title":"DNS.WATCH​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#dnswatch","content":"DNS.WATCH is a fast and free server without logging with a privacy protection feature. Protocol\tAddress\tDNS, IPv4\t84.200.69.80 and 84.200.70.40\tAdd to AdGuard DNS, IPv6\t2001:1608:10:25::1c04:b12f and 2001:1608:10:25::9249:d69b\tAdd to AdGuard "},{"title":"FutureDNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#futuredns","content":"FutureDNS is a privacy-friendly DNS service with OpenNIC support that blocks ads, trackers, malware and does not log any data. Anycast Network\tAddress\tDNS-over-HTTPS\thttps://dns.futuredns.me/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dns.futuredns.me\tAdd to AdGuard DNS-over-QUIC\tquic://dns.futuredns.me\tAdd to AdGuard Location\tAddress - IPv4London, UK\t52.56.224.201 Milan, Italy\t15.161.11.3 Stockholm, Sweden\t13.49.168.178 Ashburn, USA\t52.0.69.145 San Francisco, USA\t13.56.204.161 Montreal, Canada\t3.97.137.100 Singapore\t54.254.82.60 Tokyo, Japan\t54.199.94.55 Mumbai, India\t3.7.162.217 São Paulo, Brazil\t177.71.191.153 "},{"title":"SkyDNS RU​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#skydns-ru","content":"SkyDNS solutions for content filtering and internet security. Protocol\tAddress\tDNS, IPv4\t193.58.251.251\tAdd to AdGuard "},{"title":"Comss.ru DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#comssru-dns","content":"Comss.one DNS is a fast and secure DNS servers with protection against ads, tracking and phishing. West DNS Server (Main)​ Protocol\tAddress\tDNS, IPv4\t92.38.152.163 and 93.115.24.204\tAdd to AdGuard DNS, IPv6\t2a03:90c0:56::1a5 and 2a02:7b40:5eb0:e95d::1\tAdd to AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.dns.comss.one IP: 94.176.233.93:443\tAdd to AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.dns.comss.one IP: [2a02:7b40:5eb0:e95d::1]:443\tAdd to AdGuard DNS-over-HTTPS\thttps://dns.comss.one/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dns.comss.one\tAdd to AdGuard East DNS Server (Siberia and Far East)​ Protocol\tAddress\tDNS, IPv4\t92.223.109.31 and 91.230.211.67\tAdd to AdGuard DNS, IPv6\t2a03:90c0:b5::1a and 2a04:2fc0:39::47\tAdd to AdGuard DNS-over-HTTPS\thttps://dns.east.comss.one/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dns.east.comss.one\tAdd to AdGuard "},{"title":"Safe DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#safe-dns","content":"Safe DNS is a global anycast network which consists of servers located throughout the world — both Americas, Europe, Africa, Australia, and the Far East to ensure a fast and reliable DNS resolving from any point worldwide. Protocol\tAddress\tDNS, IPv4\t195.46.39.39 and 195.46.39.40\tAdd to AdGuard "},{"title":"CIRA Canadian Shield DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#cira-canadian-shield-dns","content":"CIRA Shield DNS protects against theft of personal and financial data. Keep viruses, ransomware, and other malware out of your home. Private​ In &quot;Private&quot; mode, DNS resolution only Protocol\tAddress\tDNS, IPv4\t149.112.121.10 and 149.112.122.10\tAdd to AdGuard DNS, IPv6\t2620:10A:80BB::10 and 2620:10A:80BC::10\tAdd to AdGuard DNS-over-HTTPS\thttps://private.canadianshield.cira.ca/dns-query\tAdd to AdGuard DNS-over-TLS - Private\tHostname: tls://private.canadianshield.cira.ca IP: 149.112.121.10 and IPv6: 2620:10A:80BB::10\tAdd to AdGuard Protected​ In &quot;Protected&quot; mode, malware and phishing protection Protocol\tAddress\tDNS, IPv4\t149.112.121.20 and 149.112.122.20\tAdd to AdGuard DNS, IPv6\t2620:10A:80BB::20 and 2620:10A:80BC::20\tAdd to AdGuard DNS-over-HTTPS\thttps://protected.canadianshield.cira.ca/dns-query\tAdd to AdGuard DNS-over-TLS - Protected\tHostname: tls://protected.canadianshield.cira.ca IP: 149.112.121.20 and IPv6: 2620:10A:80BB::20\tAdd to AdGuard Family​ In &quot;Family&quot; mode, Protected + blocking adult content Protocol\tAddress\tDNS, IPv4\t149.112.121.30 and 149.112.122.30\tAdd to AdGuard DNS, IPv6\t2620:10A:80BB::30 and 2620:10A:80BC::30\tAdd to AdGuard DNS-over-HTTPS\thttps://family.canadianshield.cira.ca/dns-query\tAdd to AdGuard DNS-over-TLS - Family\tHostname: tls://protected.canadianshield.cira.ca IP: 149.112.121.30 and IPv6: 2620:10A:80BB::30\tAdd to AdGuard "},{"title":"OpenNIC DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#opennic-dns","content":"OpenNIC DNS is a free alternative DNS service by OpenNIC Project Protocol\tAddress\tDNS, IPv4\t185.121.177.177 and 169.239.202.202\tAdd to AdGuard DNS, IPv6\t2a05:dfc7:5::53 and 2a05:dfc7:5353::53\tAdd to AdGuard "},{"title":"BlahDNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#blahdns","content":"BlahDNS A small hobby DNS project. No logs, Ethereum Name Service, DNSSEC ready &amp; Filtered ads, trackers, malwares Finland DNS Server​ Protocol\tAddress\tDNS-over-TLS, IPv4\tHostname: tls://dot-fi.blahdns.com IP: 95.216.212.177\tAdd to AdGuard DNS-over-HTTPS, IPv4\tHostname: https://doh-fi.blahdns.com/dns-query IP: 95.216.212.177\tAdd to AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.blahdns.com IP: 95.216.212.177:8443\tAdd to AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.blahdns.com IP: 2a01:4f9:c010:43ce::1:8443\tAdd to AdGuard Japan DNS Server​ Protocol\tAddress\tDNS-over-TLS, IPv4\tHostname: tls://dot-jp.blahdns.com IP: 139.162.112.47\tAdd to AdGuard DNS-over-HTTPS, IPv4\tHostname: https://doh-jp.blahdns.com/dns-query\tAdd to AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.blahdns.com IP: 139.162.112.47:8443\tAdd to AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.blahdns.com IP: [2400:8902::f03c:92ff:fe27:344b]:8443\tAdd to AdGuard Germany DNS Server​ Protocol\tAddress\tDNS-over-TLS, IPv4\tHostname: tls://dot-de.blahdns.com IP: 159.69.198.101\tAdd to AdGuard DNS-over-HTTPS, IPv4\tHostname: https://doh-de.blahdns.com/dns-query IP: 159.69.198.101\tAdd to AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.blahdns.com IP: 159.69.198.101:8443\tAdd to AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.blahdns.com IP: 2a01:4f8:1c1c:6b4b::1:8443\tAdd to AdGuard "},{"title":"Snopyta DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#snopyta-dns","content":"Snopyta DNS is a privacy friendly DNS service run by Noah Seefried. Protocol\tAddress\tDNS-over-HTTPS\thttps://fi.doh.dns.snopyta.org/dns-query IP: 95.216.24.230 and IPv6: 2a01:4f9:2a:1919::9301\tAdd to AdGuard DNS-over-TLS\ttls://fi.dot.dns.snopyta.org IP: 95.216.24.230 and IPv6: 2a01:4f9:2a:1919::9301\tAdd to AdGuard "},{"title":"DNS for Family​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#dns-for-family","content":"DNS for Family aims to block adult websites. It helps to children and everyone for safely surf internet without worrying about get followed to harmful websites. Protocol\tAddress\tDNS-over-HTTPS\thttps://dns-doh.dnsforfamily.com/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dns-dot.dnsforfamily.com\tAdd to AdGuard DNS, IPv4\t94.130.180.225 and 78.47.64.161\tAdd to AdGuard DNS, IPv6\t2a01:4f8:1c0c:40db::1 and 2a01:4f8:1c17:4df8::1\tAdd to AdGuard DNSCrypt, IPv4\tProvider: dnsforfamily.com IP: 94.130.180.225\tAdd to AdGuard DNSCrypt, IPv6\tProvider: dnsforfamily.com IP: [2a01:4f8:1c0c:40db::1]\tAdd to AdGuard "},{"title":"CZ.NIC ODVR​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#cznic-odvr","content":"CZ.NIC ODVR CZ.NIC ODVR are Open DNSSEC Validating Resolvers. CZ.NIC neither collect any personal data nor gather information on pages where devices sends personal data. Protocol\tAddress\tDNS, IPv4\t193.17.47.1 and 185.43.135.1\tAdd to AdGuard DNS, IPv6\t2001:148f:ffff::1 and 2001:148f:fffe::1\tAdd to AdGuard DNS-over-HTTPS\thttps://odvr.nic.cz/doh\tAdd to AdGuard DNS-over-TLS\ttls://odvr.nic.cz\tAdd to AdGuard "},{"title":"Ali DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#ali-dns","content":"Ali DNS is a free recursive DNS service that committed to providing fast, stable and secure DNS resolution for the majority of Internet users. It includes AliGuard facility to protect users from various attacks and threats. Protocol\tAddress\tDNS, IPv4\t223.5.5.5 and 223.6.6.6\tAdd to AdGuard DNS, IPv6\t2400:3200::1 and 2400:3200:baba::1\tAdd to AdGuard DNS-over-HTTPS\thttps://dns.alidns.com/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dns.alidns.com\tAdd to AdGuard "},{"title":"CFIEC Public DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#cfiec-public-dns","content":"IPv6-based anycast DNS service with strong security capabilities and protection from spyware, malicious websites. It support DNS64 to provide domain name resolution only for IPv6 users. Protocol\tAddress\tDNS, IPv6\t240C::6666 and 240C::6644\tAdd to AdGuard DNS-over-HTTPS\thttps://dns.cfiec.net/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dns.cfiec.net\tAdd to AdGuard "},{"title":"Nawala Childprotection DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#nawala-childprotection-dns","content":"Nawala Childprotection DNS is an anycast Internet filtering system that protects children from inappropriate websites and abusive contents. Protocol\tAddress\tDNS, IPv4\t180.131.144.144 and 180.131.145.145\tAdd to AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.nawala.id IP: 180.131.144.144\tAdd to AdGuard "},{"title":"360 Secure DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#360-secure-dns","content":"360 Secure DNS is a industry-leading recursive DNS service with advanced network security threat protection. Protocol\tAddress\tDNS, IPv4\t101.226.4.6 and 218.30.118.6\tAdd to AdGuard DNS, IPv4\t123.125.81.6 and 140.207.198.6\tAdd to AdGuard DNS-over-HTTPS\thttps://doh.360.cn/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dot.360.cn\tAdd to AdGuard "},{"title":"IIJ.JP DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#iijjp-dns","content":"IIJ.JP is a public DNS service operated by Internet Initiative Japan. It also blocks child abuse content. Protocol\tAddress\tDNS-over-HTTPS\thttps://public.dns.iij.jp/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://public.dns.iij.jp\tAdd to AdGuard "},{"title":"DNSPod Public DNS+​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#dnspod-public-dns","content":"DNSPod Public DNS+ is a privacy-friendly DNS provider with years of experience in domain name resolution services development, it aims to provide users more rapid, accurate and stable recursive resolution service. Protocol\tAddress\tDNS, IPv4\t119.29.29.29 and 119.28.28.28\tAdd to AdGuard DNS-over-HTTPS\thttps://doh.pub/dns-query\tAdd to AdGuard DNS-over-HTTPS\thttps://dns.pub/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dot.pub\tAdd to AdGuard "},{"title":"114DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#114dns","content":"114DNS is a professional and high-reliability DNS service. Normal​ Block ads and annoying websites Protocol\tAddress\tDNS, IPv4\t114.114.114.114 and 114.114.115.115\tAdd to AdGuard Safe​ Blocks phishing, malicious and other unsafe websites Protocol\tAddress\tDNS, IPv4\t114.114.114.119 and 114.114.115.119\tAdd to AdGuard Family​ These servers block adult websites and inappropriate contents. Protocol\tAddress\tDNS, IPv4\t114.114.114.110 and 114.114.115.110\tAdd to AdGuard "},{"title":"Quad101​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#quad101","content":"Quad101 is a free alternative DNS service without logging by TWNIC (Taiwan Network Information Center) Protocol\tAddress\tDNS, IPv4\t101.101.101.101 and 101.102.103.104\tAdd to AdGuard DNS, IPv6\t2001:de4::101 and 2001:de4::102\tAdd to AdGuard DNS-over-HTTPS\thttps://dns.twnic.tw/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://101.101.101.101\tAdd to AdGuard "},{"title":"OneDNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#onedns","content":"OneDNS is a secure, fast, free niche DNS service with malicious domains blocking facility. Pure Edition​ Protocol\tAddress\tDNS, IPv4\t117.50.10.10 and 52.80.52.52\tAdd to AdGuard Block Edition​ Protocol\tAddress\tDNS, IPv4\t117.50.11.11 and 52.80.66.66\tAdd to AdGuard "},{"title":"Privacy-First DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#privacy-first-dns","content":"Privacy-First DNS block over 140K ads, ad-tracking, malware and phishing domains!. No logging, no ECS, DNSSEC validation, free! Singapore DNS Server​ | Protocol | Address | Location | | | -------------- | -------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------- | | | DNS, IPv4 | 174.138.21.128 | Add to AdGuard | | | DNS, IPv6 | 2400:6180:0:d0::5f6e:4001 | Add to AdGuard | | | DNSCrypt, IPv4 | Provider: 2.dnscrypt-cert.dns.tiar.app IP: 174.138.21.128 | Add to AdGuard | | | DNSCrypt, IPv6 | Provider: 2.dnscrypt-cert.dns.tiar.app IP: [2400:6180:0:d0::5f6e:4001] | Add to AdGuard | | | DNS-over-HTTPS | https://doh.tiarap.org/dns-query (cached via third-party) | Add to AdGuard | | | DNS-over-HTTPS | https://doh.tiar.app/dns-query | Add to AdGuard | | | DNS-over-QUIC | quic://doh.tiar.app | Add to AdGuard | | | DNS-over-TLS | tls://dot.tiar.app | Add to AdGuard | | Japan DNS Server​ Protocol\tAddress\tDNS, IPv4\t172.104.93.80\tAdd to AdGuard DNS, IPv6\t2400:8902::f03c:91ff:feda:c514\tAdd to AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.jp.tiar.app IP: 172.104.93.80\tAdd to AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.jp.tiar.app IP: [2400:8902::f03c:91ff:feda:c514]\tAdd to AdGuard DNS-over-HTTPS\thttps://jp.tiarap.org/dns-query\tAdd to AdGuard DNS-over-HTTPS\thttps://jp.tiar.app/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://jp.tiar.app\tAdd to AdGuard "},{"title":"FreeDNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#freedns","content":"FreeDNS is an open, free and public DNS Service provided by Virtexxa cloud services. No DNS redirects, no logging. Protocol\tAddress\tDNS, IPv4\t172.104.237.57 and 172.104.49.100\tAdd to AdGuard DNS, IPv4\t37.235.1.174 and 37.235.1.177\tAdd to AdGuard "},{"title":"Freenom World​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#freenom-world","content":"Freenom World is a free anonymous DNS resolver by Freenom World Protocol\tAddress\tDNS, IPv4\t80.80.80.80 and 80.80.81.81\tAdd to AdGuard "},{"title":"OSZX DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#oszx-dns","content":"OSZX DNS is a small Ad-Blocking DNS hobby project. OSZX server​ These servers provide no ad blocking, keep no logs, and have DNSSEC enabled Protocol\tAddress\tDNS, IPv4\t51.38.83.141\tAdd to AdGuard DNS, IPv6\t2001:41d0:801:2000::d64\tAdd to AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.oszx.co IP: 51.38.83.141:5353\tAdd to AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.oszx.co IP: [2001:41d0:801:2000::d64]:5353\tAdd to AdGuard DNS-over-HTTPS\thttps://dns.oszx.co/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dns.oszx.co\tAdd to AdGuard PumpleX server​ These servers provide no ad blocking, keep no logs, and have DNSSEC enabled Protocol\tAddress\tDNS, IPv4\t51.38.82.198\tAdd to AdGuard DNS, IPv6\t2001:41d0:801:2000::1b28\tAdd to AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.pumplex.com IP: 51.38.82.198:5353\tAdd to AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.pumplex.com IP: [2001:41d0:801:2000::1b28]:5353\tAdd to AdGuard DNS-over-HTTPS\thttps://dns.pumplex.com/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dns.pumplex.com\tAdd to AdGuard "},{"title":"Applied Privacy DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#applied-privacy-dns","content":"Applied Privacy DNS operates DNS privacy services to help protect DNS traffic and to help diversify the DNS resolver landscape offering modern protocols. Protocol\tAddress\tDNS-over-HTTPS\thttps://doh.applied-privacy.net/query\tAdd to AdGuard DNS-over-TLS\ttls://dot1.applied-privacy.net\tAdd to AdGuard "},{"title":"Strongarm DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#strongarm-dns","content":"Strongarm DNS is a DNS service by Strongarm that prevents people from interacting with malicious content Protocol\tAddress\tDNS, IPv4\t54.174.40.213 and 52.3.100.184\tAdd to AdGuard "},{"title":"SafeSurfer DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#safesurfer-dns","content":"SafeSurfer DNS is a DNS service by SafeSurfer that protects your device from harmful and adult contents. Protocol\tAddress\tDNS, IPv4\t104.155.237.225 and 104.197.28.121\tAdd to AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.safesurfer.co.nz IP: 104.197.28.121\tAdd to AdGuard "},{"title":"DeCloudUs DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#decloudus-dns","content":"DeCloudUs DNS A secure, private, open-source DNS resolver with malware protection, ad blocking and without logs. Degoogle and Ungoogle your phone, tablet, and computer. Protocol\tAddress\tDNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.DeCloudUs-test IP: 78.47.212.211:9443\tAdd to AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.DeCloudUs-test IP: [2a01:4f8:13a:250b::30]:9443\tAdd to AdGuard DNS-over-HTTPS\thttps://dns.decloudus.com/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dns.decloudus.com\tAdd to AdGuard "},{"title":"Lelux DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#lelux-dns","content":"Lelux.fi is run by Elias Ojala. Finland. Protocol\tAddress\tDNS-over-HTTPS\thttps://resolver-eu.lelux.fi/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://resolver-eu.lelux.fi\tAdd to AdGuard "},{"title":"Captnemo DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#captnemo-dns","content":"Captnemo DNS is a server running out of a Digital Ocean droplet in BLR1 region. Maintained by Abhay Rana aka Nemo. Protocol\tAddress\tDNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.captnemo.in IP: 139.59.48.222:4434\tAdd to AdGuard "},{"title":"DNS.SB​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#dnssb","content":"DNS.SB provide free DNS service with no logging, DNSSEC enabled. Protocol\tAddress\tDNS, IPv4\t185.222.222.222 and 45.11.45.11\tAdd to AdGuard DNS, IPv6\t2a09:: and 2a11::\tAdd to AdGuard DNS-over-HTTPS\thttps://doh.dns.sb/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://185.222.222.222\tAdd to AdGuard "},{"title":"DNS Forge​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#dns-forge","content":"DNS Forge is a redundant DNS resolver with an ad blocker and no logging provided by adminforge. Protocol\tAddress\tDNS, IPv4\t176.9.93.198 and 176.9.1.117\tAdd to AdGuard DNS, IPv6\t2a01:4f8:151:34aa::198 and 2a01:4f8:141:316d::117\tAdd to AdGuard DNS-over-HTTPS\thttps://dnsforge.de/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dnsforge.de\tAdd to AdGuard "},{"title":"Fondation Restena DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#fondation-restena-dns","content":"Restena DNS servers provided by Restena Foundation Protocol\tAddress\tDNS-over-HTTPS\thttps://kaitain.restena.lu/dns-query IP: 158.64.1.29 and IPv6: 2001:a18:1::29\tAdd to AdGuard DNS-over-TLS\ttls://kaitain.restena.lu IP: 158.64.1.29 and IPv6: 2001:a18:1::29\tAdd to AdGuard "},{"title":"fvz DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#fvz-dns","content":"fvz DNS is a Fusl's public primary OpenNIC Tier2 Anycast DNS Resolver Protocol\tAddress\tDNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.dnsrec.meo.ws IP: 185.121.177.177:5353\tAdd to AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.dnsrec.meo.ws IP: 169.239.202.202:5353\tAdd to AdGuard "},{"title":"FFMUC DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#ffmuc-dns","content":"FFMUC free DNS servers provided by Freifunk München Protocol\tAddress\tDNS-over-TLS, IPv4\tHostname: tls://dot.ffmuc.net\tAdd to AdGuard DNS-over-HTTPS, IPv4\tHostname: https://doh.ffmuc.net/dns-query\tAdd to AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.ffmuc.net IP: 5.1.66.255:8443\tAdd to AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.ffmuc.net IP: [2001:678:e68:f000::]:8443\tAdd to AdGuard "},{"title":"Digitale Gesellschaft DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#digitale-gesellschaft-dns","content":"Digitale Gesellschaft is a public resolver operated by the Digital Society. Hosted in Zurich, Switzerland Protocol\tAddress\tDNS-over-HTTPS\thttps://dns.digitale-gesellschaft.ch/dns-query IP: 185.95.218.42 and IPv6: 2a05:fc84::42\tAdd to AdGuard DNS-over-TLS\ttls://dns.digitale-gesellschaft.ch IP: 185.95.218.43 and IPv6: 2a05:fc84::43\tAdd to AdGuard "},{"title":"LibreDNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#libredns","content":"LibreDNS is a public encrypted DNS service run by LibreOps. Protocol\tAddress\tDNS, IPv4\t88.198.92.222\tAdd to AdGuard DNS-over-HTTPS\thttps://doh.libredns.gr/dns-query\tAdd to AdGuard DNS-over-HTTPS\thttps://doh.libredns.gr/ads\tAdd to AdGuard DNS-over-TLS\ttls://dot.libredns.gr IP: 116.202.176.26\tAdd to AdGuard "},{"title":"ibksturm DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#ibksturm-dns","content":"ibksturm DNS testing servers provided by ibksturm. OPENNIC, DNSSEC, no filtering, no logging Protocol\tAddress\tDNS-over-TLS, IPv4\tHostname: tls://ibksturm.synology.me IP: 83.77.85.7\tAdd to AdGuard DNS-over-HTTPS, IPv4\tHostname: https://ibksturm.synology.me/dns-query IP: 178.82.102.190\tAdd to AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.ibksturm IP: 83.77.85.7:8443\tAdd to AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.ibksturm IP: [2a02:1205:5055:de60:b26e:bfff:fe1d:e19b]:8443\tAdd to AdGuard "},{"title":"DNS Privacy​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#dns-privacy","content":"A collaborative open project to promote, implement and deploy DNS Privacy. DNS servers run by the Stubby developers Protocol\tAddress\tDNS-over-TLS\tHostname: tls://getdnsapi.net IP: 185.49.141.37 and IPv6: 2a04:b900:0:100::37\tAdd to AdGuard DNS-over-TLS\tProvider: Surfnet Hostname tls://dnsovertls.sinodun.com IP: 145.100.185.15 and IPv6: 2001:610:1:40ba:145:100:185:15\tAdd to AdGuard DNS-over-TLS\tProvider: Surfnet Hostname tls://dnsovertls1.sinodun.com IP: 145.100.185.16 and IPv6: 2001:610:1:40ba:145:100:185:16\tAdd to AdGuard Other DNS servers with 'no logging' policy Protocol\tAddress\tDNS-over-TLS\tProvider: UncensoredDNS Hostname tls://unicast.censurfridns.dk IP: 89.233.43.71 and IPv6: 2a01:3a0:53:53::0\tAdd to AdGuard DNS-over-TLS\tProvider: UncensoredDNS Hostname tls://anycast.censurfridns.dk IP: 91.239.100.100 and IPv6: 2001:67c:28a4::\tAdd to AdGuard DNS-over-TLS\tProvider: dkg Hostname tls://dns.cmrg.net IP: 199.58.81.218and IPv6: 2001:470:1c:76d::53\tAdd to AdGuard DNS-over-TLS, IPv4\tHostname: tls://dns.larsdebruin.net IP: 51.15.70.167\tAdd to AdGuard DNS-over-TLS\tHostname tls://dns-tls.bitwiseshift.net IP: 81.187.221.24 and IPv6: 2001:8b0:24:24::24\tAdd to AdGuard DNS-over-TLS\tHostname tls://ns1.dnsprivacy.at IP: 94.130.110.185 and IPv6: 2a01:4f8:c0c:3c03::2\tAdd to AdGuard DNS-over-TLS\tHostname tls://ns2.dnsprivacy.at IP: 94.130.110.178 and IPv6: 2a01:4f8:c0c:3bfc::2\tAdd to AdGuard DNS-over-TLS, IPv4\tHostname: tls://dns.bitgeek.in IP: 139.59.51.46\tAdd to AdGuard DNS-over-TLS\tHostname tls://dns.neutopia.org IP: 89.234.186.112 and IPv6: 2a00:5884:8209::2\tAdd to AdGuard DNS-over-TLS\tProvider: Go6Lab Hostname tls://privacydns.go6lab.si IPv6: 2001:67c:27e4::35\tAdd to AdGuard DNS-over-TLS\tHostname: tls://dot.securedns.eu IP: 146.185.167.43 and IPv6: 2a03:b0c0:0:1010::e9a:3001\tAdd to AdGuard DNS servers with minimal logging/limitations. These servers use some logging, self-signed certs or no support for strict mode. Protocol\tAddress\tDNS-over-TLS\tProvider: NIC Chile Hostname dnsotls.lab.nic.cl IP: 200.1.123.46 and IPv6: 2001:1398:1:0:200:1:123:46\tAdd to AdGuard DNS-over-TLS\tProvider: OARC Hostname tls-dns-u.odvr.dns-oarc.net IP: 184.105.193.78 and IPv6: 2620:ff:c000:0:1::64:25\tAdd to AdGuard "},{"title":"AhaDNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#ahadns","content":"AhaDNS A zero-logging and ad-blocking DNS service provided by Fredrik Pettersson. Blitz​ Configurable filtering worldwide DoH-only variant Protocol\tAddress\tDNS-over-HTTPS, uncensored\thttps://blitz.ahadns.com\tAdd to AdGuard DNS-over-HTTPS, OISD filter\thttps://blitz.ahadns.com/1:1\tAdd to AdGuard DNS-over-HTTPS, OISD &amp; Energized porn filter\thttps://blitz.ahadns.com/1:1.12\tAdd to AdGuard Netherlands​ Protocol\tAddress\tDNS, IPv4\t5.2.75.75\tAdd to AdGuard DNS, IPv6\t2a04:52c0:101:75::75\tAdd to AdGuard DNS-over-HTTPS\thttps://doh.nl.ahadns.net/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dot.nl.ahadns.net\tAdd to AdGuard India​ Protocol\tAddress\tDNS, IPv4\t45.79.120.233\tAdd to AdGuard DNS, IPv6\t2400:8904:e001:43::43\tAdd to AdGuard DNS-over-HTTPS\thttps://doh.in.ahadns.net/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dot.in.ahadns.net\tAdd to AdGuard Los Angeles​ Protocol\tAddress\tDNS, IPv4\t45.67.219.208\tAdd to AdGuard DNS, IPv6\t2a04:bdc7:100:70::70\tAdd to AdGuard DNS-over-HTTPS\thttps://doh.la.ahadns.net/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dot.la.ahadns.net\tAdd to AdGuard New York​ Protocol\tAddress\tDNS, IPv4\t185.213.26.187\tAdd to AdGuard DNS, IPv6\t2a0d:5600:33:3::3\tAdd to AdGuard DNS-over-HTTPS\thttps://doh.ny.ahadns.net/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dot.ny.ahadns.net\tAdd to AdGuard Poland​ Protocol\tAddress\tDNS-over-HTTPS\thttps://doh.pl.ahadns.net/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dot.pl.ahadns.net\tAdd to AdGuard Italy​ Protocol\tAddress\tDNS-over-HTTPS\thttps://doh.it.ahadns.net/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dot.it.ahadns.net\tAdd to AdGuard Spain​ Protocol\tAddress\tDNS-over-HTTPS\thttps://doh.es.ahadns.net/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dot.es.ahadns.net\tAdd to AdGuard Norway​ Protocol\tAddress\tDNS-over-HTTPS\thttps://doh.no.ahadns.net/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dot.no.ahadns.net\tAdd to AdGuard Chicago​ Protocol\tAddress\tDNS-over-HTTPS\thttps://doh.chi.ahadns.net/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dot.chi.ahadns.net\tAdd to AdGuard "},{"title":"Seby DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#seby-dns","content":"Seby DNS is a privacy focused DNS service provided by Sebastian Schmidt. No Logging, DNSSEC validation. DNS Server 1​ Protocol\tAddress\tDNS, IPv4\t45.76.113.31\tAdd to AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.dns.seby.io IP: 45.76.113.31\tAdd to AdGuard DNS-over-TLS\ttls://dot.seby.io\tAdd to AdGuard "},{"title":"puntCAT DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#puntcat-dns","content":"puntCAT is physically located near Barcelona, Spain. puntCAT offers a public DNS service, free, secure, close and that respects your privacy. Protocol\tAddress\tDNS, IPv4\t109.69.8.51\tAdd to AdGuard DNS, IPv6\t2a00:1508:0:4::9\tAdd to AdGuard "},{"title":"DNSlify DNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#dnslify-dns","content":"DNSlify DNS operate public DNS resolvers to speed up requests, increase redundancy. The service is provided by Peerix Default​ These servers provide DNS resolution without traffic filtering. Protocol\tAddress\tDNS, IPv4\t185.235.81.1 and 185.235.81.2\tAdd to AdGuard DNS, IPv6\t2a0d:4d00:81::1 and 2a0d:4d00:81::2\tAdd to AdGuard DNS-over-HTTPS\thttps://doh.dnslify.com/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://doh.dnslify.com\tAdd to AdGuard Safe​ Safe mode guard against infected, fraudulent or bot sites. Protocol\tAddress\tDNS, IPv4\t185.235.81.3 and 185.235.81.4\tAdd to AdGuard DNS, IPv6\t2a0d:4d00:81::3 and 2a0d:4d00:81::4\tAdd to AdGuard Family​ Family mode offers protection by &quot;Safe&quot; resolvers and blocks adult sites. Protocol\tAddress\tDNS, IPv4\t185.235.81.5 and 185.235.81.6\tAdd to AdGuard DNS, IPv6\t2a0d:4d00:81::5 and 2a0d:4d00:81::6\tAdd to AdGuard "},{"title":"NextDNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#nextdns","content":"NextDNS provides publicly accessible non-filtering resolvers with no logging in addition to its freemium configurable filtering resolvers with optional logging. Ultra-low latency​ Protocol\tAddress\tDNS-over-HTTPS\thttps://dns.nextdns.io\tAdd to AdGuard DNS-over-TLS\ttls://dns.nextdns.io\tAdd to AdGuard Anycast​ Protocol\tAddress\tDNS-over-HTTPS\thttps://anycast.dns.nextdns.io\tAdd to AdGuard DNS-over-TLS\ttls://anycast.dns.nextdns.io\tAdd to AdGuard "},{"title":"RethinkDNS​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#rethinkdns","content":"RethinkDNS provides DNS-over-HTTPS service running as Cloudflare Worker and DNS-over-TLS service running as Fly.io Worker with configurable blocklists. Unfiltered​ Protocol\tAddress\tDNS-over-HTTPS\thttps://basic.rethinkdns.com/\tAdd to AdGuard DNS-over-TLS\ttls://max.rethinkdns.com\tAdd to AdGuard "},{"title":"ControlD​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#controld","content":"ControlD is public DNS service which provides ads,malware, and social media blocking. Block malware​ Protocol\tAddress\tDNS, IPv4\t76.76.2.1\tAdd to AdGuard DNS-over-HTTPS\thttps://freedns.controld.com/p1\tAdd to AdGuard DNS-over-TLS\ttls://p1.freedns.controld.com\tAdd to AdGuard Block malware + ads​ Protocol\tAddress\tDNS, IPv4\t76.76.2.2\tAdd to AdGuard DNS-over-HTTPS\thttps://freedns.controld.com/p2\tAdd to AdGuard DNS-over-TLS\ttls://p2.freedns.controld.com\tAdd to AdGuard Block malware + ads + social​ Protocol\tAddress\tDNS, IPv4\t76.76.2.3\tAdd to AdGuard DNS-over-HTTPS\thttps://freedns.controld.com/p3\tAdd to AdGuard DNS-over-TLS\ttls://p3.freedns.controld.com\tAdd to AdGuard "},{"title":"Mullvad​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#mullvad","content":"Mullvad provides publicly accessible DNS with QNAME minimization, endpoints located in Australia, Germany, Singapore, Sweden, United Kingdom and United States (New York and Los Angeles). Non-filtering​ Protocol\tAddress\tDNS-over-HTTPS\thttps://doh.mullvad.net/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://doh.mullvad.net\tAdd to AdGuard Ad blocking​ Protocol\tAddress\tDNS-over-HTTPS\thttps://adblock.doh.mullvad.net/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://adblock.doh.mullvad.net\tAdd to AdGuard "},{"title":"Small personal resolvers​","type":1,"pageTitle":"Known DNS Providers","url":"general/dns-providers/#small-personal-resolvers","content":"In this section we list small, mostly personal DNS resolvers. They often have only one or very few servers and worse uptime than 'big' providers. We won't be able to proper monitor their availability. Use them at your own risk! Arapurayil​ Arapurayil is a personal DNS service hosted in Mumbai, India. Non-logging | Filters ads, trackers, phishing,etc | DNSSEC | QNAME Minimization | No EDNS Client-Subnet. Protocol\tAddress\tDNSCrypt, IPv4\tHost: 2.dnscrypt-cert.dns.arapurayil.com IP: 3.7.156.128\tAdd to AdGuard DNS-over-HTTPS\tHost: https://dns.arapurayil.com/dns-query\tAdd to AdGuard Dandelion Sprout's Official DNS Server​ Dandelion Sprout's Official DNS Server is a personal DNS service hosted in Trondheim, Norway, using an AdGuard Home infrastructure. Blocks more ads and malware than AdGuard DNS thanks to more advanced syntax, but goes easier on trackers, and blocks alt-right tabloids and most imageboards. Logging is used to improve its used filterlists (e.g. by unblocking sites that shouldn't have been blocked), and to determine the least bad times for server system updates. Protocol\tAddress\tDNS-over-HTTPS\thttps://dandelionsprout.asuscomm.com:2501/dns-query\tAdd to AdGuard DNS-over-TLS\ttls://dandelionsprout.asuscomm.com:853\tAdd to AdGuard DNS-over-QUIC\tquic://dandelionsprout.asuscomm.com:48582\tAdd to AdGuard DNS, IPv4\tVaries; see link above. DNS, IPv6\tVaries; see link above. DNSCrypt, IPv4\tVaries; see link above.\t "},{"title":"How to take a screenshot","type":0,"sectionRef":"#","url":"miscellaneous/take-screenshot/","content":"","keywords":""},{"title":"How to take a screenshot​","type":1,"pageTitle":"How to take a screenshot","url":"miscellaneous/take-screenshot/#how-to-take-a-screenshot","content":"Here you will find all the necessary hotkeys you should know in order to take screenshots on your computer or mobile device. "},{"title":"Android​","type":1,"pageTitle":"How to take a screenshot","url":"miscellaneous/take-screenshot/#android","content":"Taking a screenshot on an Android device can be done in various ways — depending on the device model and its manufacturer. Generally, you should use the following button combination for Android: Hold down at once the Volume Down and the Power buttons for 1–2 seconds Your Android device will capture the entire screen and save it as a photo. So, you can find the screenshot in a Screenshots folder in your Gallery. But, as it has been already said, there can be differences depending on a particular device. Let’s look at other possible combinations: Hold down at once Home and Power for 1–2 seconds;Hold down at once the Back and the Home buttons On Android 8 and later there is also a possibility to take a screenshot by placing your hand vertically along the left or right edge of your phone and swiping in from that edge with your hand touching the screen. If this method doesn’t work, check Settings &gt; Advanced features to enable Palm swipe to capture. Besides, you can always use any special applications for taking screenshots on your devices, for example — Screenshot Easy, Screenshot Ultimate, Screenshot Snap etc. "},{"title":"iOS​","type":1,"pageTitle":"How to take a screenshot","url":"miscellaneous/take-screenshot/#ios","content":"Any iOS device (barring ancient ones) lets you take a screenshot using standard tools. To take a screenshot on an iOS device, use the following combination: Press the Sleep/Wake (side) button and the Home button at the same time, then quickly release them and this one for iPhone X or later: Press the Sleep/Wake button and the Volume up button at the same time, then quickly release them Your iOS device will capture the entire screen and save it as a photo. You can find it in a standard Photo app. "},{"title":"Windows​","type":1,"pageTitle":"How to take a screenshot","url":"miscellaneous/take-screenshot/#windows","content":"To take a screenshot on Windows, press the PrtScn button On some notebooks you have to hold Fn and then press PrtScn instead. Please note: PrtScn (Print Screen) button can be differently abbreviated on various keyboards — PrntScrn, PrtScn, PrtScr or PrtSc. Windows captures the entire screen and copies it to the (invisible) clipboard. To take a screenshot of an active window, use the following combination: Hold down Alt and press PrtScn (or Fn + Alt + PrtScn on some laptops) To take a screenshot of a specific area, you should use the following combination: Hold down Win (the Windows button) and Shift and press S** After you take a screenshot, it will be saved in the clipboard. In most cases you will be able to paste it into a document that you are currently editing by using Ctrl + V button combination. Alternatively, if you need to save the screenshot into a file, you should open the standard Paint program (or any other app that can work with images). Paste your screenshot there using the same button combination or by clicking the Paste button (usually in the top left corner of the screen) and then save it. Windows 8 and 10 let you take a screenshot very quickly with a Win + PrtScn combination. As soon as you press these buttons, the screenshot will be automatically saved as a file to your Pictures -&gt; Screenshots Folder. There is also a dedicated program for taking screenshots called Snipping Tool that you can find via Start menu among standard programs of your computer. Snipping Tool lets you capture of any area of your desktop or the entire screen. After taking a screenshot using this program you can edit the picture and save it to any folder on your computer. Besides, you can also try using different apps for taking screenshots on your computer, like PicPick, Nimbus Screenshot, Screenshot Captor, Snipaste, Monosnap etc. "},{"title":"MacOS​","type":1,"pageTitle":"How to take a screenshot","url":"miscellaneous/take-screenshot/#macos","content":"To take a screenshot on Mac, use the following button combination: Press and hold together ⌘ Cmd + Shift + 3** Your Mac will capture the entire screen and save it as a file on the desktop. To take a screenshot of an active window, use the following combination: Press and hold together ⌘ Cmd + Shift + 4 + Space bar. The pointer will change to a camera icon. Click the window to capture it. Press the Esc button to cancel taking a screenshot To take a screenshot of a specific area, you should use the following combination: Press and hold together ⌘ Cmd + Shift + 4**. Drag the crosshair to select the needed area. Release your mouse or trackpad to take a screenshot, press the Esc button to cancel it. To take a screenshot of the Touch Bar (MacBook Pro) use the following combination: Hold down ⌘ Cmd + Shift + 6** Your Mac captures the entire Touch Bar and saves it as a file on the desktop. To copy a screenshot to the clipboard instead of saving it, hold down Ctrl together with any of the combinations above. Then you can paste the screenshot (from the clipboard) into a document or an image you are currently editing by using Cmd + V combination. You can also take screenshots by using Preview and choosing Take screenshot (of the selected area, window, or the entire screen). With Preview you can save your screenshots in JPG, TIFF, PDF, and other file formats. "},{"title":"Updating the Knowledge Base","type":0,"sectionRef":"#","url":"miscellaneous/update-kb/","content":"","keywords":""},{"title":"How to suggest a change or write a new article​","type":1,"pageTitle":"Updating the Knowledge Base","url":"miscellaneous/update-kb/#suggest-change","content":"You can suggest changes to current articles and add new ones to the Knowledge Base using the functionality of the GitHub mentioned above. If you are unfamiliar with principles of working with the platform, start by reading documentation in this section. Once you are ready to start, work in the KnowledgeBaseDNS repository. All texts in our Knowledge Base are written in Markdown markup language. Keep this in mind when editing or writing articles. Follow this link to learn more about Markdown syntax. The Knowledge Base website is buit using Docusaurus 2 — a modern static website generator. When suggesting changes or additions, take into account that all documents must comply with the principles of the platform. You can read about them in the guide available via this link. You can deploy this Knowledge Base locally to your computer to preview the changes you suggest. Detailed instructions on how to do this can be found in the README.md file on this Knowledge Base's GitHub page. "},{"title":"Translating articles​","type":1,"pageTitle":"Updating the Knowledge Base","url":"miscellaneous/update-kb/#translate-adguard","content":"Translation of the existing articles of the Knowledge Base is carried out on the Crowdin platform. All the details about translations and working with Crowdin can be found in the dedicated article of the AdGuard Ad Blocker Knowledge Base. When working on AdGuard DNS Knowledge Base articles, you may meet strings containing plural forms that you should translate with extra attention. In a separate article, we described in detail the difficulties that can arise when translating strings with plural forms, and gave extensive instructions on how to work with them on the Crowdin platform. "},{"title":"Working on open issues​","type":1,"pageTitle":"Updating the Knowledge Base","url":"miscellaneous/update-kb/#working-on-open-issues","content":"Sometimes there exist open tasks related to updating the Knowledge Base. You can help us speed up their completion the same way you would suggest any other changes to this Knowledge Base. Choose any issue that you find appealing and start working on it. If you have any questions — you can ask them right in the comments to that issue. "},{"title":"Private AdGuard DNS","type":0,"sectionRef":"#","url":"private-dns/overview/","content":"","keywords":""},{"title":"What is Private AdGuard DNS​","type":1,"pageTitle":"Private AdGuard DNS","url":"private-dns/overview/#what-is-private-adguard-dns","content":"Private AdGuard DNS is a DNS server that, in addition to benefits of a public DNS server (such as traffic encryption and domain blocklists), provides features like flexible customization, DNS statistics and parental control and is easily managed through a handy dashboard. "},{"title":"Why Private AdGuard DNS is needed​","type":1,"pageTitle":"Private AdGuard DNS","url":"private-dns/overview/#why-private-adguard-dns-is-needed","content":"Today, you can connect anything to the Internet: TVs, refrigerators, smart bulbs, or speakers. But along with the undeniable conveniences you get trackers and ads. A simple browser-based ad blocker will not protect you in this case, but AdGuard DNS, which you can set up to filter traffic, block content and trackers, has a system-wide effect. We already have public AdGuard DNS and AdGuard Home. These solutions work fine for some users, but for others, the public AdGuard DNS lacks the flexibility of configuration, while the AdGuard Home lacks simplicity. That's where private AdGuard DNS comes into play. It has the best of both worlds: it offers customizability, control and information - all through a simple easy-to-use dashboard. "},{"title":"The difference between Private and Public AdGuard DNS​","type":1,"pageTitle":"Private AdGuard DNS","url":"private-dns/overview/#the-difference-between-private-and-public-adguard-dns","content":"Here is a simple comparison of features available in Public AdGuard DNS and Private AdGuard DNS servers. Public AdGuard DNS\tPrivate AdGuard DNSDNS traffic encryption\tDNS traffic encryption Pre-determined domain blocklists\tCustomizable domain blocklists -\tCustom DNS filtering rules with import/export feature -\tRequest statistics (see where do your DNS requests go: which countries, which companies etc.) -\tDetailed query log -\tParental control "},{"title":"How to set up Private AdGuard DNS​","type":1,"pageTitle":"Private AdGuard DNS","url":"private-dns/overview/#how-to-set-up-private-adguard-dns","content":"Go to your AdGuard DNS dashboard (if not logged in, log in using your AdGuard account)Click “Connect device” and follow on-screen instructions Supported platforms: - Android - iOS - Windows - Mac - Linux - Routers - Gaming consoles "},{"title":"Private AdGuard DNS features​","type":1,"pageTitle":"Private AdGuard DNS","url":"private-dns/overview/#private-adguard-dns-features","content":""},{"title":"Blocklists management​","type":1,"pageTitle":"Private AdGuard DNS","url":"private-dns/overview/#blocklists-management","content":"With &quot;Blocklists&quot; feature you can set which domains you want to block and which you don't. Сhoose from wide variety of blocklists for different purposes.  "},{"title":"User rules​","type":1,"pageTitle":"Private AdGuard DNS","url":"private-dns/overview/#user-rules","content":"For times when pre-installed Blocklists with thousands of rules are not enough, we have a handy function called &quot;User rules&quot;. Here you can add custom rules manually to block/unblock a certain domain or import custom rules lists (check out DNS filtering rules syntax). You can export the lists.  "},{"title":"Statistics​","type":1,"pageTitle":"Private AdGuard DNS","url":"private-dns/overview/#statistics","content":"In &quot;Statistics&quot; tab you can see all the summarized statistics on DNS queries made by devices connected to your Private AdGuard DNS. It shows the total number and geography of requests, the number of blocked requests, the list of companies the requests were addressed to, requests types and top requested domains.  "},{"title":"Traffic destination​","type":1,"pageTitle":"Private AdGuard DNS","url":"private-dns/overview/#traffic-destination","content":"This feature shows you where DNS requests sent by your devices go. On top of seeing the map of request destinations, you can filter the information by date, device and country.  "},{"title":"Companies​","type":1,"pageTitle":"Private AdGuard DNS","url":"private-dns/overview/#companies","content":"This tab allows you to quickly check which companies send the most requests, and which companies have the most blocked requests.  "},{"title":"Query log​","type":1,"pageTitle":"Private AdGuard DNS","url":"private-dns/overview/#query-log","content":"This is a detailed log where you can check out the information on every single request and also sort requests by status, type, company, device, time, country.  "},{"title":"Parental control​","type":1,"pageTitle":"Private AdGuard DNS","url":"private-dns/overview/#parental-control","content":"To protect your child from online content you deem inappropriate, set up and activate the Parental control option. In addition to options such as &quot;adult content&quot; blocking and safe search, we've added the ability to manually specify domains for blocking and set a schedule for the Parental control to work accordingly.  In case you don't have Private AdGuard DNS yet, you can get it on the official website. "},{"title":"AdGuard DNS API","type":0,"sectionRef":"#","url":"private-dns/api/","content":"","keywords":""},{"title":"Authentication​","type":1,"pageTitle":"AdGuard DNS API","url":"private-dns/api/#authentication","content":""},{"title":"Generate Access token​","type":1,"pageTitle":"AdGuard DNS API","url":"private-dns/api/#generate-access-token","content":"Make a POST request for the following URL with the given params to generate the access_token: https://api.adguard-dns.io/oapi/v1/oauth_token Parameter\tDescriptionusername\tAccount email password\tAccount password mfa_token\tTwo-Factor authentication token (if enabled in account settings) In the response, you will get both access_token and refresh_token. The access_token will expire after some specified seconds (represented by the expires_in param in the response). You can regenerate a new access_token using the refresh_token (Refer: Generate Access Token from Refresh Token). The refresh_token is permanent. To revoke a refresh_token, refer: Revoking a Refresh Token. Example request​ $ curl 'https://api.adguard-dns.io/oapi/v1/oauth_token' -i -X POST \\ -H 'Content-Type: application/x-www-form-urlencoded' \\ -d 'username=user%40adguard.com' \\ -d 'password=********' \\ -d 'mfa_token=727810'  Example response​ { &quot;access_token&quot;: &quot;jTFho_aymtN20pZR5RRSQAzd81I&quot;, &quot;token_type&quot;: &quot;bearer&quot;, &quot;refresh_token&quot;: &quot;H3SW6YFJ-tOPe0FQCM1Jd6VnMiA&quot;, &quot;expires_in&quot;: 2620978 }  "},{"title":"Generate Access Token from Refresh Token​","type":1,"pageTitle":"AdGuard DNS API","url":"private-dns/api/#generate-access-token-from-refresh-token","content":"Access tokens have limited validity. Once it expires, your app will have to use the refresh token to request for a new access token. Make the following POST request with the given params to get a new access token: https://api.adguard-dns.io/oapi/v1/oauth_token Parameter\tDescriptionrefresh_token\tREFRESH TOKEN using which a new access token has to be generated. Example request​ $ curl 'https://api.adguard-dns.io/oapi/v1/oauth_token' -i -X POST \\ -H 'Content-Type: application/x-www-form-urlencoded' \\ -d 'refresh_token=H3SW6YFJ-tOPe0FQCM1Jd6VnMiA'  Example response​ { &quot;access_token&quot;: &quot;xQnT7GYT6Ag--3oY_EcOOdXe-I0&quot;, &quot;token_type&quot;: &quot;bearer&quot;, &quot;refresh_token&quot;: &quot;H3SW6YFJ-tOPe0FQCM1Jd6VnMiA&quot;, &quot;expires_in&quot;: 2627999 }  "},{"title":"Revoking a Refresh Token​","type":1,"pageTitle":"AdGuard DNS API","url":"private-dns/api/#revoking-a-refresh-token","content":"To revoke a refresh token, make the following POST request with the given params: https://api.adguard-dns.io/oapi/v1/revoke_token Request Example​ $ curl 'https://api.adguard-dns.com/oapi/v1/revoke_token' -i -X POST \\ -d 'token=H3SW6YFJ-tOPe0FQCM1Jd6VnMiA'  Parameter\tDescriptionrefresh_token\tREFRESH TOKEN which is to be revoked "},{"title":"Accessing API​","type":1,"pageTitle":"AdGuard DNS API","url":"private-dns/api/#accessing-api","content":"Once the access and the refresh tokens are generated, API calls can be made by passing the access token in the header. Header name should be AuthorizationHeader value should be Bearer {access_token} "},{"title":"API​","type":1,"pageTitle":"AdGuard DNS API","url":"private-dns/api/#api","content":""},{"title":"OpenAPI spec​","type":1,"pageTitle":"AdGuard DNS API","url":"private-dns/api/#openapi-spec","content":"OpenAPI specification is available at https://api.adguard-dns.io/static/swagger/openapi.json. You can use different tools to view the list of available API methods. For instance, you can open this file in https://editor.swagger.io/. "},{"title":"Feedback​","type":1,"pageTitle":"AdGuard DNS API","url":"private-dns/api/#feedback","content":"If you would like this API to be extended with new methods, please email us to devteam@adguard.com and let us know what you would like to be added. "},{"title":"Overview","type":0,"sectionRef":"#","url":"public-dns/overview/","content":"","keywords":""},{"title":"What is AdGuard DNS?​","type":1,"pageTitle":"Overview","url":"public-dns/overview/#what-is-adguard-dns","content":"AdGuard DNS is a free, privacy-oriented DNS resolver that provides secure connection and also can block tracking, ads, phishing and adult content (optionally). AdGuard DNS does not require installing any applications. It is easy to use and can be effortlessly set up on any device (smartphones, desktops, routers, game consoles, etc.). "},{"title":"Public AdGuard DNS servers​","type":1,"pageTitle":"Overview","url":"public-dns/overview/#public-adguard-dns-servers","content":"AdGuard DNS has three different public servers. &quot;Default&quot; server is for blocking ads, trackers, malware and phishing websites. &quot;Family protection&quot; does the same, but also blocks websites with adult content and enforces &quot;Safe search&quot; option in browsers that provide it. &quot;Non-filtering&quot; provides a secure and reliable connection but doesn't block anything. You can find detailed instructions on setting up AdGuard DNS on any device on our website. Each server supports different secure protocols: DNSCrypt, DNS-over-HTTPS (DoH), DNS-over-TLS (DoT), and DNS-over-QUIC (DoQ). "},{"title":"AdGuard DNS protocols​","type":1,"pageTitle":"Overview","url":"public-dns/overview/#adguard-dns-protocols","content":"Besides plain DNS (both IPv4 and IPv6) AdGuard DNS supports various encrypted protocols, so you can choose the one that suits you best. "},{"title":"DNSCrypt​","type":1,"pageTitle":"Overview","url":"public-dns/overview/#dnscrypt","content":"AdGuard DNS allows you to use a specific encrypted protocol — DNSCrypt. Thanks to it, all DNS requests are being encrypted, which protects you from possible request interception and subsequent eavesdropping and/or alteration. But compared to the DoH, DoT and DoQ protocols, DNSCrypt is considered obsolete and if possible we recommend using these protocols. "},{"title":"DNS-over-HTTPS (DoH) and DNS-over-TLS (DoT)​","type":1,"pageTitle":"Overview","url":"public-dns/overview/#dns-over-https-doh-and-dns-over-tls-dot","content":"DoH and DoT are modern secure DNS protocols that gain more and more popularity and will become the industry standards for the foreseeable future. Both are more reliable than DNSCrypt and both are supported by AdGuard DNS. "},{"title":"DNS-over-QUIC (DoQ)​","type":1,"pageTitle":"Overview","url":"public-dns/overview/#dns-over-quic-doq","content":"DNS-over-QUIC is a new DNS encryption protocol and AdGuard DNS is the first public resolver that supports it. Unlike DoH and DoT, it uses QUIC as a transport protocol and finally brings DNS back to its roots — working over UDP. It brings all the good things that QUIC has to offer — out-of-the-box encryption, reduced connection times, better performance when data packets are lost. Also, QUIC is supposed to be a transport-level protocol and there are no risks of metadata leaks that could happen with DoH. "},{"title":"How to flush DNS cache","type":0,"sectionRef":"#","url":"public-dns/solving-problems/how-to-flush-dns-cache/","content":"","keywords":""},{"title":"What is DNS cache?​","type":1,"pageTitle":"How to flush DNS cache","url":"public-dns/solving-problems/how-to-flush-dns-cache/#what-is-dns-cache","content":"DNS cache stores the IP addresses of visited sites on the local computer so that they load faster next time. Instead of doing a long DNS lookup, the system answers the queries with DNS records from the temporary DNS cache. The DNS cache contains so-called resource records (RRs), which are: Resource data (or rdata);Record type;Record name;TTL (time to live);Class;Resource data length. "},{"title":"When you might need to clear the cache​","type":1,"pageTitle":"How to flush DNS cache","url":"public-dns/solving-problems/how-to-flush-dns-cache/#when-you-might-need-to-clear-the-cache","content":"You regularly get a 404 error. For example, the website was transferred to another server, and its IP address has changed. To make the browser open the website from the new IP address, you need to remove the cached IP from the DNS cache. You want to improve your privacy. You want to protect yourself from hacker attacks and viruses. When the DNS cache is corrupted, your browser may redirect you to an IP address of a malicious website that an attacker inserted in your computer’s DNS records. "},{"title":"How to flush DNS cache on different OSs​","type":1,"pageTitle":"How to flush DNS cache","url":"public-dns/solving-problems/how-to-flush-dns-cache/#how-to-flush-dns-cache-on-different-oss","content":""},{"title":"macOS​","type":1,"pageTitle":"How to flush DNS cache","url":"public-dns/solving-problems/how-to-flush-dns-cache/#macos","content":"To clear the DNS cache on macOS, open the Terminal (you can find it by using the Spotlight search — to do that, press Command+Space and type Terminal) and enter the following command: sudo killall -HUP mDNSResponder On macOS Big Sur 11.2.0 and macOS Monterey 12.0.0, you may also use this command: sudo dscacheutil -flushcache After that, enter your administrator password to complete the process. "},{"title":"Windows​","type":1,"pageTitle":"How to flush DNS cache","url":"public-dns/solving-problems/how-to-flush-dns-cache/#windows","content":"To flush DNS cache on your Windows device, do the following: Load the Command Prompt as an administrator. You can find it in the Start Menu by typing command prompt or cmd. Then type ipconfig/flushdns and press Enter. You will see the line Successfully flushed the DNS Resolver Cache. Done! "},{"title":"Linux​","type":1,"pageTitle":"How to flush DNS cache","url":"public-dns/solving-problems/how-to-flush-dns-cache/#linux","content":"Linux does not have OS-level DNS caching unless a caching service such as Systemd Resolved, DNSMasq, BIND or Nscd is installed and running. The process of clearing the DNS cache depends on the Linux distribution and the caching service used. For each distribution you need to start a terminal window. Press Ctrl+Alt+T on your keyboard and use the corresponding command to clear the DNS cache for the service your Linux system is running. To find out which DNS resolver you're using, command sudo lsof -i :53 -S. Systemd Resolved​ To clear the Systemd Resolved DNS cache, type: sudo systemd-resolve --flush-caches On success, the command doesn’t return any message. DNSMasq​ To clear the DNSMasq cache, you need to restart it: sudo service dnsmasq restart Nscd​ To clear the Nscd cache, you also need to restart the service: sudo service nscd restart BIND​ To flush the BIND DNS cache, run the command: rndc flush Then you will need to reload BIND: rndc reload You will get the message that the server has been successfully reloaded. "},{"title":"Android​","type":1,"pageTitle":"How to flush DNS cache","url":"public-dns/solving-problems/how-to-flush-dns-cache/#android","content":"The easiest way to clear your DNS cache on your Android device is to turn the Airplane mode on and off. You can enable/disable the Airplane Mode in the Quick Settings pane. A hard reboot can also help flush the DNS cache for your device. In order to do that, press and hold the power button for at least 20 seconds. It will (usually) force your device to reboot manually and the DNS cache will be cleared. Another option is to reset the network settings of your device in the Settings app. Open Settings &gt; System &gt; Advanced &gt; Reset options &gt; Reset network settings and tap Reset Settings to confirm. Note: by doing that, you will lose connections to Wi-Fi routers and other specific network settings, including DNS servers customizations. You will need to reset them manually. "},{"title":"iOS​","type":1,"pageTitle":"How to flush DNS cache","url":"public-dns/solving-problems/how-to-flush-dns-cache/#ios","content":"There are different ways to clear the DNS cache on your iPad or iPhone. The simplest way is to activate the Airplane mode (for example, in the Control Center or in the Settings app) and to deactivate it again. The DNS cache will be flushed. Another option is to reset the network settings of your device in the Settings app. Open General, scroll down, find Reset and tap on Reset Network Settings. Note: by doing that, you will lose connections to Wi-Fi routers and other specific network settings, including DNS servers customizations. You will need to reset them manually. "}]