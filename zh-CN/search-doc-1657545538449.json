[{"title":"DNS 过滤","type":0,"sectionRef":"#","url":"general/dns-filtering/","content":"","keywords":""},{"title":"DNS 是什么？​","type":1,"pageTitle":"DNS 过滤","url":"general/dns-filtering/#dns-是什么","content":"DNS 是指“域名系统”。它的目标是将网站名称转换成浏览器能识别的 IP 地址。 因此，每次您访问网站，您的浏览器都能给特定服务器（DNS 服务器）发送请求。 该服务器会查看被请求的域名，并且用对应的 IP 地址响应。 Very schematically it can be represented like this:  当然，不仅是浏览器，所有发送任何网络请求的应用程序和软件也都是如此。 "},{"title":"DNS 过滤工作原理是什么？​","type":1,"pageTitle":"DNS 过滤","url":"general/dns-filtering/#dns-过滤工作原理是什么","content":"当您使用某一款支持 DNS 过滤的 AdGuard 应用程序时，它作为您的设备和 DNS 服务器的“缓冲器”。 您的浏览器或应用程序所要发送的 DNS 请求会先由 AdGuard 来处理。 如您使用的是由您的 ISP（互联网服务提供商）提供的默认 DNS 服务器，很可能您的 DNS 流量未加密，因此容易受到窥探和劫持的威胁。 在 DNS 请求从您的设备发送到服务器前，AdGuard 会加密它们，因此没有坏人可以再轻松获取请求的内容。 除此之外，AdGuard 能够识别广告、跟踪器和/或成人网站信息，并且将它们发送到“黑洞”，而不是到 DNS 服务器。 下述可了解更多。  DNS 过滤是效果很强的工具，并且主要的 AdGuard 应用程序都支持它，包括 AdGuard Windows 版、AdGuard Mac 版、AdGuard 安卓版以及 AdGuard iOS 版。 DNS filtering can be broken down into two separate functions: to encrypt and reroute DNS traffic to DNS servers, and to block some domains locally by applying DNS blocklists. "},{"title":"DNS 服务器​","type":1,"pageTitle":"DNS 过滤","url":"general/dns-filtering/#dns-服务器","content":"一共有数千个 DNS 服务器可选。它们的属性与用途都是独一无二的。 大部分 DNS 服务器只能返回被请求网域的 IP 地址，但也有些 DNS 服务器具有一些额外功能。比如，它们能屏蔽广告、跟踪器、带有成人内容的网站等等。 当今大部分主流 DNS 服务器都应用一个或更多可靠的加密协议，比如：DNS-over-HTTPS、DNS-over-TLS。 AdGuard also provides a DNS service, and it was the world's first to offer the very new and promising DNS-over-QUIC encryption protocol. AdGuard 为不同目的提供不同的服务器。 下面的图标展示 AdGuard 拦截服务器的工作原理：  其它 DNS 提供商的工作方式也可能有所不同，所以在选择某一个 DNS 服务器前，我们建议您要先多了解它们。 在这篇文章里，您可以找到最受欢迎 DNS 提供商的清单。 所有支持 DNS 功能的 AdGuard 应用程序也有 DNS 服务器清单。在清单里用户可以选择自己想使用的 DNS 服务器，或任何自定义 DNS 服务器。 "},{"title":"本地 DNS 拦截列表​","type":1,"pageTitle":"DNS 过滤","url":"general/dns-filtering/#本地-dns-拦截列表","content":"But by relying on DNS servers only to filter your DNS traffic you lose all flexibility. If the selected server blocks a domain, you can't access it. 但如果您使用 AdGuard，您甚至不需要配置任何特定的 DNS 服务器就可以过滤 DNS 流量。 所有 AdGuard 产品允许您应用 DNS 拦截列表，无论是简单的 Hosts 文件还是使用更复杂语法的清单。 它们与一般的广告过滤器运行相似：当 DNS 请求与某一个属于激活过滤器列表的规则相匹配时，该 DNS 请求将会被阻止。 更准确地说，这个 DNS 请求将会发送到“黑洞”。 在 AdGuard iOS 版上您先要在设置里启用「高级模式」以使用 DNS 拦截。 您可以自定义添加您所要的拦截列表数量。 比方说，您可以使用 AdGuard DNS 过滤器。 它确实能够拦截所有 AdGuard DNS 服务器屏蔽的元素，但是使用 AdGuard DNS 过滤器的话，您还可以使用任何其它 DNS 服务器。 此外，这样您可以添加更多过滤器或创建自定义排除项规则。上述的功能都不可能通过简单的「使用拦截 DNS 服务器」设置来实现。 您可以在这里找到几百个不同的 DNS 拦截列表。 "},{"title":"DNS 过滤与网络层面过滤的对比​","type":1,"pageTitle":"DNS 过滤","url":"general/dns-filtering/#dns-过滤与网络层面过滤的对比","content":"网络过滤是我们所说的 AdGuard 独立应用程序处理网络流量的&quot;常规&quot;方式，因此得名。 您可以阅读这篇文章回顾往期内容。 首先，我们要提到一点，使用 AdGuard 的话，您不需要二选一。 您可以一起使用常规网络层面过滤和 DNS 过滤。 不过，还是要明确分出它们俩的区别。 DNS 过滤不仅有其独特优点，但也有些缺点： DNS 过滤的优点： On some platforms this is the only way to achieve system-wide filtering. 比方说，在 iOS 上只有 Safari 浏览器支持内容拦截。为了拦截其它内容，用户只可以用 DNS 过滤。有些跟踪方式，比如 CNAME 跟踪，只可以通过 DNS 过滤被拦截。处理 DNS 请求是您可以拦截广告或跟踪器的最早阶段。这样您可以节省点电池寿命及流量。 DNS 过滤的缺点： DNS 过滤是一种“暴力过滤法”。意思是 DNS 过滤不会移除拦截广告后留下的白空，或让您使用自定义过滤方式。 通过 DNS 过滤无法拦截很多更复杂的广告（或者说，可以拦截，但只能通过阻止被用于其他目的的整个域名来实现）。  DNS 与网络层面过滤的区别 我们无法知道 DNS 请求的来源。这意味着，在 DNS 层面过滤，您无法区分不同应用程序。 这个会损害统计数据，并且不允许我们创建针对特定的应用程序过滤规则。 我们推荐在网络过滤的基础上再使用 DNS 过滤，而不是完全代替它。 "},{"title":"DNS 过滤规则语法","type":0,"sectionRef":"#","url":"general/dns-filtering-syntax/","content":"","keywords":""},{"title":"Introduction​","type":1,"pageTitle":"DNS 过滤规则语法","url":"general/dns-filtering-syntax/#introduction","content":"You can use AdGuard DNS filtering rules syntax to make the rules more flexible, so they can block content according to your preferences. AdGuard DNS filtering rules syntax can be used in different AdGuard products such as AdGuard Home, AdGuard DNS, AdGuard for Windows/Mac/Android. There are three different approaches to writing hosts blocklists: Adblock-style syntax: the modern approach to writing filtering rules based on using a subset of the Adblock-style rule syntax. This way blocklists are compatible with browser ad blockers. /etc/hosts syntax: the old, tried-and-true approach that uses the same syntax that operating systems do for their hosts files. Domains-only syntax: a simple list of domain names. If you are creating a blocklist, we recommend using the Adblock-style syntax. It has a couple of important advantages over the old-style syntax: Blocklists size. Using pattern matching allows you to have a single rule instead of hundreds of /etc/hosts entries. Compatibility. Your blocklist will be compatible with browser ad blockers, and it will be easier to share rules with a browser filter list. Extensibility. For the last decade the Adblock-style syntax has greatly evolved, and we don't see why we can't extend it even more and provide additional features for network-wide blockers. If you're maintaining an /etc/hosts-style blocklist or if you maintain multiple filter lists regardless of their type, we provide a tool that can be used to compile blocklists. We called it Hostlist compiler and we use it ourselves to create AdGuard DNS filter. "},{"title":"Basic Examples​","type":1,"pageTitle":"DNS 过滤规则语法","url":"general/dns-filtering-syntax/#basic-examples","content":"||example.org^: block access to the example.org domain and all its subdomains, like www.example.org. @@||example.org^: unblock access to the example.org domain and all its subdomains. 1.2.3.4 example.org: (attention, old /etc/hosts-style syntax) in AdGuard Home, respond with 1.2.3.4 to queries for the example.org domain but not its subdomains. In Private AdGuard DNS, block access to example.org. www.example.org remains allowed. In AdGuard Home, using the unspecified IP address (0.0.0.0) or a local address (127.0.0.1 and alike) for a host is basically the same as blocking that host. # Returns the IP address 1.2.3.4 for example.org. 1.2.3.4 example.org # Blocks example.com by responding with 0.0.0.0. 0.0.0.0 example.com example.org: a simple domain rule. Blocks example.org domain but not its subdomains. www.example.org remains allowed. ! Here goes a comment and # Also a comment: comments. /REGEX/: block access to the domains matching the specified regular expression. "},{"title":"Adblock-Style Syntax​","type":1,"pageTitle":"DNS 过滤规则语法","url":"general/dns-filtering-syntax/#adblock-style-syntax","content":"This is a subset of the traditional Adblock-style syntax which is used by browser ad blockers.  rule = [&quot;@@&quot;] pattern [ &quot;$&quot; modifiers ] modifiers = [modifier0, modifier1[, ...[, modifierN]]]  pattern: the hostname mask. Every hostname is matched against this mask. The pattern can also contain special characters, which are described below. @@: the marker that is used in the exception rules. Start your rule with this marker if you want to turn off filtering for the matching hostnames. modifiers: parameters that clarify the rule. They may limit the scope of the rule or even completely change the way it works. "},{"title":"Special Characters​","type":1,"pageTitle":"DNS 过滤规则语法","url":"general/dns-filtering-syntax/#special-characters","content":"*: the wildcard character. It is used to represent any set of characters. This can also be an empty string or a string of any length. ||: matches the beginning of a hostname, including any subdomain. For instance, ||example.org matches example.org and test.example.org but not testexample.org. ^: the separator character. Unlike browser ad blocking, there's nothing to separate in a hostname, so the only purpose of this character is to mark the end of the hostname. |: a pointer to the beginning or the end of the hostname. The value depends on the character placement in the mask. For example, the rule ample.org| corresponds to example.org but not to example.org.com. |example corresponds to example.org but not to test.example. "},{"title":"Regular Expressions​","type":1,"pageTitle":"DNS 过滤规则语法","url":"general/dns-filtering-syntax/#regular-expressions","content":"If you want even more flexibility in making rules, you can use regular expressions instead of the default simplified matching syntax. If you want to use a regular expression, the pattern has to look like this: pattern = &quot;/&quot; regexp &quot;/&quot;  Examples: /example.*/ will block hosts matching the example.* regexp. @@/example.*/$important will unblock hosts matching the example.* regexp. Note that this rule also implies the important modifier. "},{"title":"Comments​","type":1,"pageTitle":"DNS 过滤规则语法","url":"general/dns-filtering-syntax/#comments","content":"Any line that starts with an exclamation mark or a hash sign is a comment and it will be ignored by the filtering engine. Comments are usually placed above rules and used to describe what a rule does. Example: ! This is a comment. # This is also a comment.  "},{"title":"Rule Modifiers​","type":1,"pageTitle":"DNS 过滤规则语法","url":"general/dns-filtering-syntax/#rule-modifiers","content":"You can change the behavior of a rule by adding modifiers. Modifiers must be located at the end of the rule after the $ character and be separated by commas. Examples:  ||example.org^ is the matching pattern. $ is the delimiter, which signals that the rest of the rule are modifiers. important is the modifier. You may want to use multiple modifiers in a rule. Separate them by commas in this case: ||example.org^$client=127.0.0.1,dnstype=A ||example.org^ is the matching pattern. $ is the delimiter, which signals that the rest of the rule are modifiers. client=127.0.0.1 is the client modifier with its value, 127.0.0.1, is the delimiter. And finally, dnstype=A is the dnstype modifier with its value, A. NOTE: If a rule contains a modifier not listed in this document, the whole rule must be ignored. This way we avoid false-positives when people are trying to use unmodified browser ad blockers' filter lists like EasyList or EasyPrivacy. client​ The client modifier allows specifying clients this rule is applied to. There are two main ways to identify a client: By their IP address or CIDR prefix. This way works for all kinds of clients. By their name. This way only works for persistent clients (in AdGuard Home) and devices (in Private AdGuard DNS), which you have manually added. NOTE: In AdGuard Home, ClientIDs are not currently supported, only names are. If you have added a client with the name “My Client” and ClientID my-client spell your modifier as $client='My Client' as opposed to $client=my-client. The syntax is: $client=value1|value2|...  You can also exclude clients by adding a ~ character before the value. In this case, the rule is not be applied to this client's DNS requests. $client=~value1  Client names usually contain spaces or other special characters, which is why you should enclose the name in quotes. Both single and double ASCII quotes are supported. Use the backslash (\\) to escape quotes (&quot; and '), commas (,), and pipes (|). NOTE: When excluding a client, you must keep ~ out of the quotes. Examples: @@||*^$client=127.0.0.1: unblock everything for localhost. ||example.org^$client='Frank\\'s laptop': block example.org for the client named Frank's laptop only. Note that quote (') in the name must be escaped. ||example.org^$client=~'Mary\\'s\\, John\\'s\\, and Boris\\'s laptops': block example.org for everyone except for the client named Mary's, John's, and Boris's laptops. Note that comma (,) must be escaped as well. ||example.org^$client=~Mom|~Dad|Kids: block example.org for Kids, but not for Mom and Dad. This example demonstrates how to specify multiple clients in one rule. ||example.org^$client=192.168.0.0/24: block example.org for all clients with IP addresses in the range from 192.168.0.0 to 192.168.0.255. denyallow​ You can use the denyallow modifier to exclude domains from the blocking rule. To add multiple domains to one rule, use the | character as a separator. The syntax is: $denyallow=domain1|domain2|...  This modifier allows avoiding creating unnecessary exception rules when our blocking rule covers too many domains. You may want to block everything save for a couple of TLD domains. You could use the standard approach, i.e. rules like this: ! Block everything. /.*/ ! Unblock a couple of TLDs. @@||com^ @@||net^  The problem with this approach is that this way you will also unblock tracking domains that are located on those TLDs (i.e. google-analytics.com). Here's how to solve this with denyallow: *$denyallow=com|net  Examples: *$denyallow=com|net: block everything save for *.com and *.net. @@*$denyallow=com|net: unblock everything save for *.com and *.net. ||example.org^$denyallow=sub.example.org. block example.org and *.example.org but don't block sub.example.org. dnstype​ The dnstype modifier allows specifying DNS request or response type on which this rule will be triggered. The syntax is: $dnstype=value1|value2|... $dnstype=~value1|~value2|~...  The names of the types are case-insensitive, but are validated against a set of actual DNS resource record (RR) types. Do not combine exclusion rules with inclusion ones. This: $dnstype=~value1|value2  is equivalent to this: $dnstype=value2  Examples: ||example.org^$dnstype=AAAA: block DNS queries for the IPv6 addresses of example.org. ||example.org^$dnstype=~A|~CNAME: only allow A and CNAME DNS queries for example.org, block out the rest. NOTE: Before version v0.108.0, AdGuard Home would use the type of the request to filter the response records, as opposed to the type of the response record itself. That caused issues, since that meant that you could not write rules that would allow certain CNAME records in responses in A and AAAA requests. In v0.108.0 that behaviour was changed, so now this: ||canon.example.com^$dnstype=~CNAME  allows you to avoid filtering of the following response: ANSWERS: -&gt; example.com canonical name = canon.example.com. ttl = 60 -&gt; canon.example.com internet address = 1.2.3.4 ttl = 60  dnsrewrite​ The dnsrewrite response modifier allows replacing the content of the response to the DNS request for the matching hosts. Note that this modifier in AdGuard Home works in all rules, but in Private AdGuard DNS — only in custom ones. Rules with the dnsrewrite response modifier have higher priority than other rules in AdGuard Home. The shorthand syntax is: $dnsrewrite=1.2.3.4 $dnsrewrite=abcd::1234 $dnsrewrite=example.net $dnsrewrite=REFUSED  The keywords MUST be in all caps (e.g. NOERROR). Keyword rewrites take precedence over the other and will result in an empty response with an appropriate response code. The full syntax is of the form RCODE;RRTYPE;VALUE: $dnsrewrite=NOERROR;A;1.2.3.4 $dnsrewrite=NOERROR;AAAA;abcd::1234 $dnsrewrite=NOERROR;CNAME;example.net $dnsrewrite=REFUSED;;  The $dnsrewrite modifier with the NOERROR response code may also has empty RRTYPE and VALUE fields. The CNAME one is special because AdGuard Home will resolve the host and add its info to the response. That is, if example.net has IP 1.2.3.4, and the user has this in their filter rules: ||example.com^$dnsrewrite=example.net ! Or: ||example.com^$dnsrewrite=NOERROR;CNAME;example.net  then the response will be something like: $ nslookup example.com my.adguard.local  Server: my.adguard.local Address: 127.0.0.1#53 Non-authoritative answer: example.com canonical name = example.net. Name: example.net Address: 1.2.3.4  Next, the CNAME rewrite. After that, all other records' values are summed as one response, so this: ||example.com^$dnsrewrite=NOERROR;A;1.2.3.4 ||example.com^$dnsrewrite=NOERROR;A;1.2.3.5  will result in a response with two A records. Currently supported RR types with examples: ||4.3.2.1.in-addr.arpa^$dnsrewrite=NOERROR;PTR;example.net. adds a PTRrecord for reverse DNS. Reverse DNS requests for 1.2.3.4 to the DNS server will result in example.net. NOTE: the IP MUST be in reverse order. See RFC 1035. ||example.com^$dnsrewrite=NOERROR;A;1.2.3.4 adds an A record with the value 1.2.3.4. ||example.com^$dnsrewrite=NOERROR;AAAA;abcd::1234 adds an AAAA record with the value abcd::1234. ||example.com^$dnsrewrite=NOERROR;CNAME;example.org adds a CNAME record. See explanation above. ||example.com^$dnsrewrite=NOERROR;HTTPS;32 example.com alpn=h3 adds an HTTPS record. Only a subset of parameter values is supported: values must be contiguous and, where a value-list is expected, only one value is currently supported: ipv4hint=127.0.0.1 // Supported. ipv4hint=&quot;127.0.0.1&quot; // Unsupported. ipv4hint=127.0.0.1,127.0.0.2 // Unsupported. ipv4hint=&quot;127.0.0.1,127.0.0.2&quot; // Unsupported. This will be changed in the future. ||example.com^$dnsrewrite=NOERROR;MX;32 example.mail adds an MX record with precedence value 32 and exchange value example.mail. ||example.com^$dnsrewrite=NOERROR;SVCB;32 example.com alpn=h3 adds a SVCB value. See the HTTPS example above. ||example.com^$dnsrewrite=NOERROR;TXT;hello_world adds a TXT record with the value hello_world. ||_svctype._tcp.example.com^$dnsrewrite=NOERROR;SRV;10 60 8080 example.com adds an SRV record with priority value 10, weight value 60, port8080, and target value example.com. ||example.com^$dnsrewrite=NXDOMAIN;; responds with an NXDOMAIN code. $dnstype=AAAA,denyallow=example.org,dnsrewrite=NOERROR;; responds with an empty NOERROR answers for all AAAA requests except the ones for example.org. Exception rules remove one or all rules: @@||example.com^$dnsrewrite removes all DNS rewrite rules. @@||example.com^$dnsrewrite=1.2.3.4 removes the DNS rewrite rule that adds an A record with the value 1.2.3.4. important​ The important modifier applied to a rule increases its priority over any other rule without the modifier. Even over basic exception rules. Examples: In this example: ||example.org^$important @@||example.org^ ||example.org^$important will block all requests to *.example.org despite the exception rule. In this example: ||example.org^$important @@||example.org^$important the exception rule also has the important modifier, so it will work. badfilter​ The rules with the badfilter modifier disable other basic rules to which they refer. It means that the text of the disabled rule should match the text of the badfilter rule (without the badfilter modifier). Examples: ||example.com$badfilter disables ||example.com. @@||example.org^$badfilter disables @@||example.org^. NOTE: The badfilter modifier currently doesn't work with /etc/hosts-style rules. 127.0.0.1 example.org$badfilter will not disable the original 127.0.0.1 example.org rule. ctag​ The ctag modifier can only be used in AdGuard Home. It allows to block domains only for specific types of DNS client tags. You can assign tags to clients in the AdGuard Home UI. In the future, we plan to assign tags automatically by analyzing the behavior of each client. The syntax is: $ctag=value1|value2|...  If one of client's tags matches the ctag values, this rule applies to the client. The syntax for exclusion is: $ctag=~value1|~value2|...  If one of client's tags matches the exclusion ctag values, this rule doesn't apply to the client. Examples: ||example.org^$ctag=device_pc|device_phone: block example.org for clients tagged as device_pc or device_phone. ||example.org^$ctag=~device_phone: block example.org for all clients except those tagged as device_phone. The list of allowed tags: By device type: device_audio: audio devices.device_camera: cameras.device_gameconsole: game consoles.device_laptop: laptops,device_nas: NAS (Network-attached Storages).device_pc: PCs.device_phone: phones.device_printer: printers.device_securityalarm: security alarms.device_tablet: tablets.device_tv: TVs.device_other: other devices. By operating system: os_android: Android.os_ios: iOS.os_linux: Linux.os_macos: macOS.os_windows: Windows.os_other: other OSes. By user group: user_admin: administrators.user_regular: regular users.user_child: children. "},{"title":"/etc/hosts-Style Syntax​","type":1,"pageTitle":"DNS 过滤规则语法","url":"general/dns-filtering-syntax/#etc-hosts-syntax","content":"For each host a single line should be present with the following information: IP_address canonical_hostname [aliases...]  Fields of the entries are separated by any number of space or tab characters. Text from the # character until the end of the line is a comment and is ignored. Hostnames may contain only alphanumeric characters, hyphen-minus signs (-), and periods (.). They must begin with an alphabetic character and end with an alphanumeric character. Optional aliases provide for name changes, alternate spellings, shorter hostnames, or generic hostnames (for example, localhost). Example: # This is a comment 127.0.0.1 example.org example.info 127.0.0.1 example.com 127.0.0.1 example.net # this is also a comment  In AdGuard Home, the IP addresses are used to respond to DNS queries for these domains. In Private AdGuard DNS, these addresses are simply blocked. "},{"title":"Domains-Only Syntax​","type":1,"pageTitle":"DNS 过滤规则语法","url":"general/dns-filtering-syntax/#domains-only-syntax","content":"A simple list of domain names, one name per line. Example: # This is a comment example.com example.org example.net # this is also a comment  If a string is not a valid domain (e.g. *.example.org), AdGuard Home will consider it to be an Adblock-style rule. "},{"title":"Hostlists Compiler​","type":1,"pageTitle":"DNS 过滤规则语法","url":"general/dns-filtering-syntax/#hostlists-compiler","content":"If you are maintaining a blocklist and use different sources in it, Hostlists compiler may be useful to you. It is a simple tool that makes it easier to compile a hosts blocklist compatible with AdGuard Home, Private AdGuard DNS or any other AdGuard product with DNS filtering. What it's capable of: Compile a single blocklist from multiple sources. Exclude the rules you don't need. Cleanup the resulting list: deduplicate, remove invalid rules, and compress the list. "},{"title":"Credits and Acknowledgements","type":0,"sectionRef":"#","url":"miscellaneous/acknowledgements/","content":"","keywords":""},{"title":"AdGuard DNS​","type":1,"pageTitle":"Credits and Acknowledgements","url":"miscellaneous/acknowledgements/#adguard-dns","content":"DNS module by Miek Gieben: https://github.com/miekg/dnsGCache module by Jun Kimura: https://github.com/bluele/gcacheGo-Cache module by Patrick Mylund Nielsen: https://github.com/patrickmn/go-cacheGofumpt program by Daniel Martí: mvdan.cc/gofumptQUIC-Go module by Lucas Clemente: https://github.com/lucas-clemente/quic-goStaticcheck program by Dominik Honnef: https://staticcheck.io "},{"title":"AdGuard API and Websites​","type":1,"pageTitle":"Credits and Acknowledgements","url":"miscellaneous/acknowledgements/#adguard-api-and-websites","content":"Symfony: http://symfony.com/React: https://reactjs.org/Vue: https://vuejs.org/PostgreSQL: https://www.postgresql.org/Spring https://spring.io/ClickHouse: https://clickhouse.com/Logstash: https://github.com/elastic/logstash "},{"title":"Private AdGuard DNS beta测试版","type":0,"sectionRef":"#","url":"miscellaneous/beta-testing/","content":"","keywords":""},{"title":"如何成为 beta 测试者的一员​","type":1,"pageTitle":"Private AdGuard DNS beta测试版","url":"miscellaneous/beta-testing/#如何成为-beta-测试者的一员","content":"要成为 Private AdGuard DNS 的 beta 测试者访问 AdGuard DNS 网站，请点击右上角的“加入 beta测试计划”按钮，然后通过社交媒体或现有 AdGuard账户登录。 一切搞定：现在您可以设置您的私人 AdGuard DNS、使用该服务并向我们发送有关其工作原理的报告。 "},{"title":"如何报告bug​","type":1,"pageTitle":"Private AdGuard DNS beta测试版","url":"miscellaneous/beta-testing/#如何报告bug","content":"假如你发现了一个bug 或者您只是想与开发人员分享您的建议？ 无论如何，有几种方法可以让我们了解情况： 转到 forum.adguard.com 并在 [论坛的“Beta 测试”类别](https:// 中发布一个新主题（或查找现有主题） forum.adguard.com/index.php?categories/48/) 请务必先阅读论坛规则； 转到 AdGuard DNS 存储库，在那里创建一个新问题并详细描述bug/功能请求。 上述方法是最优选的，但如果需要，您可以使用其他方法： 在各种社交媒体平台上找到我们，例如 Facebook、[Reddit](https://www.reddit.com/r /Adguard/) 等 然而，这并不是讨论技术问题的最有效方式。 从应用程序中的“支持”选项以向我们的支持团队发送电子邮件，或直接写信至 support@adguard.com。 "},{"title":"已知的DNS 提供商","type":0,"sectionRef":"#","url":"general/dns-providers/","content":"","keywords":""},{"title":"AdGuard DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#adguard-dns","content":"AdGuard DNS is an alternative solution for ad blocking, privacy protection, and parental control. It provides the number of necessary protection features against online ads, trackers, and phishing, no matter what platform and device you use. 默认​ These servers provide blocking ads, tracking and phishing 协议\t地址\tDNS, IPv4\t94.140.14.14 和 94.140.15.15\t添加到AdGuard DNS, IPv6\t2a10:50c0::ad1:ff 和 2a10:50c0::ad2:ff\t添加到AdGuard DNS-over-HTTPS\thttps://dns.adguard.com/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns.adguard.com\t添加到AdGuard DNS-over-QUIC\tquic://dns.adguard.com\t添加到AdGuard DNSCrypt, IPv4\t提供者: 2.dnscrypt.default.ns1.adguard.com IP: 94.140.14.14:5443\t添加到AdGuard DNSCrypt, IPv6\t提供者: 2.dnscrypt.default.ns1.adguard.com IP: [2a10:50c0::ad1:ff]:5443\t添加到AdGuard 家庭保护​ These servers provide the Default features + Blocking adult websites + Safe search 协议\t地址\tDNS, IPv4\t94.140.14.15 和 94.140.15.16\t添加到AdGuard DNS, IPv6\t2a10:50c0::bad1:ff 和 2a10:50c0::bad2:ff\t添加到AdGuard DNS-over-HTTPS\thttps://dns-family.adguard.com/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns-family.adguard.com\t添加到AdGuard DNS-over-QUIC\tquic://dns-family.adguard.com\t添加到AdGuard DNSCrypt, IPv4\t提供者: 2.dnscrypt.family.ns1.adguard.com IP: 94.140.14.15:5443\t添加到AdGuard DNSCrypt, IPv6\t提供者: 2.dnscrypt.family.ns1.adguard.com IP: [2a10:50c0::bad1:ff]:5443\t添加到AdGuard 无过滤​ 这些服务器提供了安全和可靠的连接，但它们不会像“默认”和“家庭保护”服务器一样过滤任何请求。 协议\t地址\tDNS, IPv4\t94.140.14.140 和 94.140.14.141\t添加到AdGuard DNS, IPv6\t2a10:50c0::bad1:ff 和 2a10:50c0::bad2:ff\t添加到AdGuard DNS-over-HTTPS\thttps://dns-unfiltered.adguard.com/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns-unfiltered.adguard.com\t添加到AdGuard DNS-over-QUIC\tquic://dns-unfiltered.adguard.com\t添加到AdGuard DNSCrypt, IPv4\t提供者: 2.dnscrypt.unfiltered.ns1.adguard.com IP: 94.140.14.140:5443\t添加到AdGuard DNSCrypt, IPv6\t提供者: 2.dnscrypt.unfiltered.ns1.adguard.com IP: [2a10:50c0::1:ff]:5443\t添加到AdGuard "},{"title":"Yandex DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#yandex-dns","content":"Yandex.DNS 是一个免费的递归DNS服务。 Yandex.DNS' servers are located in Russia, CIS countries, and Western Europe. Users' requests are processed by the nearest data center which provides high connection speeds. 基础​ 在“基础”模式中，没有流量过滤 协议\t地址\tDNS, IPv4\t77.88.8.8 和 77.88.8.1\t添加到AdGuard DNS, IPv6\t2a02:6b8::feed:0ff 和 2a02:6b8:0:1::feed:0ff\t添加到AdGuard DNSCrypt, IPv4\t提供者: 2.dnscrypt-cert.browser.yandex.net IP: 77.88.8.78:15353\t添加到AdGuard 安全​ 在“安全”模式中，提供了对于被感染的网站和欺骗性网站的防护。 协议\t地址\tDNS, IPv4\t77.88.8.88 and 77.88.8.2\t添加到AdGuard DNS, IPv6\t2a02:6b8::feed:bad and 2a02:6b8:0:1::feed:bad\t添加到AdGuard Family​ In &quot;Family&quot; mode, protection from infected, fraudulent and adult sites is provided 协议\t地址\tDNS, IPv4\t77.88.8.3 and 77.88.8.7\t添加到AdGuard DNS, IPv6\t2a02:6b8::feed:a11 and 2a02:6b8:0:1::feed:a11\t添加到AdGuard "},{"title":"CleanBrowsing​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#cleanbrowsing","content":"Cleanbrowsing is a DNS service which provides customizable filtering. This service offers a safe way to browse the web without inappropriate content. Family Filter​ Blocks access to all adult, pornographic and explicit sites, including proxy &amp; VPN domains and mixed content sites 协议\t地址\tDNS, IPv4\t185.228.168.168 and 185.228.169.168\t添加到AdGuard DNS, IPv6\t2a0d:2a00:1:: and 2a0d:2a00:2::\t添加到AdGuard DNSCrypt, IPv4\tProvider: cleanbrowsing.org IP: 185.228.168.168:8443\t添加到AdGuard DNSCrypt, IPv6\t提供者: cleanbrowsing.org IP: [2a0d:2a00:1::]:8443\t添加到AdGuard DNS-over-HTTPS\thttps://doh.cleanbrowsing.org/doh/family-filter/\t添加到AdGuard DNS-over-TLS\ttls://family-filter-dns.cleanbrowsing.org\t添加到AdGuard 成人过滤器​ 比家庭过滤器限制更小，它仅拦截成人内容，恶意和钓鱼域名。 协议\t地址\tDNS, IPv4\t185.228.168.10 和 185.228.169.11\t添加到AdGuard DNS, IPv6\t2a0d:2a00:1::1 和 2a0d:2a00:2::1\t添加到AdGuard DNSCrypt, IPv4\t提供者: cleanbrowsing.org IP: 185.228.168.10:8443\t添加到AdGuard DNSCrypt, IPv6\t提供者: cleanbrowsing.org IP: [2a0d:2a00:1::1]:8443\t添加到AdGuard DNS-over-HTTPS\thttps://doh.cleanbrowsing.org/doh/adult-filter/\t添加到AdGuard DNS-over-TLS\ttls://adult-filter-dns.cleanbrowsing.org\t添加到AdGuard 安全过滤器​ 拦截钓鱼，垃圾邮件和恶意域名 协议\t地址\tDNS, IPv4\t185.228.168.9 和 185.228.169.9\t添加到AdGuard DNS, IPv6\t2a0d:2a00:1::2 和 2a0d:2a00:2::2\t添加到AdGuard DNS-over-HTTPS\thttps://doh.cleanbrowsing.org/doh/security-filter/\t添加到AdGuard DNS-over-TLS\ttls://security-filter-dns.cleanbrowsing.org\t添加到AdGuard "},{"title":"Comodo Secure DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#comodo-secure-dns","content":"Comodo Secure DNS is a domain name resolution service that resolves your DNS requests through worldwide network of DNS servers. Removes excessive ads and protects from phishing and spyware. 协议\t地址\tDNS, IPv4\t8.26.56.26 and 8.20.247.20\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.shield-2.dnsbycomodo.com IP: 8.20.247.2\t添加到AdGuard "},{"title":"Neustar Recursive DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#neustar-recursive-dns","content":"Neustar Recursive DNS is a free cloud-based recursive DNS service that delivers fast and reliable access to sites and online applications with built-in security and threat intelligence. Reliability &amp; Performance 1​ These servers provide reliable and fast DNS lookups without blocking any specific categories 协议\t地址\tDNS, IPv4\t156.154.70.1 and 156.154.71.1\t添加到AdGuard DNS, IPv6\t2610:a1:1018::1 and 2610:a1:1019::1\t添加到AdGuard Reliability &amp; Performance 2*​ These servers provide reliable and fast DNS lookups without blocking any specific categories and also prevent redirecting NXDomain (Non-existent Domain) responses to a landing page 协议\t地址\tDNS, IPv4\t156.154.70.5 and 156.154.71.5\t添加到AdGuard DNS, IPv6\t2610:a1:1018::5 and 2610:a1:1019::5\t添加到AdGuard Threat Protection​ These servers provide protection against malicious domains and also include &quot;Reliability &amp; Performance&quot; features 协议\t地址\tDNS, IPv4\t156.154.70.2 and 156.154.71.2\t添加到AdGuard DNS, IPv6\t2610:a1:1018::2 and 2610:a1:1019::2\t添加到AdGuard Family Secure​ These servers provide blocking access to mature content and also include &quot;Reliability &amp; Performance&quot; + &quot;Threat Protection&quot; features 协议\t地址\tDNS, IPv4\t156.154.70.3 and 156.154.71.3\t添加到AdGuard DNS, IPv6\t2610:a1:1018::3 and 2610:a1:1019::3\t添加到AdGuard Business Secure​ These servers provide blocking unwanted and time-wasting content and also include &quot;Reliability &amp; Performance&quot; + &quot;Threat Protection&quot; + &quot;Family Secure&quot; features 协议\t地址\tDNS, IPv4\t156.154.70.4 and 156.154.71.4\t添加到AdGuard DNS, IPv6\t2610:a1:1018::4 and 2610:a1:1019::4\t添加到AdGuard "},{"title":"Cisco OpenDNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#cisco-opendns","content":"Cisco OpenDNS is a service which extends the DNS by incorporating features such as content filtering and phishing protection with a zero downtime. Standard​ DNS servers with custom filtering that protects your device from malware 协议\t地址\tDNS, IPv4\t208.67.222.222 and 208.67.220.220\t添加到AdGuard DNS, IPv6\t2620:119:35::35 and 2620:119:53::53\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.opendns.com IP: 208.67.220.220\t添加到AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.opendns.com IP: [2620:0:ccc::2]\t添加到AdGuard DNS-over-HTTPS\thttps://doh.opendns.com/dns-query\t添加到AdGuard FamilyShield​ OpenDNS servers that provide adult content blocking 协议\t地址\tDNS, IPv4\t208.67.222.123 and 208.67.220.123\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.opendns.com IP: 208.67.220.123\t添加到AdGuard DNS-over-HTTPS\thttps://doh.familyshield.opendns.com/dns-query\t添加到AdGuard "},{"title":"Google DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#google-dns","content":"Google DNS is a free, global DNS resolution service that you can use as an alternative to your current DNS provider. 协议\t地址\tDNS, IPv4\t8.8.8.8 and 8.8.4.4\t添加到AdGuard DNS, IPv6\t2001:4860:4860::8888 and 2001:4860:4860::8844\t添加到AdGuard DNS-over-HTTPS\thttps://dns.google/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns.google\t添加到AdGuard "},{"title":"Cloudflare DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#cloudflare-dns","content":"Cloudflare DNS is a free and fast DNS service which functions as a recursive name server providing domain name resolution for any host on the Internet. Standard​ 协议\t地址\tDNS, IPv4\t1.1.1.1 and 1.0.0.1\t添加到AdGuard DNS, IPv6\t2606:4700:4700::1111 and 2606:4700:4700::1001\t添加到AdGuard DNS-over-HTTPS, IPv4\thttps://dns.cloudflare.com/dns-query\t添加到AdGuard DNS-over-HTTPS, IPv6\thttps://dns.cloudflare.com/dns-query\t添加到AdGuard DNS-over-TLS\ttls://1dot1dot1dot1.cloudflare-dns.com\t添加到AdGuard Malware blocking only​ 协议\t地址\tDNS, IPv4\t1.1.1.2 and 1.0.0.2\t添加到AdGuard DNS, IPv6\t2606:4700:4700::1112 and 2606:4700:4700::1002\t添加到AdGuard DNS-over-HTTPS\thttps://security.cloudflare-dns.com/dns-query\t添加到AdGuard DNS-over-TLS\ttls://security.cloudflare-dns.com\t添加到AdGuard Malware and adult content blocking​ 协议\t地址\tDNS, IPv4\t1.1.1.3 and 1.0.0.3\t添加到AdGuard DNS, IPv6\t2606:4700:4700::1113 and 2606:4700:4700::1003\t添加到AdGuard DNS-over-HTTPS, IPv4\thttps://family.cloudflare-dns.com/dns-query\t添加到AdGuard DNS-over-TLS\ttls://family.cloudflare-dns.com\t添加到AdGuard "},{"title":"Quad9 DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#quad9-dns","content":"Quad9 DNS is a free, recursive, anycast DNS platform that provides high-performance, privacy, and security protection from phishing and spyware. Quad9 servers don't provide a censoring component. Standard​ Regular DNS servers which provide protection from phishing and spyware. They include blocklists, DNSSEC validation, and other security features. 协议\t地址\tDNS, IPv4\t9.9.9.9 and 149.112.112.112\t添加到AdGuard DNS, IPv6\t2620:fe::fe IP: 2620:fe::fe:9\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.quad9.net IP: 9.9.9.9:8443\t添加到AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.quad9.net IP: [2620:fe::fe]:8443\t添加到AdGuard DNS-over-HTTPS\thttps://dns.quad9.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns.quad9.net\t添加到AdGuard Unsecured​ Unsecured DNS servers provide no security blocklist, no DNSSEC, No EDNS client-Subnet 协议\t地址\tDNS, IPv4\t9.9.9.10 and 149.112.112.10\t添加到AdGuard DNS, IPv6\t2620:fe::10 IP: 2620:fe::fe:10\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.quad9.net IP: 9.9.9.10:8443\t添加到AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.quad9.net IP: [2620:fe::fe:10]:8443\t添加到AdGuard DNS-over-HTTPS\thttps://dns10.quad9.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns10.quad9.net\t添加到AdGuard ECS support​ EDNS Client-Subnet is a method that includes components of end-user IP address data in requests that are sent to authoritative DNS servers. It provides security blocklist, DNSSEC, EDNS Client-Subnet. 协议\t地址\tDNS, IPv4\t9.9.9.11 and 149.112.112.11\t添加到AdGuard DNS, IPv6\t2620:fe::11 IP: 2620:fe::fe:11\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.quad9.net IP: 9.9.9.11:8443\t添加到AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.quad9.net IP: [2620:fe::11]:8443\t添加到AdGuard DNS-over-HTTPS\thttps://dns11.quad9.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns11.quad9.net\t添加到AdGuard "},{"title":"Verisign Public DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#verisign-public-dns","content":"Verisign Public DNS is a free DNS service that offers improved DNS stability and security over other alternatives. Verisign respects users' privacy: it doesn't sell public DNS data to third parties and redirect users' queries to serve them any ads. 协议\t地址\tDNS, IPv4\t64.6.64.6 or 64.6.65.6\t添加到AdGuard DNS, IPv6\t2620:74:1b::1:1 or 2620:74:1c::2:2\t添加到AdGuard "},{"title":"SWITCH DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#switch-dns","content":"SWITCH DNS is a swiss public DNS service provided by switch.ch 协议\t地址\tDNS, IPv4\tProvider: dns.switch.ch IP: 130.59.31.248\t添加到AdGuard DNS, IPv6\tProvider: dns.switch.ch IPv6: 2001:620:0:ff::2\t添加到AdGuard DNS-over-HTTPS\thttps://dns.switch.ch/dns-query\t添加到AdGuard DNS-over-TLS\tHostname: tls://dns.switch.ch IP: 130.59.31.248 and IPv6: 2001:620:0:ff::2\t添加到AdGuard "},{"title":"Dyn DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#dyn-dns","content":"Dyn DNS is a free alternative DNS service by Dyn 协议\t地址\tDNS, IPv4\t216.146.35.35 and 216.146.36.36\t添加到AdGuard "},{"title":"DNS.WATCH​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#dnswatch","content":"DNS.WATCH is a fast and free server without logging with a privacy protection feature. 协议\t地址\tDNS, IPv4\t84.200.69.80 and 84.200.70.40\t添加到AdGuard DNS, IPv6\t2001:1608:10:25::1c04:b12f and 2001:1608:10:25::9249:d69b\t添加到AdGuard "},{"title":"SkyDNS RU​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#skydns-ru","content":"SkyDNS solutions for content filtering and internet security. 协议\t地址\tDNS, IPv4\t193.58.251.251\t添加到AdGuard "},{"title":"Comss.ru DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#comssru-dns","content":"Comss.one DNS is a fast and secure DNS servers with protection against ads, tracking and phishing. West DNS Server (Main)​ 协议\t地址\tDNS, IPv4\t92.38.152.163 and 93.115.24.204\t添加到AdGuard DNS, IPv6\t2a03:90c0:56::1a5 and 2a02:7b40:5eb0:e95d::1\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.dns.comss.one IP: 94.176.233.93:443\t添加到AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.dns.comss.one IP: [2a02:7b40:5eb0:e95d::1]:443\t添加到AdGuard DNS-over-HTTPS\thttps://dns.comss.one/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns.comss.one\t添加到AdGuard East DNS Server (Siberia and Far East)​ 协议\t地址\tDNS, IPv4\t92.223.109.31 and 91.230.211.67\t添加到AdGuard DNS, IPv6\t2a03:90c0:b5::1a and 2a04:2fc0:39::47\t添加到AdGuard DNS-over-HTTPS\thttps://dns.east.comss.one/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns.east.comss.one\t添加到AdGuard "},{"title":"Safe DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#safe-dns","content":"Safe DNS is a global anycast network which consists of servers located throughout the world — both Americas, Europe, Africa, Australia, and the Far East to ensure a fast and reliable DNS resolving from any point worldwide. 协议\t地址\tDNS, IPv4\t195.46.39.39 and 195.46.39.40\t添加到AdGuard "},{"title":"CIRA Canadian Shield DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#cira-canadian-shield-dns","content":"CIRA Shield DNS protects against theft of personal and financial data. Keep viruses, ransomware, and other malware out of your home. Private​ In &quot;Private&quot; mode, DNS resolution only 协议\t地址\tDNS, IPv4\t149.112.121.10 and 149.112.122.10\t添加到AdGuard DNS, IPv6\t2620:10A:80BB::10 and 2620:10A:80BC::10\t添加到AdGuard DNS-over-HTTPS\thttps://private.canadianshield.cira.ca/dns-query\t添加到AdGuard DNS-over-TLS - Private\tHostname: tls://private.canadianshield.cira.ca IP: 149.112.121.10 and IPv6: 2620:10A:80BB::10\t添加到AdGuard Protected​ In &quot;Protected&quot; mode, malware and phishing protection 协议\t地址\tDNS, IPv4\t149.112.121.20 and 149.112.122.20\t添加到AdGuard DNS, IPv6\t2620:10A:80BB::20 and 2620:10A:80BC::20\t添加到AdGuard DNS-over-HTTPS\thttps://protected.canadianshield.cira.ca/dns-query\t添加到AdGuard DNS-over-TLS - Protected\tHostname: tls://protected.canadianshield.cira.ca IP: 149.112.121.20 and IPv6: 2620:10A:80BB::20\t添加到AdGuard Family​ In &quot;Family&quot; mode, Protected + blocking adult content 协议\t地址\tDNS, IPv4\t149.112.121.30 and 149.112.122.30\t添加到AdGuard DNS, IPv6\t2620:10A:80BB::30 and 2620:10A:80BC::30\t添加到AdGuard DNS-over-HTTPS\thttps://family.canadianshield.cira.ca/dns-query\t添加到AdGuard DNS-over-TLS - Family\tHostname: tls://protected.canadianshield.cira.ca IP: 149.112.121.30 and IPv6: 2620:10A:80BB::30\t添加到AdGuard "},{"title":"OpenNIC DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#opennic-dns","content":"OpenNIC DNS is a free alternative DNS service by OpenNIC Project 协议\t地址\tDNS, IPv4\t185.121.177.177 and 169.239.202.202\t添加到AdGuard DNS, IPv6\t2a05:dfc7:5::53 and 2a05:dfc7:5353::53\t添加到AdGuard "},{"title":"BlahDNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#blahdns","content":"BlahDNS A small hobby DNS project. No logs, Ethereum Name Service, DNSSEC ready &amp; Filtered ads, trackers, malwares Finland DNS Server​ 协议\t地址\tDNS-over-TLS, IPv4\tHostname: tls://dot-fi.blahdns.com IP: 95.216.212.177\t添加到AdGuard DNS-over-HTTPS, IPv4\tHostname: https://doh-fi.blahdns.com/dns-query IP: 95.216.212.177\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.blahdns.com IP: 95.216.212.177:8443\t添加到AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.blahdns.com IP: 2a01:4f9:c010:43ce::1:8443\t添加到AdGuard Japan DNS Server​ 协议\t地址\tDNS-over-TLS, IPv4\tHostname: tls://dot-jp.blahdns.com IP: 139.162.112.47\t添加到AdGuard DNS-over-HTTPS, IPv4\tHostname: https://doh-jp.blahdns.com/dns-query\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.blahdns.com IP: 139.162.112.47:8443\t添加到AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.blahdns.com IP: [2400:8902::f03c:92ff:fe27:344b]:8443\t添加到AdGuard Germany DNS Server​ 协议\t地址\tDNS-over-TLS, IPv4\tHostname: tls://dot-de.blahdns.com IP: 159.69.198.101\t添加到AdGuard DNS-over-HTTPS, IPv4\tHostname: https://doh-de.blahdns.com/dns-query IP: 159.69.198.101\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.blahdns.com IP: 159.69.198.101:8443\t添加到AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.blahdns.com IP: 2a01:4f8:1c1c:6b4b::1:8443\t添加到AdGuard "},{"title":"Snopyta DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#snopyta-dns","content":"Snopyta DNS is a privacy friendly DNS service run by Noah Seefried. 协议\t地址\tDNS-over-HTTPS\thttps://fi.doh.dns.snopyta.org/dns-query IP: 95.216.24.230 and IPv6: 2a01:4f9:2a:1919::9301\t添加到AdGuard DNS-over-TLS\ttls://fi.dot.dns.snopyta.org IP: 95.216.24.230 and IPv6: 2a01:4f9:2a:1919::9301\t添加到AdGuard "},{"title":"DNS for Family​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#dns-for-family","content":"DNS for Family aims to block adult websites. It helps to children and everyone for safely surf internet without worrying about get followed to harmful websites. 协议\t地址\tDNS-over-HTTPS\thttps://dns-doh.dnsforfamily.com/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns-dot.dnsforfamily.com\t添加到AdGuard DNS, IPv4\t94.130.180.225 and 78.47.64.161\t添加到AdGuard DNS, IPv6\t2a01:4f8:1c0c:40db::1 and 2a01:4f8:1c17:4df8::1\t添加到AdGuard DNSCrypt, IPv4\tProvider: dnsforfamily.com IP: 94.130.180.225\t添加到AdGuard DNSCrypt, IPv6\tProvider: dnsforfamily.com IP: [2a01:4f8:1c0c:40db::1]\t添加到AdGuard "},{"title":"CZ.NIC ODVR​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#cznic-odvr","content":"CZ.NIC ODVR CZ.NIC ODVR are Open DNSSEC Validating Resolvers. CZ.NIC neither collect any personal data nor gather information on pages where devices sends personal data. 协议\t地址\tDNS, IPv4\t193.17.47.1 and 185.43.135.1\t添加到AdGuard DNS, IPv6\t2001:148f:ffff::1 and 2001:148f:fffe::1\t添加到AdGuard DNS-over-HTTPS\thttps://odvr.nic.cz/doh\t添加到AdGuard DNS-over-TLS\ttls://odvr.nic.cz\t添加到AdGuard "},{"title":"Ali DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#ali-dns","content":"Ali DNS is a free recursive DNS service that committed to providing fast, stable and secure DNS resolution for the majority of Internet users. It includes AliGuard facility to protect users from various attacks and threats. 协议\t地址\tDNS, IPv4\t223.5.5.5 and 223.6.6.6\t添加到AdGuard DNS, IPv6\t2400:3200::1 and 2400:3200:baba::1\t添加到AdGuard DNS-over-HTTPS\thttps://dns.alidns.com/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns.alidns.com\t添加到AdGuard "},{"title":"CFIEC Public DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#cfiec-public-dns","content":"IPv6-based anycast DNS service with strong security capabilities and protection from spyware, malicious websites. It support DNS64 to provide domain name resolution only for IPv6 users. 协议\t地址\tDNS, IPv6\t240C::6666 and 240C::6644\t添加到AdGuard DNS-over-HTTPS\thttps://dns.cfiec.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns.cfiec.net\t添加到AdGuard "},{"title":"Nawala Childprotection DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#nawala-childprotection-dns","content":"Nawala Childprotection DNS is an anycast Internet filtering system that protects children from inappropriate websites and abusive contents. 协议\t地址\tDNS, IPv4\t180.131.144.144 and 180.131.145.145\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.nawala.id IP: 180.131.144.144\t添加到AdGuard "},{"title":"DNSCEPAT​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#dnscepat","content":"DNSCEPAT DNS is built for you with Security, Privacy and Fast Connectivity in mind. Asia DNS Server​ 协议\t地址\tDNS-over-TLS\tHostname: tls://asia.dnscepat.id\t添加到AdGuard DNS IPv4\tIP: 172.105.216.54\t添加到AdGuard DNS IPv6\tIP: 2400:8902::f03c:92ff:fe09:48cc\t添加到AdGuard DNS-over-HTTPS\tHostname: https://asia.dnscepat.id/dns-query\t添加到AdGuard Eropa DNS Server​ 协议\t地址\tDNS-over-TLS\tHostname: tls://eropa.dnscepat.id\t添加到AdGuard DNS IPv4\tIP: 5.2.75.231\t添加到AdGuard DNS IPv6\tIP: 2a04:52c0:101:98d::\t添加到AdGuard DNS-over-HTTPS\tHostname: https://eropa.dnscepat.id/dns-query\t添加到AdGuard "},{"title":"360 Secure DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#360-secure-dns","content":"360 Secure DNS is a industry-leading recursive DNS service with advanced network security threat protection. 协议\t地址\tDNS, IPv4\t101.226.4.6 and 218.30.118.6\t添加到AdGuard DNS, IPv4\t123.125.81.6 and 140.207.198.6\t添加到AdGuard DNS-over-HTTPS\thttps://doh.360.cn/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dot.360.cn\t添加到AdGuard "},{"title":"IIJ.JP DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#iijjp-dns","content":"IIJ.JP is a public DNS service operated by Internet Initiative Japan. It also blocks child abuse content. 协议\t地址\tDNS-over-HTTPS\thttps://public.dns.iij.jp/dns-query\t添加到AdGuard DNS-over-TLS\ttls://public.dns.iij.jp\t添加到AdGuard "},{"title":"DNSPod Public DNS+​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#dnspod-public-dns","content":"DNSPod Public DNS+ is a privacy-friendly DNS provider with years of experience in domain name resolution services development, it aims to provide users more rapid, accurate and stable recursive resolution service. 协议\t地址\tDNS, IPv4\t119.29.29.29 and 119.28.28.28\t添加到AdGuard DNS-over-HTTPS\thttps://doh.pub/dns-query\t添加到AdGuard DNS-over-HTTPS\thttps://dns.pub/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dot.pub\t添加到AdGuard "},{"title":"114DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#114dns","content":"114DNS is a professional and high-reliability DNS service. Normal​ Block ads and annoying websites 协议\t地址\tDNS, IPv4\t114.114.114.114 and 114.114.115.115\t添加到AdGuard 安全​ Blocks phishing, malicious and other unsafe websites 协议\t地址\tDNS, IPv4\t114.114.114.119 and 114.114.115.119\t添加到AdGuard Family​ These servers block adult websites and inappropriate contents. 协议\t地址\tDNS, IPv4\t114.114.114.110 and 114.114.115.110\t添加到AdGuard "},{"title":"Quad101​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#quad101","content":"Quad101 is a free alternative DNS service without logging by TWNIC (Taiwan Network Information Center) 协议\t地址\tDNS, IPv4\t101.101.101.101 and 101.102.103.104\t添加到AdGuard DNS, IPv6\t2001:de4::101 and 2001:de4::102\t添加到AdGuard DNS-over-HTTPS\thttps://dns.twnic.tw/dns-query\t添加到AdGuard DNS-over-TLS\ttls://101.101.101.101\t添加到AdGuard "},{"title":"OneDNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#onedns","content":"OneDNS is a secure, fast, free niche DNS service with malicious domains blocking facility. Pure Edition​ 协议\t地址\tDNS, IPv4\t117.50.10.10 and 52.80.52.52\t添加到AdGuard Block Edition​ 协议\t地址\tDNS, IPv4\t117.50.11.11 and 52.80.66.66\t添加到AdGuard "},{"title":"Privacy-First DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#privacy-first-dns","content":"Privacy-First DNS block over 140K ads, ad-tracking, malware and phishing domains!. No logging, no ECS, DNSSEC validation, free! Singapore DNS Server​ | 协议 | 地址 | Location | | | -------------- | -------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- | | | DNS, IPv4 | 174.138.21.128 | 添加到AdGuard | | | DNS, IPv6 | 2400:6180:0:d0::5f6e:4001 | 添加到AdGuard | | | DNSCrypt, IPv4 | Provider: 2.dnscrypt-cert.dns.tiar.app IP: 174.138.21.128 | 添加到AdGuard | | | DNSCrypt, IPv6 | Provider: 2.dnscrypt-cert.dns.tiar.app IP: [2400:6180:0:d0::5f6e:4001] | 添加到AdGuard | | | DNS-over-HTTPS | https://doh.tiarap.org/dns-query (cached via third-party) | 添加到AdGuard | | | DNS-over-HTTPS | https://doh.tiar.app/dns-query | 添加到AdGuard | | | DNS-over-QUIC | quic://doh.tiar.app | 添加到AdGuard | | | DNS-over-TLS | tls://dot.tiar.app | 添加到AdGuard | | Japan DNS Server​ 协议\t地址\tDNS, IPv4\t172.104.93.80\t添加到AdGuard DNS, IPv6\t2400:8902::f03c:91ff:feda:c514\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.jp.tiar.app IP: 172.104.93.80\t添加到AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.jp.tiar.app IP: [2400:8902::f03c:91ff:feda:c514]\t添加到AdGuard DNS-over-HTTPS\thttps://jp.tiarap.org/dns-query\t添加到AdGuard DNS-over-HTTPS\thttps://jp.tiar.app/dns-query\t添加到AdGuard DNS-over-TLS\ttls://jp.tiar.app\t添加到AdGuard "},{"title":"FreeDNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#freedns","content":"FreeDNS is an open, free and public DNS Service provided by Virtexxa cloud services. No DNS redirects, no logging. 协议\t地址\tDNS, IPv4\t172.104.237.57 and 172.104.49.100\t添加到AdGuard DNS, IPv4\t37.235.1.174 and 37.235.1.177\t添加到AdGuard "},{"title":"Freenom World​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#freenom-world","content":"Freenom World is a free anonymous DNS resolver by Freenom World 协议\t地址\tDNS, IPv4\t80.80.80.80 and 80.80.81.81\t添加到AdGuard "},{"title":"OSZX DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#oszx-dns","content":"OSZX DNS is a small Ad-Blocking DNS hobby project. OSZX server​ These servers provide no ad blocking, keep no logs, and have DNSSEC enabled 协议\t地址\tDNS, IPv4\t51.38.83.141\t添加到AdGuard DNS, IPv6\t2001:41d0:801:2000::d64\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.oszx.co IP: 51.38.83.141:5353\t添加到AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.oszx.co IP: [2001:41d0:801:2000::d64]:5353\t添加到AdGuard DNS-over-HTTPS\thttps://dns.oszx.co/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns.oszx.co\t添加到AdGuard PumpleX server​ These servers provide no ad blocking, keep no logs, and have DNSSEC enabled 协议\t地址\tDNS, IPv4\t51.38.82.198\t添加到AdGuard DNS, IPv6\t2001:41d0:801:2000::1b28\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.pumplex.com IP: 51.38.82.198:5353\t添加到AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.pumplex.com IP: [2001:41d0:801:2000::1b28]:5353\t添加到AdGuard DNS-over-HTTPS\thttps://dns.pumplex.com/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns.pumplex.com\t添加到AdGuard "},{"title":"Applied Privacy DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#applied-privacy-dns","content":"Applied Privacy DNS operates DNS privacy services to help protect DNS traffic and to help diversify the DNS resolver landscape offering modern protocols. 协议\t地址\tDNS-over-HTTPS\thttps://doh.applied-privacy.net/query\t添加到AdGuard DNS-over-TLS\ttls://dot1.applied-privacy.net\t添加到AdGuard "},{"title":"Strongarm DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#strongarm-dns","content":"Strongarm DNS is a DNS service by Strongarm that prevents people from interacting with malicious content 协议\t地址\tDNS, IPv4\t54.174.40.213 and 52.3.100.184\t添加到AdGuard "},{"title":"SafeSurfer DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#safesurfer-dns","content":"SafeSurfer DNS is a DNS service by SafeSurfer that protects your device from harmful and adult contents. 协议\t地址\tDNS, IPv4\t104.155.237.225 and 104.197.28.121\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.safesurfer.co.nz IP: 104.197.28.121\t添加到AdGuard "},{"title":"DeCloudUs DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#decloudus-dns","content":"DeCloudUs DNS A secure, private, open-source DNS resolver with malware protection, ad blocking and without logs. Degoogle and Ungoogle your phone, tablet, and computer. 协议\t地址\tDNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.DeCloudUs-test IP: 78.47.212.211:9443\t添加到AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.DeCloudUs-test IP: [2a01:4f8:13a:250b::30]:9443\t添加到AdGuard DNS-over-HTTPS\thttps://dns.decloudus.com/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns.decloudus.com\t添加到AdGuard "},{"title":"Lelux DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#lelux-dns","content":"Lelux.fi is run by Elias Ojala. Finland. 协议\t地址\tDNS-over-HTTPS\thttps://resolver-eu.lelux.fi/dns-query\t添加到AdGuard DNS-over-TLS\ttls://resolver-eu.lelux.fi\t添加到AdGuard "},{"title":"Captnemo DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#captnemo-dns","content":"Captnemo DNS is a server running out of a Digital Ocean droplet in BLR1 region. Maintained by Abhay Rana aka Nemo. 协议\t地址\tDNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.captnemo.in IP: 139.59.48.222:4434\t添加到AdGuard "},{"title":"DNS.SB​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#dnssb","content":"DNS.SB provide free DNS service with no logging, DNSSEC enabled. 协议\t地址\tDNS, IPv4\t185.222.222.222 and 45.11.45.11\t添加到AdGuard DNS, IPv6\t2a09:: and 2a11::\t添加到AdGuard DNS-over-HTTPS\thttps://doh.dns.sb/dns-query\t添加到AdGuard DNS-over-TLS\ttls://185.222.222.222\t添加到AdGuard "},{"title":"DNS Forge​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#dns-forge","content":"DNS Forge is a redundant DNS resolver with an ad blocker and no logging provided by adminforge. 协议\t地址\tDNS, IPv4\t176.9.93.198 and 176.9.1.117\t添加到AdGuard DNS, IPv6\t2a01:4f8:151:34aa::198 and 2a01:4f8:141:316d::117\t添加到AdGuard DNS-over-HTTPS\thttps://dnsforge.de/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dnsforge.de\t添加到AdGuard "},{"title":"Fondation Restena DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#fondation-restena-dns","content":"Restena DNS servers provided by Restena Foundation 协议\t地址\tDNS-over-HTTPS\thttps://kaitain.restena.lu/dns-query IP: 158.64.1.29 and IPv6: 2001:a18:1::29\t添加到AdGuard DNS-over-TLS\ttls://kaitain.restena.lu IP: 158.64.1.29 and IPv6: 2001:a18:1::29\t添加到AdGuard "},{"title":"fvz DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#fvz-dns","content":"fvz DNS is a Fusl's public primary OpenNIC Tier2 Anycast DNS Resolver 协议\t地址\tDNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.dnsrec.meo.ws IP: 185.121.177.177:5353\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.dnsrec.meo.ws IP: 169.239.202.202:5353\t添加到AdGuard "},{"title":"FFMUC DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#ffmuc-dns","content":"FFMUC free DNS servers provided by Freifunk München 协议\t地址\tDNS-over-TLS, IPv4\tHostname: tls://dot.ffmuc.net\t添加到AdGuard DNS-over-HTTPS, IPv4\tHostname: https://doh.ffmuc.net/dns-query\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.ffmuc.net IP: 5.1.66.255:8443\t添加到AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.ffmuc.net IP: [2001:678:e68:f000::]:8443\t添加到AdGuard "},{"title":"Digitale Gesellschaft DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#digitale-gesellschaft-dns","content":"Digitale Gesellschaft is a public resolver operated by the Digital Society. Hosted in Zurich, Switzerland 协议\t地址\tDNS-over-HTTPS\thttps://dns.digitale-gesellschaft.ch/dns-query IP: 185.95.218.42 and IPv6: 2a05:fc84::42\t添加到AdGuard DNS-over-TLS\ttls://dns.digitale-gesellschaft.ch IP: 185.95.218.43 and IPv6: 2a05:fc84::43\t添加到AdGuard "},{"title":"LibreDNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#libredns","content":"LibreDNS is a public encrypted DNS service run by LibreOps. 协议\t地址\tDNS, IPv4\t88.198.92.222\t添加到AdGuard DNS-over-HTTPS\thttps://doh.libredns.gr/dns-query\t添加到AdGuard DNS-over-HTTPS\thttps://doh.libredns.gr/ads\t添加到AdGuard DNS-over-TLS\ttls://dot.libredns.gr IP: 116.202.176.26\t添加到AdGuard "},{"title":"ibksturm DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#ibksturm-dns","content":"ibksturm DNS testing servers provided by ibksturm. OPENNIC, DNSSEC, no filtering, no logging 协议\t地址\tDNS-over-TLS, IPv4\tHostname: tls://ibksturm.synology.me IP: 83.77.85.7\t添加到AdGuard DNS-over-HTTPS, IPv4\tHostname: https://ibksturm.synology.me/dns-query IP: 178.82.102.190\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.ibksturm IP: 83.77.85.7:8443\t添加到AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.ibksturm IP: [2a02:1205:5055:de60:b26e:bfff:fe1d:e19b]:8443\t添加到AdGuard "},{"title":"DNS Privacy​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#dns-privacy","content":"A collaborative open project to promote, implement and deploy DNS Privacy. DNS servers run by the Stubby developers 协议\t地址\tDNS-over-TLS\tHostname: tls://getdnsapi.net IP: 185.49.141.37 and IPv6: 2a04:b900:0:100::37\t添加到AdGuard DNS-over-TLS\tProvider: Surfnet Hostname tls://dnsovertls.sinodun.com IP: 145.100.185.15 and IPv6: 2001:610:1:40ba:145:100:185:15\t添加到AdGuard DNS-over-TLS\tProvider: Surfnet Hostname tls://dnsovertls1.sinodun.com IP: 145.100.185.16 and IPv6: 2001:610:1:40ba:145:100:185:16\t添加到AdGuard Other DNS servers with 'no logging' policy 协议\t地址\tDNS-over-TLS\tProvider: UncensoredDNS Hostname tls://unicast.censurfridns.dk IP: 89.233.43.71 and IPv6: 2a01:3a0:53:53::0\t添加到AdGuard DNS-over-TLS\tProvider: UncensoredDNS Hostname tls://anycast.censurfridns.dk IP: 91.239.100.100 and IPv6: 2001:67c:28a4::\t添加到AdGuard DNS-over-TLS\tProvider: dkg Hostname tls://dns.cmrg.net IP: 199.58.81.218and IPv6: 2001:470:1c:76d::53\t添加到AdGuard DNS-over-TLS, IPv4\tHostname: tls://dns.larsdebruin.net IP: 51.15.70.167\t添加到AdGuard DNS-over-TLS\tHostname tls://dns-tls.bitwiseshift.net IP: 81.187.221.24 and IPv6: 2001:8b0:24:24::24\t添加到AdGuard DNS-over-TLS\tHostname tls://ns1.dnsprivacy.at IP: 94.130.110.185 and IPv6: 2a01:4f8:c0c:3c03::2\t添加到AdGuard DNS-over-TLS\tHostname tls://ns2.dnsprivacy.at IP: 94.130.110.178 and IPv6: 2a01:4f8:c0c:3bfc::2\t添加到AdGuard DNS-over-TLS, IPv4\tHostname: tls://dns.bitgeek.in IP: 139.59.51.46\t添加到AdGuard DNS-over-TLS\tHostname tls://dns.neutopia.org IP: 89.234.186.112 and IPv6: 2a00:5884:8209::2\t添加到AdGuard DNS-over-TLS\tProvider: Go6Lab Hostname tls://privacydns.go6lab.si IPv6: 2001:67c:27e4::35\t添加到AdGuard DNS-over-TLS\tHostname: tls://dot.securedns.eu IP: 146.185.167.43 and IPv6: 2a03:b0c0:0:1010::e9a:3001\t添加到AdGuard DNS servers with minimal logging/limitations. These servers use some logging, self-signed certs or no support for strict mode. 协议\t地址\tDNS-over-TLS\tProvider: NIC Chile Hostname dnsotls.lab.nic.cl IP: 200.1.123.46 and IPv6: 2001:1398:1:0:200:1:123:46\t添加到AdGuard DNS-over-TLS\tProvider: OARC Hostname tls-dns-u.odvr.dns-oarc.net IP: 184.105.193.78 and IPv6: 2620:ff:c000:0:1::64:25\t添加到AdGuard "},{"title":"AhaDNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#ahadns","content":"AhaDNS A zero-logging and ad-blocking DNS service provided by Fredrik Pettersson. Blitz​ Configurable filtering worldwide DoH-only variant 协议\t地址\tDNS-over-HTTPS, uncensored\thttps://blitz.ahadns.com\t添加到AdGuard DNS-over-HTTPS, OISD filter\thttps://blitz.ahadns.com/1:1\t添加到AdGuard DNS-over-HTTPS, OISD &amp; Energized porn filter\thttps://blitz.ahadns.com/1:1.12\t添加到AdGuard Netherlands​ 协议\t地址\tDNS, IPv4\t5.2.75.75\t添加到AdGuard DNS, IPv6\t2a04:52c0:101:75::75\t添加到AdGuard DNS-over-HTTPS\thttps://doh.nl.ahadns.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dot.nl.ahadns.net\t添加到AdGuard India​ 协议\t地址\tDNS, IPv4\t45.79.120.233\t添加到AdGuard DNS, IPv6\t2400:8904:e001:43::43\t添加到AdGuard DNS-over-HTTPS\thttps://doh.in.ahadns.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dot.in.ahadns.net\t添加到AdGuard Los Angeles​ 协议\t地址\tDNS, IPv4\t45.67.219.208\t添加到AdGuard DNS, IPv6\t2a04:bdc7:100:70::70\t添加到AdGuard DNS-over-HTTPS\thttps://doh.la.ahadns.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dot.la.ahadns.net\t添加到AdGuard New York​ 协议\t地址\tDNS, IPv4\t185.213.26.187\t添加到AdGuard DNS, IPv6\t2a0d:5600:33:3::3\t添加到AdGuard DNS-over-HTTPS\thttps://doh.ny.ahadns.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dot.ny.ahadns.net\t添加到AdGuard Poland​ 协议\t地址\tDNS-over-HTTPS\thttps://doh.pl.ahadns.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dot.pl.ahadns.net\t添加到AdGuard Italy​ 协议\t地址\tDNS-over-HTTPS\thttps://doh.it.ahadns.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dot.it.ahadns.net\t添加到AdGuard Spain​ 协议\t地址\tDNS-over-HTTPS\thttps://doh.es.ahadns.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dot.es.ahadns.net\t添加到AdGuard Norway​ 协议\t地址\tDNS-over-HTTPS\thttps://doh.no.ahadns.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dot.no.ahadns.net\t添加到AdGuard Chicago​ 协议\t地址\tDNS-over-HTTPS\thttps://doh.chi.ahadns.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dot.chi.ahadns.net\t添加到AdGuard Australia​ 协议\t地址\tDNS-over-HTTPS\thttps://doh.au.ahadns.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dot.au.ahadns.net\t添加到AdGuard "},{"title":"Seby DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#seby-dns","content":"Seby DNS is a privacy focused DNS service provided by Sebastian Schmidt. No Logging, DNSSEC validation. DNS Server 1​ 协议\t地址\tDNS, IPv4\t45.76.113.31\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.dns.seby.io IP: 45.76.113.31\t添加到AdGuard DNS-over-TLS\ttls://dot.seby.io\t添加到AdGuard "},{"title":"puntCAT DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#puntcat-dns","content":"puntCAT is physically located near Barcelona, Spain. puntCAT offers a public DNS service, free, secure, close and that respects your privacy. 协议\t地址\tDNS, IPv4\t109.69.8.51\t添加到AdGuard DNS, IPv6\t2a00:1508:0:4::9\t添加到AdGuard "},{"title":"DNSlify DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#dnslify-dns","content":"DNSlify DNS operate public DNS resolvers to speed up requests, increase redundancy. The service is provided by Peerix 默认​ These servers provide DNS resolution without traffic filtering. 协议\t地址\tDNS, IPv4\t185.235.81.1 and 185.235.81.2\t添加到AdGuard DNS, IPv6\t2a0d:4d00:81::1 and 2a0d:4d00:81::2\t添加到AdGuard DNS-over-HTTPS\thttps://doh.dnslify.com/dns-query\t添加到AdGuard DNS-over-TLS\ttls://doh.dnslify.com\t添加到AdGuard 安全​ Safe mode guard against infected, fraudulent or bot sites. 协议\t地址\tDNS, IPv4\t185.235.81.3 and 185.235.81.4\t添加到AdGuard DNS, IPv6\t2a0d:4d00:81::3 and 2a0d:4d00:81::4\t添加到AdGuard Family​ Family mode offers protection by &quot;Safe&quot; resolvers and blocks adult sites. 协议\t地址\tDNS, IPv4\t185.235.81.5 and 185.235.81.6\t添加到AdGuard DNS, IPv6\t2a0d:4d00:81::5 and 2a0d:4d00:81::6\t添加到AdGuard "},{"title":"NextDNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#nextdns","content":"NextDNS provides publicly accessible non-filtering resolvers with no logging in addition to its freemium configurable filtering resolvers with optional logging. Unfiltered​ 协议\t地址\tDNS-over-HTTPS\tdns.nextdns.io\t添加到AdGuard DNS-over-TLS\ttls://dns.nextdns.io\t添加到AdGuard "},{"title":"RethinkDNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#rethinkdns","content":"RethinkDNS provides DNS-over-HTTPS service running as Cloudflare Worker and DNS-over-TLS service running as Fly.io Worker with configurable blocklists. Unfiltered​ 协议\t地址\tDNS-over-HTTPS\thttps://basic.rethinkdns.com/\t添加到AdGuard DNS-over-TLS\ttls://max.rethinkdns.com\t添加到AdGuard Block malware​ 协议\t地址\tDNS, IPv4\t76.76.2.1\t添加到AdGuard DNS-over-HTTPS\thttps://freedns.controld.com/p1\t添加到AdGuard DNS-over-TLS\ttls://p1.freedns.controld.com\t添加到AdGuard Block malware + ads​ 协议\t地址\tDNS, IPv4\t76.76.2.2\t添加到AdGuard DNS-over-HTTPS\thttps://freedns.controld.com/p2\t添加到AdGuard DNS-over-TLS\ttls://p2.freedns.controld.com\t添加到AdGuard Block malware + ads + social​ 协议\t地址\tDNS, IPv4\t76.76.2.3\t添加到AdGuard DNS-over-HTTPS\thttps://freedns.controld.com/p3\t添加到AdGuard DNS-over-TLS\ttls://p3.freedns.controld.com\t添加到AdGuard "},{"title":"Mullvad​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#mullvad","content":"Mullvad provides publicly accessible DNS with QNAME minimization, endpoints located in Australia, Germany, Singapore, Sweden, United Kingdom and United States (New York and Los Angeles). 无过滤​ 协议\t地址\tDNS-over-HTTPS\thttps://doh.mullvad.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://doh.mullvad.net\t添加到AdGuard Ad blocking​ 协议\t地址\tDNS-over-HTTPS\thttps://adblock.doh.mullvad.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://adblock.doh.mullvad.net\t添加到AdGuard "},{"title":"Small personal resolvers​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#small-personal-resolvers","content":"In this section we list small, mostly personal DNS resolvers. They often have only one or very few servers and worse uptime than 'big' providers. We won't be able to proper monitor their availability. Use them at your own risk! Arapurayil​ Arapurayil is a personal DNS service hosted in Mumbai, India. Non-logging | Filters ads, trackers, phishing,etc | DNSSEC | QNAME Minimization | No EDNS Client-Subnet. 协议\t地址\tDNSCrypt, IPv4\tHost: 2.dnscrypt-cert.dns.arapurayil.com IP: 3.7.156.128\t添加到AdGuard DNS-over-HTTPS\tHost: https://dns.arapurayil.com/dns-query\t添加到AdGuard Dandelion Sprout's Official DNS Server​ Dandelion Sprout's Official DNS Server is a personal DNS service hosted in Trondheim, Norway, using an AdGuard Home infrastructure. Blocks more ads and malware than AdGuard DNS thanks to more advanced syntax, but goes easier on trackers, and blocks alt-right tabloids and most imageboards. Logging is used to improve its used filterlists (e.g. by unblocking sites that shouldn't have been blocked), and to determine the least bad times for server system updates. 协议\t地址\tDNS-over-HTTPS\thttps://dandelionsprout.asuscomm.com:2501/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dandelionsprout.asuscomm.com:853\t添加到AdGuard DNS-over-QUIC\tquic://dandelionsprout.asuscomm.com:48582\t添加到AdGuard DNS, IPv4\tVaries; see link above. DNS, IPv6\tVaries; see link above. DNSCrypt, IPv4\tVaries; see link above.\t "},{"title":"How to take a screenshot","type":0,"sectionRef":"#","url":"miscellaneous/take-screenshot/","content":"","keywords":""},{"title":"How to take a screenshot​","type":1,"pageTitle":"How to take a screenshot","url":"miscellaneous/take-screenshot/#how-to-take-a-screenshot","content":"Here you will find all the necessary hotkeys you should know in order to take screenshots on your computer or mobile device. "},{"title":"Android​","type":1,"pageTitle":"How to take a screenshot","url":"miscellaneous/take-screenshot/#android","content":"Taking a screenshot on an Android device can be done in various ways — depending on the device model and its manufacturer. Generally, you should use the following button combination for Android: Hold down at once the Volume Down and the Power buttons for 1–2 seconds Your Android device will capture the entire screen and save it as a photo. So, you can find the screenshot in a Screenshots folder in your Gallery. But, as it has been already said, there can be differences depending on a particular device. Let’s look at other possible combinations: Hold down at once Home and Power for 1–2 seconds;Hold down at once the Back and the Home buttons On Android 8 and later there is also a possibility to take a screenshot by placing your hand vertically along the left or right edge of your phone and swiping in from that edge with your hand touching the screen. If this method doesn’t work, check Settings &gt; Advanced features to enable Palm swipe to capture. Besides, you can always use any special applications for taking screenshots on your devices, for example — Screenshot Easy, Screenshot Ultimate, Screenshot Snap etc. "},{"title":"iOS​","type":1,"pageTitle":"How to take a screenshot","url":"miscellaneous/take-screenshot/#ios","content":"Any iOS device (barring ancient ones) lets you take a screenshot using standard tools. To take a screenshot on an iOS device, use the following combination: Press the Sleep/Wake (side) button and the Home button at the same time, then quickly release them and this one for iPhone X or later: Press the Sleep/Wake button and the Volume up button at the same time, then quickly release them Your iOS device will capture the entire screen and save it as a photo. You can find it in a standard Photo app. "},{"title":"Windows​","type":1,"pageTitle":"How to take a screenshot","url":"miscellaneous/take-screenshot/#windows","content":"To take a screenshot on Windows, press the PrtScn button On some notebooks you have to hold Fn and then press PrtScn instead. Please note: PrtScn (Print Screen) button can be differently abbreviated on various keyboards — PrntScrn, PrtScn, PrtScr or PrtSc. Windows captures the entire screen and copies it to the (invisible) clipboard. To take a screenshot of an active window, use the following combination: Hold down Alt and press PrtScn (or Fn + Alt + PrtScn on some laptops) To take a screenshot of a specific area, you should use the following combination: Hold down Win (the Windows button) and Shift and press S** After you take a screenshot, it will be saved in the clipboard. In most cases you will be able to paste it into a document that you are currently editing by using Ctrl + V button combination. Alternatively, if you need to save the screenshot into a file, you should open the standard Paint program (or any other app that can work with images). Paste your screenshot there using the same button combination or by clicking the Paste button (usually in the top left corner of the screen) and then save it. Windows 8 and 10 let you take a screenshot very quickly with a Win + PrtScn combination. As soon as you press these buttons, the screenshot will be automatically saved as a file to your Pictures -&gt; Screenshots Folder. There is also a dedicated program for taking screenshots called Snipping Tool that you can find via Start menu among standard programs of your computer. Snipping Tool lets you capture of any area of your desktop or the entire screen. After taking a screenshot using this program you can edit the picture and save it to any folder on your computer. Besides, you can also try using different apps for taking screenshots on your computer, like PicPick, Nimbus Screenshot, Screenshot Captor, Snipaste, Monosnap etc. "},{"title":"MacOS​","type":1,"pageTitle":"How to take a screenshot","url":"miscellaneous/take-screenshot/#macos","content":"To take a screenshot on Mac, use the following button combination: Press and hold together ⌘ Cmd + Shift + 3** Your Mac will capture the entire screen and save it as a file on the desktop. To take a screenshot of an active window, use the following combination: Press and hold together ⌘ Cmd + Shift + 4 + Space bar. The pointer will change to a camera icon. Click the window to capture it. Press the Esc button to cancel taking a screenshot To take a screenshot of a specific area, you should use the following combination: Press and hold together ⌘ Cmd + Shift + 4**. Drag the crosshair to select the needed area. Release your mouse or trackpad to take a screenshot, press the Esc button to cancel it. To take a screenshot of the Touch Bar (MacBook Pro) use the following combination: Hold down ⌘ Cmd + Shift + 6** Your Mac captures the entire Touch Bar and saves it as a file on the desktop. To copy a screenshot to the clipboard instead of saving it, hold down Ctrl together with any of the combinations above. Then you can paste the screenshot (from the clipboard) into a document or an image you are currently editing by using Cmd + V combination. You can also take screenshots by using Preview and choosing Take screenshot (of the selected area, window, or the entire screen). With Preview you can save your screenshots in JPG, TIFF, PDF, and other file formats. "},{"title":"Updating the Knowledge Base","type":0,"sectionRef":"#","url":"miscellaneous/update-kb/","content":"","keywords":""},{"title":"How to suggest a change or write a new article​","type":1,"pageTitle":"Updating the Knowledge Base","url":"miscellaneous/update-kb/#suggest-change","content":"You can suggest changes to current articles and add new ones to the Knowledge Base using the functionality of the GitHub mentioned above. If you are unfamiliar with principles of working with the platform, start by reading documentation in this section. Once you are ready to start, work in the KnowledgeBaseDNS repository. All texts in our Knowledge Base are written in Markdown markup language. Keep this in mind when editing or writing articles. Follow this link to learn more about Markdown syntax. The Knowledge Base website is buit using Docusaurus 2 — a modern static website generator. When suggesting changes or additions, take into account that all documents must comply with the principles of the platform. You can read about them in the guide available via this link. You can deploy this Knowledge Base locally to your computer to preview the changes you suggest. Detailed instructions on how to do this can be found in the README.md file on this Knowledge Base's GitHub page. "},{"title":"Translating articles​","type":1,"pageTitle":"Updating the Knowledge Base","url":"miscellaneous/update-kb/#translate-adguard","content":"Translation of the existing articles of the Knowledge Base is carried out on the Crowdin platform. All the details about translations and working with Crowdin can be found in the dedicated article of the AdGuard Ad Blocker Knowledge Base. When working on AdGuard DNS Knowledge Base articles, you may meet strings containing plural forms that you should translate with extra attention. In a separate article, we described in detail the difficulties that can arise when translating strings with plural forms, and gave extensive instructions on how to work with them on the Crowdin platform. "},{"title":"Working on open issues​","type":1,"pageTitle":"Updating the Knowledge Base","url":"miscellaneous/update-kb/#working-on-open-issues","content":"Sometimes there exist open tasks related to updating the Knowledge Base. You can help us speed up their completion the same way you would suggest any other changes to this Knowledge Base. Choose any issue that you find appealing and start working on it. If you have any questions — you can ask them right in the comments to that issue. "},{"title":"AdGuard DNS API","type":0,"sectionRef":"#","url":"private-dns/api/","content":"","keywords":""},{"title":"验证​","type":1,"pageTitle":"AdGuard DNS API","url":"private-dns/api/#验证","content":""},{"title":"生成访问令牌​","type":1,"pageTitle":"AdGuard DNS API","url":"private-dns/api/#生成访问令牌","content":"使用给定的参数对以下 URL 发出 POST 请求以生成 access_token： https://api.adguard-dns.io/oapi/v1/oauth_token \t范围\t描述 用户名\t账号邮箱 密码\t账号密码 mfa_token\t双重身份验证令牌（需要提前在账户设置中启用） 在响应中，您将同时获得 access_token 和 refresh_token。 access_token 将在指定的几秒后过期（由响应中的 expires_in 参数决定） 您可以重新生成一个新的 access_token 使用 refresh_token（参考：Generate Access Token from Refresh Token）。 refresh_token 是永久性的。 要撤销 refresh_token，请参阅：Revoking a Refresh Token。 示例请求​ $ curl 'https://api.adguard-dns.io/oapi/v1/oauth_token' -i -X POST \\ -H 'Content-Type: application/x-www-form-urlencoded' \\ -d 'username=user%40adguard.com' \\ -d 'password=********' \\ -d 'mfa_token=727810'  示例响应​ { &quot;access_token&quot;: &quot;jTFho_aymtN20pZR5RRSQAzd81I&quot;, &quot;token_type&quot;: &quot;bearer&quot;, &quot;refresh_token&quot;: &quot;H3SW6YFJ-tOPe0FQCM1Jd6VnMiA&quot;, &quot;expires_in&quot;: 2620978 }  "},{"title":"刷新以生成访问令牌​","type":1,"pageTitle":"AdGuard DNS API","url":"private-dns/api/#刷新以生成访问令牌","content":"访问令牌有有效期限 过期后，您的应用将不得不使用 refresh token 以请求新的 access token。 使用给定的参数发出以下 POST 请求以获取新的访问令牌： https://api.adguard-dns.io/oapi/v1/oauth_token \t范围\t描述 refresh_token\t必须使用REFRESH TOKEN 来生成新的访问令牌。 示例请求​ $ curl 'https://api.adguard-dns.io/oapi/v1/oauth_token' -i -X POST \\ -H 'Content-Type: application/x-www-form-urlencoded' \\ -d 'refresh_token=H3SW6YFJ-tOPe0FQCM1Jd6VnMiA'  示例响应​ { &quot;access_token&quot;: &quot;xQnT7GYT6Ag--3oY_EcOOdXe-I0&quot;, &quot;token_type&quot;: &quot;bearer&quot;, &quot;refresh_token&quot;: &quot;H3SW6YFJ-tOPe0FQCM1Jd6VnMiA&quot;, &quot;expires_in&quot;: 2627999 }  "},{"title":"取消刷新该令牌​","type":1,"pageTitle":"AdGuard DNS API","url":"private-dns/api/#取消刷新该令牌","content":"要取消刷新该令牌，请使用给定参数发出以下 POST 请求： https://api.adguard-dns.io/oapi/v1/revoke_token 请求示例​ $ curl 'https://api.adguard-dns.com/oapi/v1/revoke_token' -i -X POST \\ -d 'token=H3SW6YFJ-tOPe0FQCM1Jd6VnMiA'  \t范围\t描述 refresh_token\t等待撤销的REFRESH TOKEN "},{"title":"访问API​","type":1,"pageTitle":"AdGuard DNS API","url":"private-dns/api/#访问api","content":"生成访问和刷新令牌后，可以通过在标头中传递访问令牌来进行 API 调用。 标头名称应为 Authorization标头值应为 Bearer {access_token} "},{"title":"API​","type":1,"pageTitle":"AdGuard DNS API","url":"private-dns/api/#api","content":""},{"title":"开源API 规范​","type":1,"pageTitle":"AdGuard DNS API","url":"private-dns/api/#开源api-规范","content":"OpenAPI 规范可在 https： //api.adguard-dns.io/static/swagger/openapi.json。 您可以使用不同的工具来查看可用 API 方法的列表。 例如，您可以在 https://editor.swagger.io/。 "},{"title":"反馈​","type":1,"pageTitle":"AdGuard DNS API","url":"private-dns/api/#反馈","content":"如果您希望使用新方法扩展此 API，请发送电子邮件至 devteam@adguard.com 并让我们知道您想添加什么。 "},{"title":"Private AdGuard DNS","type":0,"sectionRef":"#","url":"private-dns/overview/","content":"","keywords":""},{"title":"What is Private AdGuard DNS​","type":1,"pageTitle":"Private AdGuard DNS","url":"private-dns/overview/#what-is-private-adguard-dns","content":"Private AdGuard DNS is a DNS server that, in addition to benefits of a public DNS server (such as traffic encryption and domain blocklists), provides features like flexible customization, DNS statistics and parental control and is easily managed through a handy dashboard. "},{"title":"Why Private AdGuard DNS is needed​","type":1,"pageTitle":"Private AdGuard DNS","url":"private-dns/overview/#why-private-adguard-dns-is-needed","content":"Today, you can connect anything to the Internet: TVs, refrigerators, smart bulbs, or speakers. But along with the undeniable conveniences you get trackers and ads. A simple browser-based ad blocker will not protect you in this case, but AdGuard DNS, which you can set up to filter traffic, block content and trackers, has a system-wide effect. We already have public AdGuard DNS and AdGuard Home. These solutions work fine for some users, but for others, the public AdGuard DNS lacks the flexibility of configuration, while the AdGuard Home lacks simplicity. That's where private AdGuard DNS comes into play. It has the best of both worlds: it offers customizability, control and information - all through a simple easy-to-use dashboard. "},{"title":"The difference between Private and Public AdGuard DNS​","type":1,"pageTitle":"Private AdGuard DNS","url":"private-dns/overview/#the-difference-between-private-and-public-adguard-dns","content":"Here is a simple comparison of features available in Public AdGuard DNS and Private AdGuard DNS servers. Public AdGuard DNS\tPrivate AdGuard DNSDNS traffic encryption\tDNS traffic encryption Pre-determined domain blocklists\tCustomizable domain blocklists -\tCustom DNS filtering rules with import/export feature -\tRequest statistics (see where do your DNS requests go: which countries, which companies etc.) -\tDetailed query log -\tParental control "},{"title":"How to set up Private AdGuard DNS​","type":1,"pageTitle":"Private AdGuard DNS","url":"private-dns/overview/#how-to-set-up-private-adguard-dns","content":"Go to your AdGuard DNS dashboard (if not logged in, log in using your AdGuard account)Click “Connect device” and follow on-screen instructions Supported platforms: - Android - iOS - Windows - Mac - Linux - Routers - Gaming consoles "},{"title":"Private AdGuard DNS features​","type":1,"pageTitle":"Private AdGuard DNS","url":"private-dns/overview/#private-adguard-dns-features","content":""},{"title":"Blocklists management​","type":1,"pageTitle":"Private AdGuard DNS","url":"private-dns/overview/#blocklists-management","content":"With &quot;Blocklists&quot; feature you can set which domains you want to block and which you don't. Сhoose from wide variety of blocklists for different purposes.  "},{"title":"User rules​","type":1,"pageTitle":"Private AdGuard DNS","url":"private-dns/overview/#user-rules","content":"For times when pre-installed Blocklists with thousands of rules are not enough, we have a handy function called &quot;User rules&quot;. Here you can add custom rules manually to block/unblock a certain domain or import custom rules lists (check out DNS filtering rules syntax). You can export the lists.  "},{"title":"Statistics​","type":1,"pageTitle":"Private AdGuard DNS","url":"private-dns/overview/#statistics","content":"In &quot;Statistics&quot; tab you can see all the summarized statistics on DNS queries made by devices connected to your Private AdGuard DNS. It shows the total number and geography of requests, the number of blocked requests, the list of companies the requests were addressed to, requests types and top requested domains.  "},{"title":"Traffic destination​","type":1,"pageTitle":"Private AdGuard DNS","url":"private-dns/overview/#traffic-destination","content":"This feature shows you where DNS requests sent by your devices go. On top of seeing the map of request destinations, you can filter the information by date, device and country.  "},{"title":"Companies​","type":1,"pageTitle":"Private AdGuard DNS","url":"private-dns/overview/#companies","content":"This tab allows you to quickly check which companies send the most requests, and which companies have the most blocked requests.  "},{"title":"Query log​","type":1,"pageTitle":"Private AdGuard DNS","url":"private-dns/overview/#query-log","content":"This is a detailed log where you can check out the information on every single request and also sort requests by status, type, company, device, time, country.  "},{"title":"Parental control​","type":1,"pageTitle":"Private AdGuard DNS","url":"private-dns/overview/#parental-control","content":"To protect your child from online content you deem inappropriate, set up and activate the Parental control option. In addition to options such as &quot;adult content&quot; blocking and safe search, we've added the ability to manually specify domains for blocking and set a schedule for the Parental control to work accordingly.  In case you don't have Private AdGuard DNS yet, you can get it on the official website. "},{"title":"概览","type":0,"sectionRef":"#","url":"public-dns/overview/","content":"","keywords":""},{"title":"What is AdGuard DNS?​","type":1,"pageTitle":"概览","url":"public-dns/overview/#what-is-adguard-dns","content":"AdGuard DNS is a free, privacy-oriented DNS resolver that provides secure connection and also can block tracking, ads, phishing and adult content (optionally). AdGuard DNS does not require installing any applications. It is easy to use and can be effortlessly set up on any device (smartphones, desktops, routers, game consoles, etc.). "},{"title":"Public AdGuard DNS servers​","type":1,"pageTitle":"概览","url":"public-dns/overview/#public-adguard-dns-servers","content":"AdGuard DNS has three different public servers. &quot;Default&quot; server is for blocking ads, trackers, malware and phishing websites. &quot;Family protection&quot; does the same, but also blocks websites with adult content and enforces &quot;Safe search&quot; option in browsers that provide it. &quot;Non-filtering&quot; provides a secure and reliable connection but doesn't block anything. You can find detailed instructions on setting up AdGuard DNS on any device on our website. Each server supports different secure protocols: DNSCrypt, DNS-over-HTTPS (DoH), DNS-over-TLS (DoT), and DNS-over-QUIC (DoQ). "},{"title":"AdGuard DNS protocols​","type":1,"pageTitle":"概览","url":"public-dns/overview/#adguard-dns-protocols","content":"Besides plain DNS (both IPv4 and IPv6) AdGuard DNS supports various encrypted protocols, so you can choose the one that suits you best. "},{"title":"DNSCrypt​","type":1,"pageTitle":"概览","url":"public-dns/overview/#dnscrypt","content":"AdGuard DNS allows you to use a specific encrypted protocol — DNSCrypt. Thanks to it, all DNS requests are being encrypted, which protects you from possible request interception and subsequent eavesdropping and/or alteration. But compared to the DoH, DoT and DoQ protocols, DNSCrypt is considered obsolete and if possible we recommend using these protocols. "},{"title":"DNS-over-HTTPS (DoH) and DNS-over-TLS (DoT)​","type":1,"pageTitle":"概览","url":"public-dns/overview/#dns-over-https-doh-and-dns-over-tls-dot","content":"DoH and DoT are modern secure DNS protocols that gain more and more popularity and will become the industry standards for the foreseeable future. Both are more reliable than DNSCrypt and both are supported by AdGuard DNS. "},{"title":"DNS-over-QUIC (DoQ)​","type":1,"pageTitle":"概览","url":"public-dns/overview/#dns-over-quic-doq","content":"DNS-over-QUIC is a new DNS encryption protocol and AdGuard DNS is the first public resolver that supports it. Unlike DoH and DoT, it uses QUIC as a transport protocol and finally brings DNS back to its roots — working over UDP. It brings all the good things that QUIC has to offer — out-of-the-box encryption, reduced connection times, better performance when data packets are lost. Also, QUIC is supposed to be a transport-level protocol and there are no risks of metadata leaks that could happen with DoH. "},{"title":"How to flush DNS cache","type":0,"sectionRef":"#","url":"public-dns/solving-problems/how-to-flush-dns-cache/","content":"","keywords":""},{"title":"What is DNS cache?​","type":1,"pageTitle":"How to flush DNS cache","url":"public-dns/solving-problems/how-to-flush-dns-cache/#what-is-dns-cache","content":"DNS cache stores the IP addresses of visited sites on the local computer so that they load faster next time. Instead of doing a long DNS lookup, the system answers the queries with DNS records from the temporary DNS cache. The DNS cache contains so-called resource records (RRs), which are: Resource data (or rdata);Record type;Record name;TTL (time to live);Class;Resource data length. "},{"title":"When you might need to clear the cache​","type":1,"pageTitle":"How to flush DNS cache","url":"public-dns/solving-problems/how-to-flush-dns-cache/#when-you-might-need-to-clear-the-cache","content":"You regularly get a 404 error. For example, the website was transferred to another server, and its IP address has changed. To make the browser open the website from the new IP address, you need to remove the cached IP from the DNS cache. You want to improve your privacy. You want to protect yourself from hacker attacks and viruses. When the DNS cache is corrupted, your browser may redirect you to an IP address of a malicious website that an attacker inserted in your computer’s DNS records. "},{"title":"How to flush DNS cache on different OSs​","type":1,"pageTitle":"How to flush DNS cache","url":"public-dns/solving-problems/how-to-flush-dns-cache/#how-to-flush-dns-cache-on-different-oss","content":""},{"title":"macOS​","type":1,"pageTitle":"How to flush DNS cache","url":"public-dns/solving-problems/how-to-flush-dns-cache/#macos","content":"To clear the DNS cache on macOS, open the Terminal (you can find it by using the Spotlight search — to do that, press Command+Space and type Terminal) and enter the following command: sudo killall -HUP mDNSResponder On macOS Big Sur 11.2.0 and macOS Monterey 12.0.0, you may also use this command: sudo dscacheutil -flushcache After that, enter your administrator password to complete the process. "},{"title":"Windows​","type":1,"pageTitle":"How to flush DNS cache","url":"public-dns/solving-problems/how-to-flush-dns-cache/#windows","content":"To flush DNS cache on your Windows device, do the following: Load the Command Prompt as an administrator. You can find it in the Start Menu by typing command prompt or cmd. Then type ipconfig/flushdns and press Enter. You will see the line Successfully flushed the DNS Resolver Cache. Done! "},{"title":"Linux​","type":1,"pageTitle":"How to flush DNS cache","url":"public-dns/solving-problems/how-to-flush-dns-cache/#linux","content":"Linux does not have OS-level DNS caching unless a caching service such as Systemd Resolved, DNSMasq, BIND or Nscd is installed and running. The process of clearing the DNS cache depends on the Linux distribution and the caching service used. For each distribution you need to start a terminal window. Press Ctrl+Alt+T on your keyboard and use the corresponding command to clear the DNS cache for the service your Linux system is running. To find out which DNS resolver you're using, command sudo lsof -i :53 -S. Systemd Resolved​ To clear the Systemd Resolved DNS cache, type: sudo systemd-resolve --flush-caches On success, the command doesn’t return any message. DNSMasq​ To clear the DNSMasq cache, you need to restart it: sudo service dnsmasq restart Nscd​ To clear the Nscd cache, you also need to restart the service: sudo service nscd restart BIND​ To flush the BIND DNS cache, run the command: rndc flush Then you will need to reload BIND: rndc reload You will get the message that the server has been successfully reloaded. "},{"title":"Android​","type":1,"pageTitle":"How to flush DNS cache","url":"public-dns/solving-problems/how-to-flush-dns-cache/#android","content":"The easiest way to clear your DNS cache on your Android device is to turn the Airplane mode on and off. You can enable/disable the Airplane Mode in the Quick Settings pane. A hard reboot can also help flush the DNS cache for your device. In order to do that, press and hold the power button for at least 20 seconds. It will (usually) force your device to reboot manually and the DNS cache will be cleared. Another option is to reset the network settings of your device in the Settings app. Open Settings &gt; System &gt; Advanced &gt; Reset options &gt; Reset network settings and tap Reset Settings to confirm. Note: by doing that, you will lose connections to Wi-Fi routers and other specific network settings, including DNS servers customizations. You will need to reset them manually. "},{"title":"iOS​","type":1,"pageTitle":"How to flush DNS cache","url":"public-dns/solving-problems/how-to-flush-dns-cache/#ios","content":"There are different ways to clear the DNS cache on your iPad or iPhone. The simplest way is to activate the Airplane mode (for example, in the Control Center or in the Settings app) and to deactivate it again. The DNS cache will be flushed. Another option is to reset the network settings of your device in the Settings app. Open General, scroll down, find Reset and tap on Reset Network Settings. Note: by doing that, you will lose connections to Wi-Fi routers and other specific network settings, including DNS servers customizations. You will need to reset them manually. "}]