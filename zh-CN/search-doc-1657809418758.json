[{"title":"DNS 过滤","type":0,"sectionRef":"#","url":"general/dns-filtering/","content":"","keywords":""},{"title":"DNS 是什么？​","type":1,"pageTitle":"DNS 过滤","url":"general/dns-filtering/#dns-是什么","content":"DNS 是指“域名系统”。它的目标是将网站名称转换成浏览器能识别的 IP 地址。 因此，每次您访问网站，您的浏览器都能给特定服务器（DNS 服务器）发送请求。 该服务器会查看被请求的域名，并且用对应的 IP 地址响应。 它的示意图可以这样表示：  当然，不仅是浏览器，所有发送任何网络请求的应用程序和软件也都是如此。 "},{"title":"DNS 过滤工作原理是什么？​","type":1,"pageTitle":"DNS 过滤","url":"general/dns-filtering/#dns-过滤工作原理是什么","content":"当您使用某一款支持 DNS 过滤的 AdGuard 应用程序时，它作为您的设备和 DNS 服务器的“缓冲器”。 您的浏览器或应用程序所要发送的 DNS 请求会先由 AdGuard 来处理。 如您使用的是由您的 ISP（互联网服务提供商）提供的默认 DNS 服务器，很可能您的 DNS 流量未加密，因此容易受到窥探和劫持的威胁。 在 DNS 请求从您的设备发送到服务器前，AdGuard 会加密它们，因此没有坏人可以再轻松获取请求的内容。 除此之外，AdGuard 能够识别广告、跟踪器和/或成人网站信息，并且将它们发送到“黑洞”，而不是到 DNS 服务器。 下述可了解更多。  DNS 过滤是效果很强的工具，并且主要的 AdGuard 应用程序都支持它，包括 AdGuard Windows 版、AdGuard Mac 版、AdGuard 安卓版以及 AdGuard iOS 版。 DNS 过滤可以分为两个不同的功能: 加密和重新路由 DNS 流量到 DNS 服务器，并拦截一些域名本地应用 DNS 拦截列表。 "},{"title":"DNS 服务器​","type":1,"pageTitle":"DNS 过滤","url":"general/dns-filtering/#dns-服务器","content":"一共有数千个 DNS 服务器可选。它们的属性与用途都是独一无二的。 大部分 DNS 服务器只能返回被请求网域的 IP 地址，但也有些 DNS 服务器具有一些额外功能。比如，它们能屏蔽广告、跟踪器、带有成人内容的网站等等。 当今大部分主流 DNS 服务器都应用一个或更多可靠的加密协议，比如：DNS-over-HTTPS、DNS-over-TLS。 AdGuard 还提供DNS 服务，它是世界上第一个提供非常新的和有前途的DNS-over-QUIC 安全协议的公司。 AdGuard 为不同目的提供不同的服务器。 下面的图标展示 AdGuard 拦截服务器的工作原理：  其它 DNS 提供商的工作方式也可能有所不同，所以在选择某一个 DNS 服务器前，我们建议您要先多了解它们。 在这篇文章里，您可以找到最受欢迎 DNS 提供商的清单。 所有支持 DNS 功能的 AdGuard 应用程序也有 DNS 服务器清单。在清单里用户可以选择自己想使用的 DNS 服务器，或任何自定义 DNS 服务器。 "},{"title":"本地 DNS 拦截列表​","type":1,"pageTitle":"DNS 过滤","url":"general/dns-filtering/#本地-dns-拦截列表","content":"但是如果只依赖 DNS 服务器来过滤 DNS 流量，你就失去了所有的灵活性。 如果选定的服务器拦截域名，你将无法访问该域名。 但如果您使用 AdGuard，您甚至不需要配置任何特定的 DNS 服务器就可以过滤 DNS 流量。 所有 AdGuard 产品允许您应用 DNS 拦截列表，无论是简单的 Hosts 文件还是使用更复杂语法的清单。 它们与一般的广告过滤器运行相似：当 DNS 请求与某一个属于激活过滤器列表的规则相匹配时，该 DNS 请求将会被阻止。 更准确地说，这个 DNS 请求将会发送到“黑洞”。 在 AdGuard iOS 版上您先要在设置里启用「高级模式」以使用 DNS 拦截。 您可以自定义添加您所要的拦截列表数量。 比方说，您可以使用 AdGuard DNS 过滤器。 它确实能够拦截所有 AdGuard DNS 服务器屏蔽的元素，但是使用 AdGuard DNS 过滤器的话，您还可以使用任何其它 DNS 服务器。 此外，这样您可以添加更多过滤器或创建自定义排除项规则。上述的功能都不可能通过简单的「使用拦截 DNS 服务器」设置来实现。 您可以在这里找到几百个不同的 DNS 拦截列表。 "},{"title":"DNS 过滤与网络层面过滤的对比​","type":1,"pageTitle":"DNS 过滤","url":"general/dns-filtering/#dns-过滤与网络层面过滤的对比","content":"网络过滤是我们所说的 AdGuard 独立应用程序处理网络流量的&quot;常规&quot;方式，因此得名。 您可以阅读这篇文章回顾往期内容。 首先，我们要提到一点，使用 AdGuard 的话，您不需要二选一。 您可以一起使用常规网络层面过滤和 DNS 过滤。 不过，还是要明确分出它们俩的区别。 DNS 过滤不仅有其独特优点，但也有些缺点： DNS 过滤的优点： 在某些平台上，这是实现全系统过滤的唯一方法。 比方说，在 iOS 上只有 Safari 浏览器支持内容拦截。为了拦截其它内容，用户只可以用 DNS 过滤。有些跟踪方式，比如 CNAME 跟踪，只可以通过 DNS 过滤被拦截。处理 DNS 请求是您可以拦截广告或跟踪器的最早阶段。这样您可以节省点电池寿命及流量。 DNS 过滤的缺点： DNS 过滤是一种“暴力过滤法”。意思是 DNS 过滤不会移除拦截广告后留下的白空，或让您使用自定义过滤方式。 通过 DNS 过滤无法拦截很多更复杂的广告（或者说，可以拦截，但只能通过阻止被用于其他目的的整个域名来实现）。  DNS 与网络层面过滤的区别 我们无法知道 DNS 请求的来源。这意味着，在 DNS 层面过滤，您无法区分不同应用程序。 这个会损害统计数据，并且不允许我们创建针对特定的应用程序过滤规则。 我们推荐在网络过滤的基础上再使用 DNS 过滤，而不是完全代替它。 "},{"title":"DNS 过滤规则语法","type":0,"sectionRef":"#","url":"general/dns-filtering-syntax/","content":"","keywords":""},{"title":"前言​","type":1,"pageTitle":"DNS 过滤规则语法","url":"general/dns-filtering-syntax/#前言","content":"您可以使用 AdGuard DNS 过滤规则语法来使规则更加灵活，因此它们可以根据您的首选项来拦截内容。 AdGuard DNS 过滤规则语法可用于不同的 AdGuard 产品，如 AdGuard Home、 AdGuard DNS、 Windows/Mac/Android 的 AdGuard。 有三种不同的方法来编写主机拦截列表： Adblock 风格的语法： 基于使用 Adblock 风格的规则语法子集编写过滤规则的现代方法。 这样阻止拦截列表与浏览器广告拦截器兼容。 /etc/hosts 语法： 使用与操作系统处理其主机文件相同的语法的老式、经过实践检验的语法。 只适用于域的语法：一个简单的域名列表。 如果您要创建阻止列表，我们建议使用 Adblock 样式语法。 与旧式语法相比，它有几个重要的优点： 阻止列表大小。 使用模式匹配允许您拥有单个规则，而不是数百个 /etc/hosts 条目。 兼容性。 您的屏蔽列表将与浏览器广告拦截器兼容，并且与浏览器过滤器列表共享规则会更容易。 可扩展性。 在过去的十年中，Adblock 风格的语法有了很大的发展，我们不明白为什么我们不能进一步扩展它并为网络范围的拦截器提供额外的功能。 如果你正在维护一个 /etc/hosts-风格的封锁清单，或者你维护多个过滤列表，无论其类型如何，我们提供一个工具，可以用来编译封杀清单。 我们称它为 Hostlist compiler ，我们自己用它来创建 AdGuard DNS filter。 "},{"title":"基本示例​","type":1,"pageTitle":"DNS 过滤规则语法","url":"general/dns-filtering-syntax/#基本示例","content":"||example.org^：阻止访问 example.org 域及其所有子域，例如 www.example.org 。 @@||example.org^：取消阻止对 example.org 域及其所有子域的访问。 1.2.3.4 example.org: （注意，旧的 /etc/hosts-style 语法）在 AdGuard Home 中，用 1.2.3.4 对 example.org 域名的查询，但 没有 其子域的查询。 在私人AdGuard DNS中，阻止对 example.org的访问。 www.example.org 仍然允许。 In AdGuard Home, using the unspecified IP address (0.0.0.0) or a local address (127.0.0.1 and alike) for a host is basically the same as blocking that host. # Returns the IP address 1.2.3.4 for example.org. 1.2.3.4 example.org # Blocks example.com by responding with 0.0.0.0. 0.0.0.0 example.com example.org: a simple domain rule. Blocks example.org domain but not its subdomains. www.example.org 仍然允许。 ! Here goes a comment and # Also a comment: comments. /REGEX/: block access to the domains matching the specified regular expression. "},{"title":"Adblock 语法样式​","type":1,"pageTitle":"DNS 过滤规则语法","url":"general/dns-filtering-syntax/#adblock-语法样式","content":"This is a subset of the traditional Adblock-style syntax which is used by browser ad blockers.  rule = [&quot;@@&quot;] pattern [ &quot;$&quot; modifiers ] modifiers = [modifier0, modifier1[, ...[, modifierN]]]  pattern: the hostname mask. Every hostname is matched against this mask. The pattern can also contain special characters, which are described below. @@: the marker that is used in the exception rules. Start your rule with this marker if you want to turn off filtering for the matching hostnames. modifiers: parameters that clarify the rule. They may limit the scope of the rule or even completely change the way it works. "},{"title":"Special Characters​","type":1,"pageTitle":"DNS 过滤规则语法","url":"general/dns-filtering-syntax/#special-characters","content":"*: the wildcard character. It is used to represent any set of characters. This can also be an empty string or a string of any length. ||: matches the beginning of a hostname, including any subdomain. For instance, ||example.org matches example.org and test.example.org but not testexample.org. ^: the separator character. Unlike browser ad blocking, there's nothing to separate in a hostname, so the only purpose of this character is to mark the end of the hostname. |: a pointer to the beginning or the end of the hostname. The value depends on the character placement in the mask. For example, the rule ample.org| corresponds to example.org but not to example.org.com. |example corresponds to example.org but not to test.example. "},{"title":"Regular Expressions​","type":1,"pageTitle":"DNS 过滤规则语法","url":"general/dns-filtering-syntax/#regular-expressions","content":"If you want even more flexibility in making rules, you can use regular expressions instead of the default simplified matching syntax. If you want to use a regular expression, the pattern has to look like this: pattern = &quot;/&quot; regexp &quot;/&quot;  Examples: /example.*/ will block hosts matching the example.* regexp. @@/example.*/$important will unblock hosts matching the example.* regexp. Note that this rule also implies the important modifier. "},{"title":"Comments​","type":1,"pageTitle":"DNS 过滤规则语法","url":"general/dns-filtering-syntax/#comments","content":"Any line that starts with an exclamation mark or a hash sign is a comment and it will be ignored by the filtering engine. Comments are usually placed above rules and used to describe what a rule does. Example: ! This is a comment. # This is also a comment.  "},{"title":"Rule Modifiers​","type":1,"pageTitle":"DNS 过滤规则语法","url":"general/dns-filtering-syntax/#rule-modifiers","content":"You can change the behavior of a rule by adding modifiers. Modifiers must be located at the end of the rule after the $ character and be separated by commas. Examples:  ||example.org^ is the matching pattern. $ is the delimiter, which signals that the rest of the rule are modifiers. important is the modifier. You may want to use multiple modifiers in a rule. Separate them by commas in this case: ||example.org^$client=127.0.0.1,dnstype=A ||example.org^ is the matching pattern. $ is the delimiter, which signals that the rest of the rule are modifiers. client=127.0.0.1 is the client modifier with its value, 127.0.0.1, is the delimiter. And finally, dnstype=A is the dnstype modifier with its value, A. NOTE: If a rule contains a modifier not listed in this document, the whole rule must be ignored. This way we avoid false-positives when people are trying to use unmodified browser ad blockers' filter lists like EasyList or EasyPrivacy. client​ The client modifier allows specifying clients this rule is applied to. There are two main ways to identify a client: By their IP address or CIDR prefix. This way works for all kinds of clients. By their name. This way only works for persistent clients (in AdGuard Home) and devices (in Private AdGuard DNS), which you have manually added. NOTE: In AdGuard Home, ClientIDs are not currently supported, only names are. If you have added a client with the name “My Client” and ClientID my-client spell your modifier as $client='My Client' as opposed to $client=my-client. The syntax is: $client=value1|value2|...  You can also exclude clients by adding a ~ character before the value. In this case, the rule is not be applied to this client's DNS requests. $client=~value1  Client names usually contain spaces or other special characters, which is why you should enclose the name in quotes. Both single and double ASCII quotes are supported. Use the backslash (\\) to escape quotes (&quot; and '), commas (,), and pipes (|). NOTE: When excluding a client, you must keep ~ out of the quotes. Examples: @@||*^$client=127.0.0.1: unblock everything for localhost. ||example.org^$client='Frank\\'s laptop': block example.org for the client named Frank's laptop only. Note that quote (') in the name must be escaped. ||example.org^$client=~'Mary\\'s\\, John\\'s\\, and Boris\\'s laptops': block example.org for everyone except for the client named Mary's, John's, and Boris's laptops. Note that comma (,) must be escaped as well. ||example.org^$client=~Mom|~Dad|Kids: block example.org for Kids, but not for Mom and Dad. This example demonstrates how to specify multiple clients in one rule. ||example.org^$client=192.168.0.0/24: block example.org for all clients with IP addresses in the range from 192.168.0.0 to 192.168.0.255. denyallow​ You can use the denyallow modifier to exclude domains from the blocking rule. To add multiple domains to one rule, use the | character as a separator. The syntax is: $denyallow=domain1|domain2|...  This modifier allows avoiding creating unnecessary exception rules when our blocking rule covers too many domains. You may want to block everything save for a couple of TLD domains. You could use the standard approach, i.e. rules like this: ! Block everything. /.*/ ! Unblock a couple of TLDs. @@||com^ @@||net^  The problem with this approach is that this way you will also unblock tracking domains that are located on those TLDs (i.e. google-analytics.com). Here's how to solve this with denyallow: *$denyallow=com|net  Examples: *$denyallow=com|net: block everything save for *.com and *.net. @@*$denyallow=com|net: unblock everything save for *.com and *.net. ||example.org^$denyallow=sub.example.org. block example.org and *.example.org but don't block sub.example.org. dnstype​ The dnstype modifier allows specifying DNS request or response type on which this rule will be triggered. The syntax is: $dnstype=value1|value2|... $dnstype=~value1|~value2|~...  The names of the types are case-insensitive, but are validated against a set of actual DNS resource record (RR) types. Do not combine exclusion rules with inclusion ones. This: $dnstype=~value1|value2  is equivalent to this: $dnstype=value2  Examples: ||example.org^$dnstype=AAAA: block DNS queries for the IPv6 addresses of example.org. ||example.org^$dnstype=~A|~CNAME: only allow A and CNAME DNS queries for example.org, block out the rest. NOTE: Before version v0.108.0, AdGuard Home would use the type of the request to filter the response records, as opposed to the type of the response record itself. That caused issues, since that meant that you could not write rules that would allow certain CNAME records in responses in A and AAAA requests. In v0.108.0 that behaviour was changed, so now this: ||canon.example.com^$dnstype=~CNAME  allows you to avoid filtering of the following response: ANSWERS: -&gt; example.com canonical name = canon.example.com. ttl = 60 -&gt; canon.example.com internet address = 1.2.3.4 ttl = 60  dnsrewrite​ The dnsrewrite response modifier allows replacing the content of the response to the DNS request for the matching hosts. Note that this modifier in AdGuard Home works in all rules, but in Private AdGuard DNS — only in custom ones. Rules with the dnsrewrite response modifier have higher priority than other rules in AdGuard Home. The shorthand syntax is: $dnsrewrite=1.2.3.4 $dnsrewrite=abcd::1234 $dnsrewrite=example.net $dnsrewrite=REFUSED  The keywords MUST be in all caps (e.g. NOERROR). Keyword rewrites take precedence over the other and will result in an empty response with an appropriate response code. The full syntax is of the form RCODE;RRTYPE;VALUE: $dnsrewrite=NOERROR;A;1.2.3.4 $dnsrewrite=NOERROR;AAAA;abcd::1234 $dnsrewrite=NOERROR;CNAME;example.net $dnsrewrite=REFUSED;;  The $dnsrewrite modifier with the NOERROR response code may also has empty RRTYPE and VALUE fields. The CNAME one is special because AdGuard Home will resolve the host and add its info to the response. That is, if example.net has IP 1.2.3.4, and the user has this in their filter rules: ||example.com^$dnsrewrite=example.net ! Or: ||example.com^$dnsrewrite=NOERROR;CNAME;example.net  then the response will be something like: $ nslookup example.com my.adguard.local  Server: my.adguard.local Address: 127.0.0.1#53 Non-authoritative answer: example.com canonical name = example.net. Name: example.net Address: 1.2.3.4  Next, the CNAME rewrite. After that, all other records' values are summed as one response, so this: ||example.com^$dnsrewrite=NOERROR;A;1.2.3.4 ||example.com^$dnsrewrite=NOERROR;A;1.2.3.5  will result in a response with two A records. Currently supported RR types with examples: ||4.3.2.1.in-addr.arpa^$dnsrewrite=NOERROR;PTR;example.net. adds a PTRrecord for reverse DNS. Reverse DNS requests for 1.2.3.4 to the DNS server will result in example.net. NOTE: the IP MUST be in reverse order. See RFC 1035. ||example.com^$dnsrewrite=NOERROR;A;1.2.3.4 adds an A record with the value 1.2.3.4. ||example.com^$dnsrewrite=NOERROR;AAAA;abcd::1234 adds an AAAA record with the value abcd::1234. ||example.com^$dnsrewrite=NOERROR;CNAME;example.org adds a CNAME record. See explanation above. ||example.com^$dnsrewrite=NOERROR;HTTPS;32 example.com alpn=h3 adds an HTTPS record. Only a subset of parameter values is supported: values must be contiguous and, where a value-list is expected, only one value is currently supported: ipv4hint=127.0.0.1 // Supported. ipv4hint=&quot;127.0.0.1&quot; // Unsupported. ipv4hint=127.0.0.1,127.0.0.2 // Unsupported. ipv4hint=&quot;127.0.0.1,127.0.0.2&quot; // Unsupported. This will be changed in the future. ||example.com^$dnsrewrite=NOERROR;MX;32 example.mail adds an MX record with precedence value 32 and exchange value example.mail. ||example.com^$dnsrewrite=NOERROR;SVCB;32 example.com alpn=h3 adds a SVCB value. See the HTTPS example above. ||example.com^$dnsrewrite=NOERROR;TXT;hello_world adds a TXT record with the value hello_world. ||_svctype._tcp.example.com^$dnsrewrite=NOERROR;SRV;10 60 8080 example.com adds an SRV record with priority value 10, weight value 60, port8080, and target value example.com. ||example.com^$dnsrewrite=NXDOMAIN;; responds with an NXDOMAIN code. $dnstype=AAAA,denyallow=example.org,dnsrewrite=NOERROR;; responds with an empty NOERROR answers for all AAAA requests except the ones for example.org. Exception rules remove one or all rules: @@||example.com^$dnsrewrite removes all DNS rewrite rules. @@||example.com^$dnsrewrite=1.2.3.4 removes the DNS rewrite rule that adds an A record with the value 1.2.3.4. important​ The important modifier applied to a rule increases its priority over any other rule without the modifier. Even over basic exception rules. Examples: In this example: ||example.org^$important @@||example.org^ ||example.org^$important will block all requests to *.example.org despite the exception rule. In this example: ||example.org^$important @@||example.org^$important the exception rule also has the important modifier, so it will work. badfilter​ The rules with the badfilter modifier disable other basic rules to which they refer. It means that the text of the disabled rule should match the text of the badfilter rule (without the badfilter modifier). Examples: ||example.com$badfilter disables ||example.com. @@||example.org^$badfilter disables @@||example.org^. NOTE: The badfilter modifier currently doesn't work with /etc/hosts-style rules. 127.0.0.1 example.org$badfilter will not disable the original 127.0.0.1 example.org rule. ctag​ The ctag modifier can only be used in AdGuard Home. It allows to block domains only for specific types of DNS client tags. You can assign tags to clients in the AdGuard Home UI. In the future, we plan to assign tags automatically by analyzing the behavior of each client. The syntax is: $ctag=value1|value2|...  If one of client's tags matches the ctag values, this rule applies to the client. The syntax for exclusion is: $ctag=~value1|~value2|...  If one of client's tags matches the exclusion ctag values, this rule doesn't apply to the client. Examples: ||example.org^$ctag=device_pc|device_phone: block example.org for clients tagged as device_pc or device_phone. ||example.org^$ctag=~device_phone: block example.org for all clients except those tagged as device_phone. The list of allowed tags: By device type: device_audio: audio devices.device_camera: cameras.device_gameconsole: game consoles.device_laptop: laptops,device_nas: NAS (Network-attached Storages).device_pc: PCs.device_phone: phones.device_printer: printers.device_securityalarm: security alarms.device_tablet: tablets.device_tv: TVs.device_other: other devices. By operating system: os_android: Android.os_ios: iOS.os_linux: Linux.os_macos: macOS.os_windows: Windows.os_other: other OSes. By user group: user_admin: administrators.user_regular: regular users.user_child: children. "},{"title":"/etc/hosts-Style Syntax​","type":1,"pageTitle":"DNS 过滤规则语法","url":"general/dns-filtering-syntax/#etc-hosts-syntax","content":"For each host a single line should be present with the following information: IP_address canonical_hostname [aliases...]  Fields of the entries are separated by any number of space or tab characters. Text from the # character until the end of the line is a comment and is ignored. Hostnames may contain only alphanumeric characters, hyphen-minus signs (-), and periods (.). They must begin with an alphabetic character and end with an alphanumeric character. Optional aliases provide for name changes, alternate spellings, shorter hostnames, or generic hostnames (for example, localhost). Example: # This is a comment 127.0.0.1 example.org example.info 127.0.0.1 example.com 127.0.0.1 example.net # this is also a comment  In AdGuard Home, the IP addresses are used to respond to DNS queries for these domains. In Private AdGuard DNS, these addresses are simply blocked. "},{"title":"Domains-Only Syntax​","type":1,"pageTitle":"DNS 过滤规则语法","url":"general/dns-filtering-syntax/#domains-only-syntax","content":"A simple list of domain names, one name per line. Example: # This is a comment example.com example.org example.net # this is also a comment  If a string is not a valid domain (e.g. *.example.org), AdGuard Home will consider it to be an Adblock-style rule. "},{"title":"Hostlists Compiler​","type":1,"pageTitle":"DNS 过滤规则语法","url":"general/dns-filtering-syntax/#hostlists-compiler","content":"If you are maintaining a blocklist and use different sources in it, Hostlists compiler may be useful to you. It is a simple tool that makes it easier to compile a hosts blocklist compatible with AdGuard Home, Private AdGuard DNS or any other AdGuard product with DNS filtering. What it's capable of: Compile a single blocklist from multiple sources. Exclude the rules you don't need. Cleanup the resulting list: deduplicate, remove invalid rules, and compress the list. "},{"title":"致谢","type":0,"sectionRef":"#","url":"miscellaneous/acknowledgements/","content":"","keywords":""},{"title":"AdGuard DNS​","type":1,"pageTitle":"致谢","url":"miscellaneous/acknowledgements/#adguard-dns","content":"Miek Gieben 的 DNS 模块： https://github.com/miekg/dnsJun Kimura 的 GCache 模块： https://github.com/bluele/gcachePatrick Mylund Nielsen 的 Go-Cache 模块： https://github.com/patrickmn/go-cacheDaniel Martí 的 Gofumpt 程序： mvdan.cc/gofumptLucas Clemente 的 QUIC-Go 模块： https://github.com/lucas-clemente/quic-goDominik Honnef 的静态检查程序： https://staticcheck.io "},{"title":"AdGuard API 和网站​","type":1,"pageTitle":"致谢","url":"miscellaneous/acknowledgements/#adguard-api-和网站","content":"Symfony: http://symfony.com/React: https://reactjs.org/Vue: https://vuejs.org/PostgreSQL: https://www.postgresql.org/Spring https://spring.io/ClickHouse: https://clickhouse.com/Logstash: https://github.com/elastic/logstash "},{"title":"Private AdGuard DNS beta测试版","type":0,"sectionRef":"#","url":"miscellaneous/beta-testing/","content":"","keywords":""},{"title":"如何成为 beta 测试者的一员​","type":1,"pageTitle":"Private AdGuard DNS beta测试版","url":"miscellaneous/beta-testing/#如何成为-beta-测试者的一员","content":"要成为 Private AdGuard DNS 的 beta 测试者访问 AdGuard DNS 网站，请点击右上角的“加入 beta测试计划”按钮，然后通过社交媒体或现有 AdGuard账户登录。 一切搞定：现在您可以设置您的私人 AdGuard DNS、使用该服务并向我们发送有关其工作原理的报告。 "},{"title":"如何报告bug​","type":1,"pageTitle":"Private AdGuard DNS beta测试版","url":"miscellaneous/beta-testing/#如何报告bug","content":"假如你发现了一个bug 或者您只是想与开发人员分享您的建议？ 无论如何，有几种方法可以让我们了解情况： 转到 forum.adguard.com 并在 [论坛的“Beta 测试”类别](https:// 中发布一个新主题（或查找现有主题） forum.adguard.com/index.php?categories/48/) 请务必先阅读论坛规则； 转到 AdGuard DNS 存储库，在那里创建一个新问题并详细描述bug/功能请求。 上述方法是最优选的，但如果需要，您可以使用其他方法： 在各种社交媒体平台上找到我们，例如 Facebook、[Reddit](https://www.reddit.com/r /Adguard/) 等 然而，这并不是讨论技术问题的最有效方式。 从应用程序中的“支持”选项以向我们的支持团队发送电子邮件，或直接写信至 support@adguard.com。 "},{"title":"如何进行屏幕截图","type":0,"sectionRef":"#","url":"miscellaneous/take-screenshot/","content":"","keywords":""},{"title":"如何进行屏幕截图​","type":1,"pageTitle":"如何进行屏幕截图","url":"miscellaneous/take-screenshot/#如何进行屏幕截图","content":"在这里，您将找到所有必要的快捷键，以便在您的计算机或移动设备上截屏。 "},{"title":"Android（安卓）​","type":1,"pageTitle":"如何进行屏幕截图","url":"miscellaneous/take-screenshot/#android安卓","content":"可以通过多种方式在 Android 设备上截屏，具体取决于设备型号及其制造商。 一般来说，你应该在安卓系统中使用以下按钮组合。 同时按住 降低音量 和 电源 按钮 1-2 秒 您的 Android 设备将捕获整个屏幕并将其保存为照片。 您的 Android 设备将捕获整个屏幕并将其保存为照片。 但是，正如已经说过的那样，可能会因特定设备而有所不同。 让我们看看其他可能的操作： 同时按住 Home 和 电源按钮 1-2 秒；同时按住 后退 和 Home 按钮 在 Android 8 及更高版本上，您还可以通过将手垂直放置在手机的左边缘或右边缘并用手触摸屏幕从该边缘向内滑动来截取屏幕截图。 如果此方法不起作用，请检查 设置 &gt; 高级 功能，以启用 轻扫以捕获。 此外，您始终可以使用任何特殊应用程序在您的设备上截取屏幕截图，例如 - Screenshot Easy、 Screenshot Ultimate、 Screenshot Snap 等。 "},{"title":"iOS​","type":1,"pageTitle":"如何进行屏幕截图","url":"miscellaneous/take-screenshot/#ios","content":"任何 iOS 设备（旧设备除外）都可以让您使用标准工具截取屏幕截图。 要在 iOS 设备上截屏，请使用以下组合： 同时按下 睡眠/唤醒 （侧）按钮和 主页 按钮，然后快速松开它们 这个适用于 iPhone X 或更高版本： 同时按下 睡眠/唤醒 按钮和 增大音量 按钮，然后迅速松开它们。 您的 iOS 设备将捕获整个屏幕并将其保存为照片。 您可以在标准的照片应用程序中找到它。 "},{"title":"Windows​","type":1,"pageTitle":"如何进行屏幕截图","url":"miscellaneous/take-screenshot/#windows","content":"要在 Windows 上截屏，请按 PrtScn 按钮 在某些笔记本上，您必须按住 Fn 然后按 PrtScn。 请注意：PrtScn（屏幕截图键）按钮在各种键盘上可能有不同的缩写 - PrntScrn、PrtScn、PrtScr 或 PrtSc。 Windows 捕获整个屏幕并将其复制到（不可见的）剪贴板。 要对一个活动窗口进行截图，请使用以下组合。 按住 Alt 并按 PrtScn （或 Fn Alt PrtScn 在某些笔记本上）。 要截取特定区域的屏幕截图，您应该使用以下组合： 按住 Win （Windows 按钮）和 Shift 并按 S** 截图后，它将保存在剪贴板中。 在大多数情况下，您可以使用 Ctrl + V 按钮组合将其粘贴到当前正在编辑的文档中。 或者，如果您需要将屏幕截图保存到文件中，您应该打开 Paint 程序（或任何其他可以处理图像的应用程序）。 使用相同的按钮组合或通过点击粘贴按钮(通常在屏幕的左上角) 将你的截图粘贴到那里，然后保存它。 Windows 8和10 允许您使用 Win + PrtScn 组合非常快速地截取屏幕截图。 按下这些按钮后，屏幕截图将自动作为文件保存到 您的图片 -&gt; 屏幕截图文件夹中。 还有一个用于截屏的专用程序，称为 Snipping Tool ，您可以通过“开始”菜单在计算机的标准程序中找到该程序。 截图工具可让您捕获桌面的任何区域或整个屏幕。 使用此程序截取屏幕截图后，您可以编辑图片并将其保存到计算机上的任何文件夹中。 此外，你也可以尝试使用不同的应用程序在电脑上进行截图，如 PicPick, Nimbus Screenshot。 Screenshot Captor, Snipaste, Monosnap 等。 "},{"title":"MacOS​","type":1,"pageTitle":"如何进行屏幕截图","url":"miscellaneous/take-screenshot/#macos","content":"若要在 Mac 上截取屏幕截图，请使用以下按钮组合： 按住 ⌘ Cmd + Shift + 3** 您的 Mac 将捕获整个屏幕并将其保存为桌面上的文件。 要对一个活动窗口进行截图，请使用以下组合： 同时按住 ⌘ Cmd + Shift + 4 + 空格键。 光标将变为相机图标。 单击窗口以捕获它。 按 Esc 按钮取消截屏 要截取特定区域的屏幕截图，您应该使用以下组合： 同时按住 ⌘ Cmd + Shift + 4**。 拖动十字准线以选择所需的区域。 松开鼠标或触控板来进行截图，按Esc键来取消截图。 若要截取 Touch Bar （MacBook Pro） 的屏幕截图，请使用以下组合： 按住 ⌘ Cmd + Shift + 6** 您的 Mac 会捕获整个 Touch Bar 并将其作为文件保存在桌面上。 要将屏幕截图复制到剪贴板而不是保存它，请按住 Ctrl 以及上述任何组合。 然后，您可以使用 Cmd + V 组合将屏幕截图（从剪贴板）粘贴到您当前正在编辑的文档或图像中。 您也可以使用 预览 并选择 截屏 (所选区域、窗口或整个屏幕) 进行截屏。 使用 Preview ，您可以将屏幕截图保存为 JPG、TIFF、PDF 和其他文件格式。 "},{"title":"更新知识库","type":0,"sectionRef":"#","url":"miscellaneous/update-kb/","content":"","keywords":""},{"title":"如何提出更改建议或撰写新文章​","type":1,"pageTitle":"更新知识库","url":"miscellaneous/update-kb/#suggest-change","content":"您可以使用上述 GitHub 的功能建议对当前文章进行更改并将新文章添加到知识库。 如果您不熟悉使用该平台的使用方法，请先阅读本节中的 文档。 准备就绪后，在DNS存储库处理。 我们知识库中的所有文本都是用 Markdown 标记语言编写的。 在编辑或撰写文章时，请牢记这一点。 按照 这个链接 了解更多关于Markdown 语法的信息。 知识库网站是用 Docusaurus 2 建立的，这是一个现代静态网站生成器。 在提出修改或补充建议时，要考虑到所有文件必须符合平台的规则。 你可以在 此链接获得指南了解它们。 你可以把这个知识库部署在你的电脑上，以概述你建议的变化。 有关执行此操作的详细说明，可以在此知识库的 GitHub 页面上的 README.md 文件 中找到。 "},{"title":"翻译文章​","type":1,"pageTitle":"更新知识库","url":"miscellaneous/update-kb/#translate-adguard","content":"知识库现有文章的翻译是在 Crowdin平台上进行的。 有关翻译和使用 Crowdin 的所有详细信息，都可以在 AdGuard 广告拦截器知识库的专用文章 中找到。 在撰写AdGuard DNS知识库文章时，您可能会遇到包含复数形式的字符串，您应该格外注意翻译。 在另一篇文章中，我们详细描述了翻译具有复数形式的字符串时可能出现的困难，并就如何在Crowdin平台上处理这些问题给出了大量说明。 "},{"title":"致力于解决开放性问题​","type":1,"pageTitle":"更新知识库","url":"miscellaneous/update-kb/#致力于解决开放性问题","content":"有时存在与更新知识库相关的 未完成任务。 你可以帮助我们以加速完成 就像 你对这个知识库提出任何其他修改建议一样。 选择您认为有吸引力的任何问题并开始处理它。 如果您有任何问题 - 您可以在对该问题的评论中直接提问。 "},{"title":"AdGuard DNS API","type":0,"sectionRef":"#","url":"private-dns/api/","content":"","keywords":""},{"title":"验证​","type":1,"pageTitle":"AdGuard DNS API","url":"private-dns/api/#验证","content":""},{"title":"生成访问令牌​","type":1,"pageTitle":"AdGuard DNS API","url":"private-dns/api/#生成访问令牌","content":"使用给定的参数对以下 URL 发出 POST 请求以生成 access_token： https://api.adguard-dns.io/oapi/v1/oauth_token Parameter\tDescriptionusername\tAccount email password\tAccount password mfa_token\tTwo-Factor authentication token (if enabled in account settings) 在响应中，您将同时获得 access_token 和 refresh_token。 access_token 将在指定的几秒后过期（由响应中的 expires_in 参数决定） 您可以重新生成一个新的 access_token 使用 refresh_token（参考：Generate Access Token from Refresh Token）。 refresh_token 是永久性的。 要撤销 refresh_token，请参阅：Revoking a Refresh Token。 示例请求​ $ curl 'https://api.adguard-dns.io/oapi/v1/oauth_token' -i -X POST \\ -H 'Content-Type: application/x-www-form-urlencoded' \\ -d 'username=user%40adguard.com' \\ -d 'password=********' \\ -d 'mfa_token=727810'  示例响应​ { &quot;access_token&quot;: &quot;jTFho_aymtN20pZR5RRSQAzd81I&quot;, &quot;token_type&quot;: &quot;bearer&quot;, &quot;refresh_token&quot;: &quot;H3SW6YFJ-tOPe0FQCM1Jd6VnMiA&quot;, &quot;expires_in&quot;: 2620978 }  "},{"title":"刷新以生成访问令牌​","type":1,"pageTitle":"AdGuard DNS API","url":"private-dns/api/#刷新以生成访问令牌","content":"访问令牌有有效期限 过期后，您的应用将不得不使用 refresh token 以请求新的 access token。 使用给定的参数发出以下 POST 请求以获取新的访问令牌： https://api.adguard-dns.io/oapi/v1/oauth_token Parameter\tDescriptionrefresh_token\tREFRESH TOKEN using which a new access token has to be generated. 示例请求​ $ curl 'https://api.adguard-dns.io/oapi/v1/oauth_token' -i -X POST \\ -H 'Content-Type: application/x-www-form-urlencoded' \\ -d 'refresh_token=H3SW6YFJ-tOPe0FQCM1Jd6VnMiA'  示例响应​ { &quot;access_token&quot;: &quot;xQnT7GYT6Ag--3oY_EcOOdXe-I0&quot;, &quot;token_type&quot;: &quot;bearer&quot;, &quot;refresh_token&quot;: &quot;H3SW6YFJ-tOPe0FQCM1Jd6VnMiA&quot;, &quot;expires_in&quot;: 2627999 }  "},{"title":"取消刷新该令牌​","type":1,"pageTitle":"AdGuard DNS API","url":"private-dns/api/#取消刷新该令牌","content":"要取消刷新该令牌，请使用给定参数发出以下 POST 请求： https://api.adguard-dns.io/oapi/v1/revoke_token 请求示例​ $ curl 'https://api.adguard-dns.com/oapi/v1/revoke_token' -i -X POST \\ -d 'token=H3SW6YFJ-tOPe0FQCM1Jd6VnMiA'  Parameter\tDescriptionrefresh_token\tREFRESH TOKEN which is to be revoked "},{"title":"访问API​","type":1,"pageTitle":"AdGuard DNS API","url":"private-dns/api/#访问api","content":"生成访问和刷新令牌后，可以通过在标头中传递访问令牌来进行 API 调用。 标头名称应为 Authorization标头值应为 Bearer {access_token} "},{"title":"API​","type":1,"pageTitle":"AdGuard DNS API","url":"private-dns/api/#api","content":""},{"title":"开源API 规范​","type":1,"pageTitle":"AdGuard DNS API","url":"private-dns/api/#开源api-规范","content":"OpenAPI 规范可在 https： //api.adguard-dns.io/static/swagger/openapi.json。 您可以使用不同的工具来查看可用 API 方法的列表。 例如，您可以在 https://editor.swagger.io/。 "},{"title":"反馈​","type":1,"pageTitle":"AdGuard DNS API","url":"private-dns/api/#反馈","content":"如果您希望使用新方法扩展此 API，请发送电子邮件至 devteam@adguard.com 并让我们知道您想添加什么。 "},{"title":"私人 AdGuard DNS","type":0,"sectionRef":"#","url":"private-dns/overview/","content":"","keywords":""},{"title":"什么是私人 AdGuard DNS​","type":1,"pageTitle":"私人 AdGuard DNS","url":"private-dns/overview/#什么是私人-adguard-dns","content":"私人 AdGuard DNS是一种DNS服务器，除了有公共DNS服务器的好处（如流量加密和域名阻止列表）外，还提供灵活的定制、DNS统计和家长控制等功能，并通过一个方便的仪表板轻松管理。 "},{"title":"为什么需要私人 AdGuard DNS​","type":1,"pageTitle":"私人 AdGuard DNS","url":"private-dns/overview/#为什么需要私人-adguard-dns","content":"今天，您可以将任何东西连接到互联网：电视、冰箱、智能电灯或扬声器。 但伴随着不可否认的便利，您会被追踪和被迫看到广告。 在这种情况下，一个简单的基于浏览器的广告拦截器不会保护您，但您可以设置AdGuard DNS来过滤流量、阻止广告和跟踪器， AdGuard DNS 具有系统范围的效果。 我们已经有 公共 AdGuard DNS 和 AdGuard Home。 这些解决方案对一些用户来说效果不错，但对其他用户来说，公共的AdGuard DNS缺乏配置的灵活性，而AdGuard Home则缺乏简单性。 这就是私人AdGuard DNS发挥作用的地方。 它具有两方面的优点：它提供可定制、可控制和信息统计--所有这些都通过一个简单易用的仪表盘实现。 "},{"title":"私人和公共 AdGuard DNS的区别​","type":1,"pageTitle":"私人 AdGuard DNS","url":"private-dns/overview/#私人和公共-adguard-dns的区别","content":"以下是公共 AdGuard DNS 和私人 AdGuard DNS 可用功能的简单比较。 公共 AdGuard DNS\t私人 AdGuard DNSDNS流量加密\tDNS流量加密 自带的域名封锁清单\t可自定义的域名封锁清单 -\t可以 导入/导出 自定义 DNS 过滤规则 -\t请求统计（看看你的DNS请求到哪里去了：哪些国家，哪些公司等。） -\t详细的查询日志 -\t家长控制 "},{"title":"如何配置私人 AdGuard DNS​","type":1,"pageTitle":"私人 AdGuard DNS","url":"private-dns/overview/#如何配置私人-adguard-dns","content":"进入你的 AdGuard DNS仪表盘 （如果没有登录，请使用你的AdGuard账户登录）。单击“连接设备”并按照屏幕上的说明进行操作。 支持的平台： - Android - iOS - Windows - Mac - Linux - 路由器 - 游戏机 "},{"title":"私人 AdGuard DNS的特点​","type":1,"pageTitle":"私人 AdGuard DNS","url":"private-dns/overview/#私人-adguard-dns的特点","content":""},{"title":"封锁清单管理​","type":1,"pageTitle":"私人 AdGuard DNS","url":"private-dns/overview/#封锁清单管理","content":"通过 &quot;拦截列表&quot;功能，你可以设置你想拦截的域名和放行的域名。 从各种各样的阻止列表中进行选择以用于不同的目的。  "},{"title":"用户规则​","type":1,"pageTitle":"私人 AdGuard DNS","url":"private-dns/overview/#用户规则","content":"当预装的有数千条规则的拦截列表 还不够时，我们有一个方便的功能，称为“用户规则”。 在这里，您可以手动添加自定义规则以 拦截/放行 某个域名或导入自定义规则列表（查看 DNS 过滤规则语法）。 您可以导出列表。  "},{"title":"统计​","type":1,"pageTitle":"私人 AdGuard DNS","url":"private-dns/overview/#统计","content":"在 &quot;统计 &quot;选项中，您可以查看到连接私人AdGuard DNS的设备所做的DNS查询的所有汇总统计信息。 它显示了请求的总数和地理位置、被阻止的请求数、请求被发送到的公司列表、请求类型和请求最多的域名。  "},{"title":"流量终点​","type":1,"pageTitle":"私人 AdGuard DNS","url":"private-dns/overview/#流量终点","content":"该功能显示你的设备发送的DNS请求的去向。 除了查看请求目的地地图之外，您还可以按日期、设备和国家/地区过滤信息。  "},{"title":"公司​","type":1,"pageTitle":"私人 AdGuard DNS","url":"private-dns/overview/#公司","content":"此选项允许您快速检查哪些公司发送的请求最多，以及哪些公司的请求被阻止最多。  "},{"title":"查询日志​","type":1,"pageTitle":"私人 AdGuard DNS","url":"private-dns/overview/#查询日志","content":"这是一个详细的日志，您可以在其中查看每一个请求的信息，还可以按状态、类型、公司、设备、时间、国家/地区对请求进行排序。  "},{"title":"家长控制​","type":1,"pageTitle":"私人 AdGuard DNS","url":"private-dns/overview/#家长控制","content":"为了保护您的孩子免受您认为不合适的在线内容的影响，请设置并激活 家长控制 选项。 除了 &quot;成人内容 &quot;拦截和安全搜索等选项外，我们还增加了手动指定拦截域名的功能，并为 家长控制 设置了相应的工作时间表  如果您还没有私人 AdGuard DNS，您可以在 官网上获得它。 "},{"title":"概览","type":0,"sectionRef":"#","url":"public-dns/overview/","content":"","keywords":""},{"title":"什么是 AdGuard DNS？​","type":1,"pageTitle":"概览","url":"public-dns/overview/#什么是-adguard-dns","content":"AdGuard DNS 是款个免费的、注重隐私的DNS解析器，他可以提供安全的连接，还可以拦截追踪器、广告和网络钓鱼(可选)。 AdGuard DNS不需要安装任何应用程序。 他可以轻松地安装在所有设备（智能手机、台式电脑、路由器、游戏机等）上。 "},{"title":"免费的AdGuard DNS服务器​","type":1,"pageTitle":"概览","url":"public-dns/overview/#免费的adguard-dns服务器","content":"AdGuard DNS有三个免费服务器。 ”默认“服务器是用于拦截广告、追踪器、恶意软件和钓鱼网站的。 ”家庭保护“也有同样的功能。他会屏蔽儿童不适合儿童的网站，并在提供”安全搜索“选项的浏览器中强制执行。 ”不过滤“提供了一个安全可靠的链接，但是不会过滤任何东西。 您可以在我们的网站上找到关于如何在您的所有设备上设置AdGuard DNS的详细说明。 每个服务器都支持不同的安全协议： DNSCrypt、DNS-over-HTTPS (DoH)、DNS-over-TLS (DoT)、和 DNS-over-QUIC (DoQ)。 "},{"title":"AdGuard DNS协议​","type":1,"pageTitle":"概览","url":"public-dns/overview/#adguard-dns协议","content":"除了无加密的DNS(IPv4和IPv6)，AdGuard DNS支持各种加密协议，所以你可以选择一个最适合你的加密协议。 "},{"title":"DNSCrypt（开源的加密协议）​","type":1,"pageTitle":"概览","url":"public-dns/overview/#dnscrypt开源的加密协议","content":"AdGuard DNS允许您使用特定的加密协议：DNSCrypt 由于他，所有DNS请求都被加密，这可以保护您免受可能的请求拦截和随后的窃听和更改。 但是与 DoH、 DoT 和 DoQ 协议相比，DNSCcrypt 被广泛认为是过时的，如果可以的话，我们建议使用这些协议。 "},{"title":"DNS-over-HTTPS (DoH) 和DNS-over-TLS (DoT)​","type":1,"pageTitle":"概览","url":"public-dns/overview/#dns-over-https-doh-和dns-over-tls-dot","content":"DoH 和 DoT 是现代安全的 DNS 协议，它们越来越受欢迎，可预见的，在未来将成为最受欢迎的安全协议。 两者都比 DNSCcrypt 更可靠，并且都已经得到了 AdGuard DNS 的支持。 "},{"title":"DNS-over-QUIC 端口​","type":1,"pageTitle":"概览","url":"public-dns/overview/#dns-over-quic-端口","content":"DNS-over-QUIC 是一个新的 DNS 安全协议，AdGuard DNS 是第一个支持它的公共解析器。 与 DoH 和 DoT 不同的是，它使用 QUIC 作为传输协议，并最终将 DNS 带回到它的根——通过 UDP 工作。 它带来了 QUIC 所能提供的所有好东西ーー开箱即用的加密、减少连接时间、当数据包丢失时更好的性能。 此外，QUIC 应该是一个传输级别的协议，并且不存在 DoH 可能发生的元数据泄漏风险。 "},{"title":"已知的DNS 提供商","type":0,"sectionRef":"#","url":"general/dns-providers/","content":"","keywords":""},{"title":"AdGuard DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#adguard-dns","content":"AdGuard DNS是广告拦截、隐私保护和家长控制的替代解决方案。 无论您使用何种平台和设备，它都提供了许多必要地保护功能，以防在线广告、跟踪器和网络钓鱼。 默认​ 这些服务器提供拦截广告、跟踪和钓鱼 协议\t地址\tDNS, IPv4\t94.140.14.14 和 94.140.15.15\t添加到AdGuard DNS, IPv6\t2a10:50c0::ad1:ff 和 2a10:50c0::ad2:ff\t添加到AdGuard DNS-over-HTTPS\thttps://dns.adguard.com/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns.adguard.com\t添加到AdGuard DNS-over-QUIC\tquic://dns.adguard.com\t添加到AdGuard DNSCrypt, IPv4\t提供者: 2.dnscrypt.default.ns1.adguard.com IP: 94.140.14.14:5443\t添加到AdGuard DNSCrypt, IPv6\t提供者: 2.dnscrypt.default.ns1.adguard.com IP: [2a10:50c0::ad1:ff]:5443\t添加到AdGuard 家庭保护​ 这些服务器提供默认功能+阻止成人网站+安全搜索 协议\t地址\tDNS, IPv4\t94.140.14.15 和 94.140.15.16\t添加到AdGuard DNS, IPv6\t2a10:50c0::bad1:ff 和 2a10:50c0::bad2:ff\t添加到AdGuard DNS-over-HTTPS\thttps://dns-family.adguard.com/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns-family.adguard.com\t添加到AdGuard DNS-over-QUIC\tquic://dns-family.adguard.com\t添加到AdGuard DNSCrypt, IPv4\t提供者: 2.dnscrypt.family.ns1.adguard.com IP: 94.140.14.15:5443\t添加到AdGuard DNSCrypt, IPv6\t提供者: 2.dnscrypt.family.ns1.adguard.com IP: [2a10:50c0::bad1:ff]:5443\t添加到AdGuard 无过滤​ 这些服务器提供了安全和可靠的连接，但它们不会像“默认”和“家庭保护”服务器一样过滤任何请求。 协议\t地址\tDNS, IPv4\t94.140.14.140 和 94.140.14.141\t添加到AdGuard DNS, IPv6\t2a10:50c0::bad1:ff 和 2a10:50c0::bad2:ff\t添加到AdGuard DNS-over-HTTPS\thttps://dns-unfiltered.adguard.com/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns-unfiltered.adguard.com\t添加到AdGuard DNS-over-QUIC\tquic://dns-unfiltered.adguard.com\t添加到AdGuard DNSCrypt, IPv4\t提供者: 2.dnscrypt.unfiltered.ns1.adguard.com IP: 94.140.14.140:5443\t添加到AdGuard DNSCrypt, IPv6\t提供者: 2.dnscrypt.unfiltered.ns1.adguard.com IP: [2a10:50c0::1:ff]:5443\t添加到AdGuard "},{"title":"Yandex DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#yandex-dns","content":"Yandex.DNS 是一个免费的递归DNS服务。 Yandex.DNS'服务器位于俄罗斯、独联体国家和西欧。 用户的请求由最近的数据中心处理，该中心提供高连接速度。 基础​ 在“基础”模式中，没有流量过滤 协议\t地址\tDNS, IPv4\t77.88.8.8 和 77.88.8.1\t添加到AdGuard DNS, IPv6\t2a02:6b8::feed:0ff 和 2a02:6b8:0:1::feed:0ff\t添加到AdGuard DNSCrypt, IPv4\t提供者: 2.dnscrypt-cert.browser.yandex.net IP: 77.88.8.78:15353\t添加到AdGuard 安全​ 在“安全”模式中，提供了对于被感染的网站和欺骗性网站的防护。 协议\t地址\tDNS, IPv4\t77.88.8.88和77.88.8.2\t添加到AdGuard DNS, IPv6\t2a02:6b8::feed:bad和2a02:6b8:0:1::feed:bad\t添加到AdGuard 家庭模式​ 在“家庭”模式下，可防止感染、欺诈和成人网站 协议\t地址\tDNS, IPv4\t77.88.8.3和77.88.8.7\t添加到AdGuard DNS, IPv6\t2a02:6b8::feed:a11和2a02:6b8:0:1::feed:a11\t添加到AdGuard "},{"title":"清理浏览记录​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#清理浏览记录","content":"清理浏览记录是一种DNS服务，提供可定制的过滤。 这项服务提供了一种安全的方式来浏览web，而不包含不适当的内容。 家庭版过滤器​ 阻止访问所有成人、色情和露骨网站，包括代理和&amp;；VPN域和混合内容站点 协议\t地址\tDNS, IPv4\t185.228.168.168和185.228.169.168\t添加到AdGuard DNS, IPv6\t2a0d:2a00:1::和2a0d:2a00:2::\t添加到AdGuard DNSCrypt, IPv4\t提供者：cleanbrowsing.orgIP地址:185.228.168.168:8443\t添加到AdGuard DNSCrypt, IPv6\t提供者: cleanbrowsing.org IP: [2a0d:2a00:1::]:8443\t添加到AdGuard DNS-over-HTTPS\thttps://doh.cleanbrowsing.org/doh/family-filter/\t添加到AdGuard DNS-over-TLS\ttls://family-filter-dns.cleanbrowsing.org\t添加到AdGuard 成人过滤器​ 比家庭过滤器限制更小，它仅拦截成人内容，恶意和钓鱼域名。 协议\t地址\tDNS, IPv4\t185.228.168.10 和 185.228.169.11\t添加到AdGuard DNS, IPv6\t2a0d:2a00:1::1 和 2a0d:2a00:2::1\t添加到AdGuard DNSCrypt, IPv4\t提供者: cleanbrowsing.org IP: 185.228.168.10:8443\t添加到AdGuard DNSCrypt, IPv6\t提供者: cleanbrowsing.org IP: [2a0d:2a00:1::1]:8443\t添加到AdGuard DNS-over-HTTPS\thttps://doh.cleanbrowsing.org/doh/adult-filter/\t添加到AdGuard DNS-over-TLS\ttls://adult-filter-dns.cleanbrowsing.org\t添加到AdGuard 安全过滤器​ 拦截钓鱼，垃圾邮件和恶意域名 协议\t地址\tDNS, IPv4\t185.228.168.9 和 185.228.169.9\t添加到AdGuard DNS, IPv6\t2a0d:2a00:1::2 和 2a0d:2a00:2::2\t添加到AdGuard DNS-over-HTTPS\thttps://doh.cleanbrowsing.org/doh/security-filter/\t添加到AdGuard DNS-over-TLS\ttls://security-filter-dns.cleanbrowsing.org\t添加到AdGuard "},{"title":"舒适安全的DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#舒适安全的dns","content":"舒适安全的DNS是一种域名解析服务，通过全球DNS服务器网络解析您的DNS请求。 删除过多的广告并防止钓鱼和间谍软件。 协议\t地址\tDNS, IPv4\t8.26.56.26和8.20.247.20\t添加到AdGuard DNSCrypt, IPv4\t提供程序：2.dnscrypt-cert.shield-2.dnsbycomodo.comIP地址:8.20.247.2\t添加到AdGuard "},{"title":"Neustar递归DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#neustar递归dns","content":"Neustar Recursive DNS是一项免费的基于云的递归DNS服务，通过内置的安全和威胁情报，快速可靠地访问网站和在线应用程序。 可靠性和与amp性能1​ 这些服务器提供可靠、快速的DNS查找，无需阻止任何特定类别 协议\t地址\tDNS, IPv4\t156.154.70.1和156.154.71.1\t添加到AdGuard DNS, IPv6\t2610:a1:1018::1和2610:a1:1019::1\t添加到AdGuard 可靠性&amp; 性能2*​ 这些服务器提供可靠、快速的DNS查找，无需阻止任何特定类别，还可以防止将NXDomain（不存在的域）响应重定向到登录页 协议\t地址\tDNS, IPv4\t156.154.70.5和156.154.71.5\t添加到AdGuard DNS, IPv6\t2610:a1:1018::5和2610:a1:1019::5\t添加到AdGuard 威胁防护​ 这些服务器提供针对恶意域的保护，还包括“可靠性和&amp; 性能”功能 协议\t地址\tDNS, IPv4\t156.154.70.2和156.154.71.2\t添加到AdGuard DNS, IPv6\t2610:a1:1018::2和2610:a1:1019::2\t添加到AdGuard 家庭版保护​ 这些服务器提供对成熟内容的阻止访问，还包括“可靠性&amp; 性能”+“威胁保护”功能 协议\t地址\tDNS, IPv4\t156.154.70.3和156.154.71.3\t添加到AdGuard DNS, IPv6\t2610:a1:1018::3和2610:a1:1019::3\t添加到AdGuard 业务安全​ 这些服务器提供阻止不需要的和浪费时间的内容，还包括“可靠性&amp; 性能”+“威胁保护”+“家庭安全”功能 协议\t地址\tDNS, IPv4\t156.154.70.4和156.154.71.4\t添加到AdGuard DNS, IPv6\t2610:a1:1018::4和2610:a1:1019::4\t添加到AdGuard "},{"title":"Cisco OpenDNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#cisco-opendns","content":"Cisco OpenDNS是一项通过整合内容过滤和网络钓鱼保护等功能扩展DNS的服务，无需停机时间。 标准​ 具有自定义筛选功能的DNS服务器可保护您的设备免受恶意软件攻击 协议\t地址\tDNS, IPv4\t208.67.222.222和208.67.220.220\t添加到AdGuard DNS, IPv6\t2620:119:35::35和2620:119:53::53\t添加到AdGuard DNSCrypt, IPv4\t提供程序：2.dnscrypt-cert.opendns.comIP地址:208.67.220.220\t添加到AdGuard DNSCrypt, IPv6\t提供程序：2.dnscrypt-cert.opendns.com IP地址：[2620:0:ccc::2]\t添加到AdGuard DNS-over-HTTPS\thttps://doh.opendns.com/dns-query\t添加到AdGuard 家庭防护罩​ 提供成人内容阻止的OpenDNS服务器 协议\t地址\tDNS, IPv4\t208.67.222.123和208.67.220.123\t添加到AdGuard DNSCrypt, IPv4\t提供程序：2.dnscrypt-cert.opendns.comIP地址:208.67.220.123\t添加到AdGuard DNS-over-HTTPS\thttps://doh.familyshield.opendns.com/dns-query\t添加到AdGuard "},{"title":"谷歌DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#谷歌dns","content":"谷歌DNS是一项免费的全球DNS解析服务，您可以将其作为当前DNS提供商的替代服务。 协议\t地址\tDNS, IPv4\t8.8.8.8和8.8.4.4\t添加到AdGuard DNS, IPv6\t2001:4860:4860::8888和2001:4860:4860::8844\t添加到AdGuard DNS-over-HTTPS\thttps://dns.google/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns.google\t添加到AdGuard "},{"title":"Cloudflare DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#cloudflare-dns","content":"Cloudflare DNS是一种免费、快速的DNS服务，它作为递归名称服务器，为Internet上的任何主机提供域名解析。 标准​ 协议\t地址\tDNS, IPv4\t1.1.1.1和1.0.0.1\t添加到AdGuard DNS, IPv6\t2606:4700:4700::1111和2606:4700:4700::1001\t添加到AdGuard DNS-over-HTTPS IPv4\thttps://dns.cloudflare.com/dns-query\t添加到AdGuard DNS-over-HTTPS， IPv6\thttps://dns.cloudflare.com/dns-query\t添加到AdGuard DNS-over-TLS\ttls://1dot1dot1dot1.cloudflare-dns.com\t添加到AdGuard 仅阻止恶意软件​ 协议\t地址\tDNS, IPv4\t1.1.1.2和1.0.0.2\t添加到AdGuard DNS, IPv6\t2606:4700:4700::1112和2606:4700:4700::1002\t添加到AdGuard DNS-over-HTTPS\thttps://security.cloudflare-dns.com/dns-query\t添加到AdGuard DNS-over-TLS\ttls://security.cloudflare-dns.com\t添加到AdGuard 恶意软件和成人内容阻止​ 协议\t地址\tDNS, IPv4\t1.1.1.3和1.0.0.3\t添加到AdGuard DNS, IPv6\t2606:4700:4700::1113和2606:4700:4700::1003\t添加到AdGuard DNS-over-HTTPS IPv4\thttps://family.cloudflare-dns.com/dns-query\t添加到AdGuard DNS-over-TLS\ttls://family.cloudflare-dns.com\t添加到AdGuard "},{"title":"Quad9 DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#quad9-dns","content":"Quad9 DNS是一个免费、递归、任意播放的DNS平台，提供高性能、隐私和安全保护，免受钓鱼和间谍软件的攻击。 Quad9服务器不提供审查组件。 标准​ 提供网络钓鱼和间谍软件保护的常规DNS服务器 它们包括阻止列表、DNSSEC验证和其他安全功能。 协议\t地址\tDNS, IPv4\t9.9.9.9和149.112.112.112\t添加到AdGuard DNS, IPv6\t2620:fe::feIP地址: 2620:fe::fe:9\t添加到AdGuard DNSCrypt, IPv4\t提供代码：2.dnscrypt-cert.quad9.net IP地址：9.9.9.9:8443\t添加到AdGuard DNSCrypt, IPv6\t提供代码 2.dnscrypt-cert.quad9.net IP地址: [2620:fe::fe]: 8443\t添加到AdGuard DNS-over-HTTPS\thttps://dns.quad9.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns.quad9.net\t添加到AdGuard Unsecured​ Unsecured DNS 服务器不提供安全阻止列表、不提供 DNSSEC、不提供 EDNS 客户端子网 协议\t地址\tDNS, IPv4\t9.9.9.10 和 149.112.112.10\t添加到AdGuard DNS, IPv6\t2620:fe::10 IP地址: 2620:fe::fe:10\t添加到AdGuard DNSCrypt, IPv4\t提供者：2.dnscrypt-cert.quad9.net IP地址：9.9.9.10:8443\t添加到AdGuard DNSCrypt, IPv6\t提供者： 2.dnscrypt-cert.quad9.net IP地址： [2620:fe::fe:10]:8443\t添加到AdGuard DNS-over-HTTPS\thttps://dns10.quad9.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns10.quad9.net\t添加到AdGuard ECS 支持​ EDNS 客户端子网是一种在发送到权威 DNS 服务器的请求中包含终端用户 IP 地址数据的方法。 它提供安全阻止列表、DNSSEC、EDNS 客户端子网。 协议\t地址\tDNS, IPv4\t9.9.9.11 和 149.112.112.11\t添加到AdGuard DNS, IPv6\t2620:fe::11 IP地址: 2620:fe::fe:11\t添加到AdGuard DNSCrypt, IPv4\t提供者： 2.dnscrypt-cert.quad9.net IP地址： 9.9.9.11:8443\t添加到AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.quad9.net IP: [2620:fe::11]:8443\t添加到AdGuard DNS-over-HTTPS\thttps://dns11.quad9.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns11.quad9.net\t添加到AdGuard "},{"title":"威瑞信公共DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#威瑞信公共dns","content":"威瑞信公共DNS 是一项免费的DNS服务，与其他替代方案相比，提供了更好的DNS稳定性和安全性。 威瑞信尊重用户的隐私：它不会向第三方出售公共 DNS 数据，也不会重定向用户的查询以向他们提供任何广告。 协议\t地址\tDNS, IPv4\t64.6.64.6 或 64.6.65.6\t添加到AdGuard DNS, IPv6\t2620:74:1b::1:1 或 2620:74:1c::2:2\t添加到AdGuard "},{"title":"SWITCH DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#switch-dns","content":"SWITCH DNS 是由 switch.ch提供的瑞士公共DNS服务。 协议\t地址\tDNS, IPv4\tProvider: dns.switch.ch IP: 130.59.31.248\t添加到AdGuard DNS, IPv6\tProvider: dns.switch.ch IPv6: 2001:620:0:ff::2\t添加到AdGuard DNS-over-HTTPS\thttps://dns.switch.ch/dns-query\t添加到AdGuard DNS-over-TLS\tHostname: tls://dns.switch.ch IP: 130.59.31.248 and IPv6: 2001:620:0:ff::2\t添加到AdGuard "},{"title":"Dyn DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#dyn-dns","content":"Dyn DNS is a free alternative DNS service by Dyn 协议\t地址\tDNS, IPv4\t216.146.35.35 and 216.146.36.36\t添加到AdGuard "},{"title":"DNS.WATCH​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#dnswatch","content":"DNS.WATCH 是一个快速和免费的服务器，没有记录，具有隐私保护功能。 协议\t地址\tDNS, IPv4\t84.200.69.80 and 84.200.70.40\t添加到AdGuard DNS, IPv6\t2001:1608:10:25::1c04:b12f and 2001:1608:10:25::9249:d69b\t添加到AdGuard "},{"title":"FutureDNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#futuredns","content":"FutureDNS is a privacy-friendly DNS service with OpenNIC support that blocks ads, trackers, malware and does not log any data. Anycast Network\t地址\tDNS-over-HTTPS\thttps://dns.futuredns.me/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns.futuredns.me\t添加到AdGuard DNS-over-QUIC\tquic://dns.futuredns.me\t添加到AdGuard Location\tAddress - IPv4London, UK\t52.56.224.201 Milan, Italy\t15.161.11.3 Stockholm, Sweden\t13.49.168.178 Ashburn, USA\t52.0.69.145 San Francisco, USA\t13.56.204.161 Montreal, Canada\t3.97.137.100 Singapore\t54.254.82.60 Tokyo, Japan\t54.199.94.55 Mumbai, India\t3.7.162.217 São Paulo, Brazil\t177.71.191.153 "},{"title":"SkyDNS RU​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#skydns-ru","content":"SkyDNS solutions for content filtering and internet security. 协议\t地址\tDNS, IPv4\t193.58.251.251\t添加到AdGuard "},{"title":"Comss.ru DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#comssru-dns","content":"Comss.one DNS is a fast and secure DNS servers with protection against ads, tracking and phishing. 西部 DNS 服务器(主服务器)​ 协议\t地址\tDNS, IPv4\t92.38.152.163 and 93.115.24.204\t添加到AdGuard DNS, IPv6\t2a03:90c0:56::1a5 and 2a02:7b40:5eb0:e95d::1\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.dns.comss.one IP: 94.176.233.93:443\t添加到AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.dns.comss.one IP: [2a02:7b40:5eb0:e95d::1]:443\t添加到AdGuard DNS-over-HTTPS\thttps://dns.comss.one/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns.comss.one\t添加到AdGuard 东部DNS服务器(西伯利亚和远东)​ 协议\t地址\tDNS, IPv4\t92.223.109.31 and 91.230.211.67\t添加到AdGuard DNS, IPv6\t2a03:90c0:b5::1a and 2a04:2fc0:39::47\t添加到AdGuard DNS-over-HTTPS\thttps://dns.east.comss.one/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns.east.comss.one\t添加到AdGuard "},{"title":"Safe DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#safe-dns","content":"Safe DNS is a global anycast network which consists of servers located throughout the world — both Americas, Europe, Africa, Australia, and the Far East to ensure a fast and reliable DNS resolving from any point worldwide. 协议\t地址\tDNS, IPv4\t195.46.39.39 and 195.46.39.40\t添加到AdGuard "},{"title":"CIRA Canadian Shield DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#cira-canadian-shield-dns","content":"CIRA Shield DNS protects against theft of personal and financial data. Keep viruses, ransomware, and other malware out of your home. 私人​ In &quot;Private&quot; mode, DNS resolution only 协议\t地址\tDNS, IPv4\t149.112.121.10 and 149.112.122.10\t添加到AdGuard DNS, IPv6\t2620:10A:80BB::10 and 2620:10A:80BC::10\t添加到AdGuard DNS-over-HTTPS\thttps://private.canadianshield.cira.ca/dns-query\t添加到AdGuard DNS-over-TLS - Private\tHostname: tls://private.canadianshield.cira.ca IP: 149.112.121.10 and IPv6: 2620:10A:80BB::10\t添加到AdGuard 受保护​ In &quot;Protected&quot; mode, malware and phishing protection 协议\t地址\tDNS, IPv4\t149.112.121.20 and 149.112.122.20\t添加到AdGuard DNS, IPv6\t2620:10A:80BB::20 and 2620:10A:80BC::20\t添加到AdGuard DNS-over-HTTPS\thttps://protected.canadianshield.cira.ca/dns-query\t添加到AdGuard DNS-over-TLS - Protected\tHostname: tls://protected.canadianshield.cira.ca IP: 149.112.121.20 and IPv6: 2620:10A:80BB::20\t添加到AdGuard 家庭模式​ In &quot;Family&quot; mode, Protected + blocking adult content 协议\t地址\tDNS, IPv4\t149.112.121.30 and 149.112.122.30\t添加到AdGuard DNS, IPv6\t2620:10A:80BB::30 and 2620:10A:80BC::30\t添加到AdGuard DNS-over-HTTPS\thttps://family.canadianshield.cira.ca/dns-query\t添加到AdGuard DNS-over-TLS - Family\tHostname: tls://protected.canadianshield.cira.ca IP: 149.112.121.30 and IPv6: 2620:10A:80BB::30\t添加到AdGuard "},{"title":"OpenNIC DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#opennic-dns","content":"OpenNIC DNS is a free alternative DNS service by OpenNIC Project 协议\t地址\tDNS, IPv4\t185.121.177.177 and 169.239.202.202\t添加到AdGuard DNS, IPv6\t2a05:dfc7:5::53 and 2a05:dfc7:5353::53\t添加到AdGuard "},{"title":"BlahDNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#blahdns","content":"BlahDNS A small hobby DNS project. No logs, Ethereum Name Service, DNSSEC ready &amp; Filtered ads, trackers, malwares Finland DNS Server​ 协议\t地址\tDNS-over-TLS, IPv4\tHostname: tls://dot-fi.blahdns.com IP: 95.216.212.177\t添加到AdGuard DNS-over-HTTPS IPv4\tHostname: https://doh-fi.blahdns.com/dns-query IP: 95.216.212.177\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.blahdns.com IP: 95.216.212.177:8443\t添加到AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.blahdns.com IP: 2a01:4f9:c010:43ce::1:8443\t添加到AdGuard Japan DNS Server​ 协议\t地址\tDNS-over-TLS, IPv4\tHostname: tls://dot-jp.blahdns.com IP: 139.162.112.47\t添加到AdGuard DNS-over-HTTPS IPv4\tHostname: https://doh-jp.blahdns.com/dns-query\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.blahdns.com IP: 139.162.112.47:8443\t添加到AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.blahdns.com IP: [2400:8902::f03c:92ff:fe27:344b]:8443\t添加到AdGuard Germany DNS Server​ 协议\t地址\tDNS-over-TLS, IPv4\tHostname: tls://dot-de.blahdns.com IP: 159.69.198.101\t添加到AdGuard DNS-over-HTTPS IPv4\tHostname: https://doh-de.blahdns.com/dns-query IP: 159.69.198.101\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.blahdns.com IP: 159.69.198.101:8443\t添加到AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.blahdns.com IP: 2a01:4f8:1c1c:6b4b::1:8443\t添加到AdGuard "},{"title":"Snopyta DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#snopyta-dns","content":"Snopyta DNS is a privacy friendly DNS service run by Noah Seefried. 协议\t地址\tDNS-over-HTTPS\thttps://fi.doh.dns.snopyta.org/dns-query IP: 95.216.24.230 and IPv6: 2a01:4f9:2a:1919::9301\t添加到AdGuard DNS-over-TLS\ttls://fi.dot.dns.snopyta.org IP: 95.216.24.230 and IPv6: 2a01:4f9:2a:1919::9301\t添加到AdGuard "},{"title":"DNS for Family​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#dns-for-family","content":"DNS for Family aims to block adult websites. It helps to children and everyone for safely surf internet without worrying about get followed to harmful websites. 协议\t地址\tDNS-over-HTTPS\thttps://dns-doh.dnsforfamily.com/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns-dot.dnsforfamily.com\t添加到AdGuard DNS, IPv4\t94.130.180.225 and 78.47.64.161\t添加到AdGuard DNS, IPv6\t2a01:4f8:1c0c:40db::1 and 2a01:4f8:1c17:4df8::1\t添加到AdGuard DNSCrypt, IPv4\tProvider: dnsforfamily.com IP: 94.130.180.225\t添加到AdGuard DNSCrypt, IPv6\tProvider: dnsforfamily.com IP: [2a01:4f8:1c0c:40db::1]\t添加到AdGuard "},{"title":"CZ.NIC ODVR​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#cznic-odvr","content":"CZ.NIC ODVR CZ.NIC ODVR are Open DNSSEC Validating Resolvers. CZ.NIC neither collect any personal data nor gather information on pages where devices sends personal data. 协议\t地址\tDNS, IPv4\t193.17.47.1 and 185.43.135.1\t添加到AdGuard DNS, IPv6\t2001:148f:ffff::1 and 2001:148f:fffe::1\t添加到AdGuard DNS-over-HTTPS\thttps://odvr.nic.cz/doh\t添加到AdGuard DNS-over-TLS\ttls://odvr.nic.cz\t添加到AdGuard "},{"title":"Ali DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#ali-dns","content":"Ali DNS is a free recursive DNS service that committed to providing fast, stable and secure DNS resolution for the majority of Internet users. It includes AliGuard facility to protect users from various attacks and threats. 协议\t地址\tDNS, IPv4\t223.5.5.5 and 223.6.6.6\t添加到AdGuard DNS, IPv6\t2400:3200::1 and 2400:3200:baba::1\t添加到AdGuard DNS-over-HTTPS\thttps://dns.alidns.com/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns.alidns.com\t添加到AdGuard "},{"title":"CFIEC Public DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#cfiec-public-dns","content":"IPv6-based anycast DNS service with strong security capabilities and protection from spyware, malicious websites. It support DNS64 to provide domain name resolution only for IPv6 users. 协议\t地址\tDNS, IPv6\t240C::6666 and 240C::6644\t添加到AdGuard DNS-over-HTTPS\thttps://dns.cfiec.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns.cfiec.net\t添加到AdGuard "},{"title":"Nawala Childprotection DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#nawala-childprotection-dns","content":"Nawala Childprotection DNS is an anycast Internet filtering system that protects children from inappropriate websites and abusive contents. 协议\t地址\tDNS, IPv4\t180.131.144.144 and 180.131.145.145\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.nawala.id IP: 180.131.144.144\t添加到AdGuard "},{"title":"360 Secure DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#360-secure-dns","content":"360 Secure DNS is a industry-leading recursive DNS service with advanced network security threat protection. 协议\t地址\tDNS, IPv4\t101.226.4.6 and 218.30.118.6\t添加到AdGuard DNS, IPv4\t123.125.81.6 and 140.207.198.6\t添加到AdGuard DNS-over-HTTPS\thttps://doh.360.cn/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dot.360.cn\t添加到AdGuard "},{"title":"IIJ.JP DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#iijjp-dns","content":"IIJ.JP is a public DNS service operated by Internet Initiative Japan. It also blocks child abuse content. 协议\t地址\tDNS-over-HTTPS\thttps://public.dns.iij.jp/dns-query\t添加到AdGuard DNS-over-TLS\ttls://public.dns.iij.jp\t添加到AdGuard "},{"title":"DNSPod Public DNS+​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#dnspod-public-dns","content":"DNSPod Public DNS+ is a privacy-friendly DNS provider with years of experience in domain name resolution services development, it aims to provide users more rapid, accurate and stable recursive resolution service. 协议\t地址\tDNS, IPv4\t119.29.29.29 and 119.28.28.28\t添加到AdGuard DNS-over-HTTPS\thttps://doh.pub/dns-query\t添加到AdGuard DNS-over-HTTPS\thttps://dns.pub/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dot.pub\t添加到AdGuard "},{"title":"114DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#114dns","content":"114DNS is a professional and high-reliability DNS service. Normal​ Block ads and annoying websites 协议\t地址\tDNS, IPv4\t114.114.114.114 and 114.114.115.115\t添加到AdGuard 安全​ Blocks phishing, malicious and other unsafe websites 协议\t地址\tDNS, IPv4\t114.114.114.119 and 114.114.115.119\t添加到AdGuard 家庭模式​ These servers block adult websites and inappropriate contents. 协议\t地址\tDNS, IPv4\t114.114.114.110 and 114.114.115.110\t添加到AdGuard "},{"title":"Quad101​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#quad101","content":"Quad101 is a free alternative DNS service without logging by TWNIC (Taiwan Network Information Center) 协议\t地址\tDNS, IPv4\t101.101.101.101 and 101.102.103.104\t添加到AdGuard DNS, IPv6\t2001:de4::101 and 2001:de4::102\t添加到AdGuard DNS-over-HTTPS\thttps://dns.twnic.tw/dns-query\t添加到AdGuard DNS-over-TLS\ttls://101.101.101.101\t添加到AdGuard "},{"title":"OneDNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#onedns","content":"OneDNS is a secure, fast, free niche DNS service with malicious domains blocking facility. Pure Edition​ 协议\t地址\tDNS, IPv4\t117.50.10.10 and 52.80.52.52\t添加到AdGuard Block Edition​ 协议\t地址\tDNS, IPv4\t117.50.11.11 and 52.80.66.66\t添加到AdGuard "},{"title":"Privacy-First DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#privacy-first-dns","content":"Privacy-First DNS block over 140K ads, ad-tracking, malware and phishing domains!. No logging, no ECS, DNSSEC validation, free! Singapore DNS Server​ | 协议 | 地址 | Location | | | -------------- | -------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------- | | | DNS, IPv4 | 174.138.21.128 | 添加到AdGuard | | | DNS, IPv6 | 2400:6180:0:d0::5f6e:4001 | 添加到AdGuard | | | DNSCrypt, IPv4 | Provider: 2.dnscrypt-cert.dns.tiar.app IP: 174.138.21.128 | 添加到AdGuard | | | DNSCrypt, IPv6 | Provider: 2.dnscrypt-cert.dns.tiar.app IP: [2400:6180:0:d0::5f6e:4001] | 添加到AdGuard | | | DNS-over-HTTPS | https://doh.tiarap.org/dns-query (cached via third-party) | 添加到AdGuard | | | DNS-over-HTTPS | https://doh.tiar.app/dns-query | 添加到AdGuard | | | DNS-over-QUIC | quic://doh.tiar.app | 添加到AdGuard | | | DNS-over-TLS | tls://dot.tiar.app | 添加到AdGuard | | Japan DNS Server​ 协议\t地址\tDNS, IPv4\t172.104.93.80\t添加到AdGuard DNS, IPv6\t2400:8902::f03c:91ff:feda:c514\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.jp.tiar.app IP: 172.104.93.80\t添加到AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.jp.tiar.app IP: [2400:8902::f03c:91ff:feda:c514]\t添加到AdGuard DNS-over-HTTPS\thttps://jp.tiarap.org/dns-query\t添加到AdGuard DNS-over-HTTPS\thttps://jp.tiar.app/dns-query\t添加到AdGuard DNS-over-TLS\ttls://jp.tiar.app\t添加到AdGuard "},{"title":"FreeDNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#freedns","content":"FreeDNS is an open, free and public DNS Service provided by Virtexxa cloud services. No DNS redirects, no logging. 协议\t地址\tDNS, IPv4\t172.104.237.57 and 172.104.49.100\t添加到AdGuard DNS, IPv4\t37.235.1.174 and 37.235.1.177\t添加到AdGuard "},{"title":"Freenom World​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#freenom-world","content":"Freenom World is a free anonymous DNS resolver by Freenom World 协议\t地址\tDNS, IPv4\t80.80.80.80 and 80.80.81.81\t添加到AdGuard "},{"title":"OSZX DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#oszx-dns","content":"OSZX DNS is a small Ad-Blocking DNS hobby project. OSZX server​ 这些服务器不提供广告拦截，不保留日志，并启用了DNSSEC。 协议\t地址\tDNS, IPv4\t51.38.83.141\t添加到AdGuard DNS, IPv6\t2001:41d0:801:2000::d64\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.oszx.co IP: 51.38.83.141:5353\t添加到AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.oszx.co IP: [2001:41d0:801:2000::d64]:5353\t添加到AdGuard DNS-over-HTTPS\thttps://dns.oszx.co/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns.oszx.co\t添加到AdGuard PumpleX server​ 这些服务器不提供广告拦截，不保留日志，并启用了DNSSEC。 协议\t地址\tDNS, IPv4\t51.38.82.198\t添加到AdGuard DNS, IPv6\t2001:41d0:801:2000::1b28\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.pumplex.com IP: 51.38.82.198:5353\t添加到AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.pumplex.com IP: [2001:41d0:801:2000::1b28]:5353\t添加到AdGuard DNS-over-HTTPS\thttps://dns.pumplex.com/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns.pumplex.com\t添加到AdGuard "},{"title":"Applied Privacy DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#applied-privacy-dns","content":"Applied Privacy DNS operates DNS privacy services to help protect DNS traffic and to help diversify the DNS resolver landscape offering modern protocols. 协议\t地址\tDNS-over-HTTPS\thttps://doh.applied-privacy.net/query\t添加到AdGuard DNS-over-TLS\ttls://dot1.applied-privacy.net\t添加到AdGuard "},{"title":"Strongarm DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#strongarm-dns","content":"Strongarm DNS is a DNS service by Strongarm that prevents people from interacting with malicious content 协议\t地址\tDNS, IPv4\t54.174.40.213 and 52.3.100.184\t添加到AdGuard "},{"title":"SafeSurfer DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#safesurfer-dns","content":"SafeSurfer DNS is a DNS service by SafeSurfer that protects your device from harmful and adult contents. 协议\t地址\tDNS, IPv4\t104.155.237.225 and 104.197.28.121\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.safesurfer.co.nz IP: 104.197.28.121\t添加到AdGuard "},{"title":"DeCloudUs DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#decloudus-dns","content":"DeCloudUs DNS A secure, private, open-source DNS resolver with malware protection, ad blocking and without logs. Degoogle and Ungoogle your phone, tablet, and computer. 协议\t地址\tDNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.DeCloudUs-test IP: 78.47.212.211:9443\t添加到AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.DeCloudUs-test IP: [2a01:4f8:13a:250b::30]:9443\t添加到AdGuard DNS-over-HTTPS\thttps://dns.decloudus.com/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dns.decloudus.com\t添加到AdGuard "},{"title":"Lelux DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#lelux-dns","content":"Lelux.fi is run by Elias Ojala. Finland. 协议\t地址\tDNS-over-HTTPS\thttps://resolver-eu.lelux.fi/dns-query\t添加到AdGuard DNS-over-TLS\ttls://resolver-eu.lelux.fi\t添加到AdGuard "},{"title":"Captnemo DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#captnemo-dns","content":"Captnemo DNS is a server running out of a Digital Ocean droplet in BLR1 region. Maintained by Abhay Rana aka Nemo. 协议\t地址\tDNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.captnemo.in IP: 139.59.48.222:4434\t添加到AdGuard "},{"title":"DNS.SB​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#dnssb","content":"DNS.SB provide free DNS service with no logging, DNSSEC enabled. 协议\t地址\tDNS, IPv4\t185.222.222.222 and 45.11.45.11\t添加到AdGuard DNS, IPv6\t2a09:: and 2a11::\t添加到AdGuard DNS-over-HTTPS\thttps://doh.dns.sb/dns-query\t添加到AdGuard DNS-over-TLS\ttls://185.222.222.222\t添加到AdGuard "},{"title":"DNS Forge​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#dns-forge","content":"DNS Forge is a redundant DNS resolver with an ad blocker and no logging provided by adminforge. 协议\t地址\tDNS, IPv4\t176.9.93.198 and 176.9.1.117\t添加到AdGuard DNS, IPv6\t2a01:4f8:151:34aa::198 and 2a01:4f8:141:316d::117\t添加到AdGuard DNS-over-HTTPS\thttps://dnsforge.de/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dnsforge.de\t添加到AdGuard "},{"title":"Fondation Restena DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#fondation-restena-dns","content":"Restena DNS servers provided by Restena Foundation 协议\t地址\tDNS-over-HTTPS\thttps://kaitain.restena.lu/dns-query IP: 158.64.1.29 and IPv6: 2001:a18:1::29\t添加到AdGuard DNS-over-TLS\ttls://kaitain.restena.lu IP: 158.64.1.29 and IPv6: 2001:a18:1::29\t添加到AdGuard "},{"title":"fvz DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#fvz-dns","content":"fvz DNS is a Fusl's public primary OpenNIC Tier2 Anycast DNS Resolver 协议\t地址\tDNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.dnsrec.meo.ws IP: 185.121.177.177:5353\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.dnsrec.meo.ws IP: 169.239.202.202:5353\t添加到AdGuard "},{"title":"FFMUC DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#ffmuc-dns","content":"FFMUC free DNS servers provided by Freifunk München 协议\t地址\tDNS-over-TLS, IPv4\tHostname: tls://dot.ffmuc.net\t添加到AdGuard DNS-over-HTTPS IPv4\tHostname: https://doh.ffmuc.net/dns-query\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.ffmuc.net IP: 5.1.66.255:8443\t添加到AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.ffmuc.net IP: [2001:678:e68:f000::]:8443\t添加到AdGuard "},{"title":"Digitale Gesellschaft DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#digitale-gesellschaft-dns","content":"Digitale Gesellschaft is a public resolver operated by the Digital Society. Hosted in Zurich, Switzerland 协议\t地址\tDNS-over-HTTPS\thttps://dns.digitale-gesellschaft.ch/dns-query IP: 185.95.218.42 and IPv6: 2a05:fc84::42\t添加到AdGuard DNS-over-TLS\ttls://dns.digitale-gesellschaft.ch IP: 185.95.218.43 and IPv6: 2a05:fc84::43\t添加到AdGuard "},{"title":"LibreDNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#libredns","content":"LibreDNS is a public encrypted DNS service run by LibreOps. 协议\t地址\tDNS, IPv4\t88.198.92.222\t添加到AdGuard DNS-over-HTTPS\thttps://doh.libredns.gr/dns-query\t添加到AdGuard DNS-over-HTTPS\thttps://doh.libredns.gr/ads\t添加到AdGuard DNS-over-TLS\ttls://dot.libredns.gr IP: 116.202.176.26\t添加到AdGuard "},{"title":"ibksturm DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#ibksturm-dns","content":"ibksturm DNS testing servers provided by ibksturm. OPENNIC, DNSSEC, no filtering, no logging 协议\t地址\tDNS-over-TLS, IPv4\tHostname: tls://ibksturm.synology.me IP: 83.77.85.7\t添加到AdGuard DNS-over-HTTPS IPv4\tHostname: https://ibksturm.synology.me/dns-query IP: 178.82.102.190\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.ibksturm IP: 83.77.85.7:8443\t添加到AdGuard DNSCrypt, IPv6\tProvider: 2.dnscrypt-cert.ibksturm IP: [2a02:1205:5055:de60:b26e:bfff:fe1d:e19b]:8443\t添加到AdGuard "},{"title":"DNS Privacy​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#dns-privacy","content":"A collaborative open project to promote, implement and deploy DNS Privacy. DNS servers run by the Stubby developers 协议\t地址\tDNS-over-TLS\tHostname: tls://getdnsapi.net IP: 185.49.141.37 and IPv6: 2a04:b900:0:100::37\t添加到AdGuard DNS-over-TLS\tProvider: Surfnet Hostname tls://dnsovertls.sinodun.com IP: 145.100.185.15 and IPv6: 2001:610:1:40ba:145:100:185:15\t添加到AdGuard DNS-over-TLS\tProvider: Surfnet Hostname tls://dnsovertls1.sinodun.com IP: 145.100.185.16 and IPv6: 2001:610:1:40ba:145:100:185:16\t添加到AdGuard Other DNS servers with 'no logging' policy 协议\t地址\tDNS-over-TLS\tProvider: UncensoredDNS Hostname tls://unicast.censurfridns.dk IP: 89.233.43.71 and IPv6: 2a01:3a0:53:53::0\t添加到AdGuard DNS-over-TLS\tProvider: UncensoredDNS Hostname tls://anycast.censurfridns.dk IP: 91.239.100.100 and IPv6: 2001:67c:28a4::\t添加到AdGuard DNS-over-TLS\tProvider: dkg Hostname tls://dns.cmrg.net IP: 199.58.81.218and IPv6: 2001:470:1c:76d::53\t添加到AdGuard DNS-over-TLS, IPv4\tHostname: tls://dns.larsdebruin.net IP: 51.15.70.167\t添加到AdGuard DNS-over-TLS\tHostname tls://dns-tls.bitwiseshift.net IP: 81.187.221.24 and IPv6: 2001:8b0:24:24::24\t添加到AdGuard DNS-over-TLS\tHostname tls://ns1.dnsprivacy.at IP: 94.130.110.185 and IPv6: 2a01:4f8:c0c:3c03::2\t添加到AdGuard DNS-over-TLS\tHostname tls://ns2.dnsprivacy.at IP: 94.130.110.178 and IPv6: 2a01:4f8:c0c:3bfc::2\t添加到AdGuard DNS-over-TLS, IPv4\tHostname: tls://dns.bitgeek.in IP: 139.59.51.46\t添加到AdGuard DNS-over-TLS\tHostname tls://dns.neutopia.org IP: 89.234.186.112 and IPv6: 2a00:5884:8209::2\t添加到AdGuard DNS-over-TLS\tProvider: Go6Lab Hostname tls://privacydns.go6lab.si IPv6: 2001:67c:27e4::35\t添加到AdGuard DNS-over-TLS\tHostname: tls://dot.securedns.eu IP: 146.185.167.43 and IPv6: 2a03:b0c0:0:1010::e9a:3001\t添加到AdGuard DNS servers with minimal logging/limitations. These servers use some logging, self-signed certs or no support for strict mode. 协议\t地址\tDNS-over-TLS\tProvider: NIC Chile Hostname dnsotls.lab.nic.cl IP: 200.1.123.46 and IPv6: 2001:1398:1:0:200:1:123:46\t添加到AdGuard DNS-over-TLS\tProvider: OARC Hostname tls-dns-u.odvr.dns-oarc.net IP: 184.105.193.78 and IPv6: 2620:ff:c000:0:1::64:25\t添加到AdGuard "},{"title":"AhaDNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#ahadns","content":"AhaDNS A zero-logging and ad-blocking DNS service provided by Fredrik Pettersson. Blitz​ Configurable filtering worldwide DoH-only variant 协议\t地址\tDNS-over-HTTPS, uncensored\thttps://blitz.ahadns.com\t添加到AdGuard DNS-over-HTTPS, OISD filter\thttps://blitz.ahadns.com/1:1\t添加到AdGuard DNS-over-HTTPS, OISD &amp; Energized porn filter\thttps://blitz.ahadns.com/1:1.12\t添加到AdGuard Netherlands​ 协议\t地址\tDNS, IPv4\t5.2.75.75\t添加到AdGuard DNS, IPv6\t2a04:52c0:101:75::75\t添加到AdGuard DNS-over-HTTPS\thttps://doh.nl.ahadns.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dot.nl.ahadns.net\t添加到AdGuard India​ 协议\t地址\tDNS, IPv4\t45.79.120.233\t添加到AdGuard DNS, IPv6\t2400:8904:e001:43::43\t添加到AdGuard DNS-over-HTTPS\thttps://doh.in.ahadns.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dot.in.ahadns.net\t添加到AdGuard Los Angeles​ 协议\t地址\tDNS, IPv4\t45.67.219.208\t添加到AdGuard DNS, IPv6\t2a04:bdc7:100:70::70\t添加到AdGuard DNS-over-HTTPS\thttps://doh.la.ahadns.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dot.la.ahadns.net\t添加到AdGuard New York​ 协议\t地址\tDNS, IPv4\t185.213.26.187\t添加到AdGuard DNS, IPv6\t2a0d:5600:33:3::3\t添加到AdGuard DNS-over-HTTPS\thttps://doh.ny.ahadns.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dot.ny.ahadns.net\t添加到AdGuard Poland​ 协议\t地址\tDNS-over-HTTPS\thttps://doh.pl.ahadns.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dot.pl.ahadns.net\t添加到AdGuard Italy​ 协议\t地址\tDNS-over-HTTPS\thttps://doh.it.ahadns.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dot.it.ahadns.net\t添加到AdGuard Spain​ 协议\t地址\tDNS-over-HTTPS\thttps://doh.es.ahadns.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dot.es.ahadns.net\t添加到AdGuard Norway​ 协议\t地址\tDNS-over-HTTPS\thttps://doh.no.ahadns.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dot.no.ahadns.net\t添加到AdGuard Chicago​ 协议\t地址\tDNS-over-HTTPS\thttps://doh.chi.ahadns.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dot.chi.ahadns.net\t添加到AdGuard "},{"title":"Seby DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#seby-dns","content":"Seby DNS is a privacy focused DNS service provided by Sebastian Schmidt. No Logging, DNSSEC validation. DNS Server 1​ 协议\t地址\tDNS, IPv4\t45.76.113.31\t添加到AdGuard DNSCrypt, IPv4\tProvider: 2.dnscrypt-cert.dns.seby.io IP: 45.76.113.31\t添加到AdGuard DNS-over-TLS\ttls://dot.seby.io\t添加到AdGuard "},{"title":"puntCAT DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#puntcat-dns","content":"puntCAT is physically located near Barcelona, Spain. puntCAT offers a public DNS service, free, secure, close and that respects your privacy. 协议\t地址\tDNS, IPv4\t109.69.8.51\t添加到AdGuard DNS, IPv6\t2a00:1508:0:4::9\t添加到AdGuard "},{"title":"DNSlify DNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#dnslify-dns","content":"DNSlify DNS operate public DNS resolvers to speed up requests, increase redundancy. The service is provided by Peerix 默认​ These servers provide DNS resolution without traffic filtering. 协议\t地址\tDNS, IPv4\t185.235.81.1 and 185.235.81.2\t添加到AdGuard DNS, IPv6\t2a0d:4d00:81::1 and 2a0d:4d00:81::2\t添加到AdGuard DNS-over-HTTPS\thttps://doh.dnslify.com/dns-query\t添加到AdGuard DNS-over-TLS\ttls://doh.dnslify.com\t添加到AdGuard 安全​ Safe mode guard against infected, fraudulent or bot sites. 协议\t地址\tDNS, IPv4\t185.235.81.3 and 185.235.81.4\t添加到AdGuard DNS, IPv6\t2a0d:4d00:81::3 and 2a0d:4d00:81::4\t添加到AdGuard 家庭模式​ Family mode offers protection by &quot;Safe&quot; resolvers and blocks adult sites. 协议\t地址\tDNS, IPv4\t185.235.81.5 and 185.235.81.6\t添加到AdGuard DNS, IPv6\t2a0d:4d00:81::5 and 2a0d:4d00:81::6\t添加到AdGuard "},{"title":"NextDNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#nextdns","content":"NextDNS provides publicly accessible non-filtering resolvers with no logging in addition to its freemium configurable filtering resolvers with optional logging. Ultra-low latency​ 协议\t地址\tDNS-over-HTTPS\thttps://dns.nextdns.io\t添加到AdGuard DNS-over-TLS\ttls://dns.nextdns.io\t添加到AdGuard Anycast​ 协议\t地址\tDNS-over-HTTPS\thttps://anycast.dns.nextdns.io\t添加到AdGuard DNS-over-TLS\ttls://anycast.dns.nextdns.io\t添加到AdGuard "},{"title":"RethinkDNS​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#rethinkdns","content":"RethinkDNS provides DNS-over-HTTPS service running as Cloudflare Worker and DNS-over-TLS service running as Fly.io Worker with configurable blocklists. Unfiltered​ 协议\t地址\tDNS-over-HTTPS\thttps://basic.rethinkdns.com/\t添加到AdGuard DNS-over-TLS\ttls://max.rethinkdns.com\t添加到AdGuard "},{"title":"ControlD​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#controld","content":"ControlD is public DNS service which provides ads,malware, and social media blocking. Block malware​ 协议\t地址\tDNS, IPv4\t76.76.2.1\t添加到AdGuard DNS-over-HTTPS\thttps://freedns.controld.com/p1\t添加到AdGuard DNS-over-TLS\ttls://p1.freedns.controld.com\t添加到AdGuard Block malware + ads​ 协议\t地址\tDNS, IPv4\t76.76.2.2\t添加到AdGuard DNS-over-HTTPS\thttps://freedns.controld.com/p2\t添加到AdGuard DNS-over-TLS\ttls://p2.freedns.controld.com\t添加到AdGuard Block malware + ads + social​ 协议\t地址\tDNS, IPv4\t76.76.2.3\t添加到AdGuard DNS-over-HTTPS\thttps://freedns.controld.com/p3\t添加到AdGuard DNS-over-TLS\ttls://p3.freedns.controld.com\t添加到AdGuard "},{"title":"Mullvad​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#mullvad","content":"Mullvad provides publicly accessible DNS with QNAME minimization, endpoints located in Australia, Germany, Singapore, Sweden, United Kingdom and United States (New York and Los Angeles). 无过滤​ 协议\t地址\tDNS-over-HTTPS\thttps://doh.mullvad.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://doh.mullvad.net\t添加到AdGuard Ad blocking​ 协议\t地址\tDNS-over-HTTPS\thttps://adblock.doh.mullvad.net/dns-query\t添加到AdGuard DNS-over-TLS\ttls://adblock.doh.mullvad.net\t添加到AdGuard "},{"title":"Small personal resolvers​","type":1,"pageTitle":"已知的DNS 提供商","url":"general/dns-providers/#small-personal-resolvers","content":"In this section we list small, mostly personal DNS resolvers. They often have only one or very few servers and worse uptime than 'big' providers. We won't be able to proper monitor their availability. Use them at your own risk! Arapurayil​ Arapurayil is a personal DNS service hosted in Mumbai, India. Non-logging | Filters ads, trackers, phishing,etc | DNSSEC | QNAME Minimization | No EDNS Client-Subnet. 协议\t地址\tDNSCrypt, IPv4\tHost: 2.dnscrypt-cert.dns.arapurayil.com IP: 3.7.156.128\t添加到AdGuard DNS-over-HTTPS\tHost: https://dns.arapurayil.com/dns-query\t添加到AdGuard Dandelion Sprout's Official DNS Server​ Dandelion Sprout's Official DNS Server is a personal DNS service hosted in Trondheim, Norway, using an AdGuard Home infrastructure. Blocks more ads and malware than AdGuard DNS thanks to more advanced syntax, but goes easier on trackers, and blocks alt-right tabloids and most imageboards. Logging is used to improve its used filterlists (e.g. by unblocking sites that shouldn't have been blocked), and to determine the least bad times for server system updates. 协议\t地址\tDNS-over-HTTPS\thttps://dandelionsprout.asuscomm.com:2501/dns-query\t添加到AdGuard DNS-over-TLS\ttls://dandelionsprout.asuscomm.com:853\t添加到AdGuard DNS-over-QUIC\tquic://dandelionsprout.asuscomm.com:48582\t添加到AdGuard DNS, IPv4\tVaries; see link above. DNS, IPv6\tVaries; see link above. DNSCrypt, IPv4\tVaries; see link above.\t "},{"title":"如何刷新DNS缓存","type":0,"sectionRef":"#","url":"public-dns/solving-problems/how-to-flush-dns-cache/","content":"","keywords":""},{"title":"DNS缓存是什么？​","type":1,"pageTitle":"如何刷新DNS缓存","url":"public-dns/solving-problems/how-to-flush-dns-cache/#dns缓存是什么","content":"DNS 缓存将访问站点的 IP 地址存储在本地计算机上，以便在下次加载时可以加载地更快。 系统不进行长时间的 DNS 查找，而是使用临时 DNS 缓存中的 DNS 记录来回答查询。 DNS 缓存包含所谓的资源记录，他们是： 资源数据(或 rdata)记录类型记录名字TTLClass资源数据长度 "},{"title":"当您可能需要清除缓存时​","type":1,"pageTitle":"如何刷新DNS缓存","url":"public-dns/solving-problems/how-to-flush-dns-cache/#当您可能需要清除缓存时","content":"你经常会得到一个404的错误。例如，该网站被转移到另一台服务器，其 IP 地址发生了变化。 要使浏览器从新的 IP 地址打开网站，您需要从 DNS 缓存中删除已经缓存的 IP。 你想改善你的隐私。 你想保护自己免受黑客攻击和电脑病毒的影响。当 DNS 缓存损坏时，浏览器可能会将您重定向到攻击者插入您计算机的 DNS 记录中的恶意网站的 IP 地址。 "},{"title":"如何在不同的操作系统上刷新 DNS 缓存​","type":1,"pageTitle":"如何刷新DNS缓存","url":"public-dns/solving-problems/how-to-flush-dns-cache/#如何在不同的操作系统上刷新-dns-缓存","content":""},{"title":"macOS​","type":1,"pageTitle":"如何刷新DNS缓存","url":"public-dns/solving-problems/how-to-flush-dns-cache/#macos","content":"要清除 macOS 上的 DNS 缓存，请打开终端（您可以使用 Spotlight 搜索找到它 - 然后，请按 Command+Space 并输入 Terminal）并输入以下命令： sudo killall -HUP mDNSResponder 在 macOS Big Sur 11.2.0 和 macOS Monterey 12.0.0 上，您还可以使用以下命令： sudo dscacheutil -flushcache 之后，输入您的管理员密码以完成该过程。 "},{"title":"Windows​","type":1,"pageTitle":"如何刷新DNS缓存","url":"public-dns/solving-problems/how-to-flush-dns-cache/#windows","content":"要刷新 Windows 设备上的 DNS 缓存，请执行以下操作： 以管理员身份加载命令提示符。 你可以通过输入 command prompt 或 cmd在开始菜单中找到它。 然后输入 ipconfig/flushdns 并按回车键。 你会看到这样一行： 成功刷新了DNS解析器缓存。 完成! "},{"title":"Linux​","type":1,"pageTitle":"如何刷新DNS缓存","url":"public-dns/solving-problems/how-to-flush-dns-cache/#linux","content":"Linux 没有操作系统级别的 DNS 缓存，除非安装并运行了 Systemd Resolved、DNSMasq、BIND 或 Nscd 等缓存服务。 清除 DNS 缓存的过程取决于 Linux 发行版和使用的缓存服务。 对于每个发行版，您需要启动一个终端窗口。 按键盘上的 Ctrl+Alt+T 并使用相应的命令清除 Linux 系统正在运行的服务的 DNS 缓存。 要找出您正在使用的 DNS 解析器，请使用命令 sudo lsof -i :53 -S。 Systemd Resolved​ 要清除 Systemd Resolved DNS缓存，请输入： sudo systemd-resolve --flush-caches 成功后，该命令不会返回任何消息。 DNSMasq​ 要清除 DNSMasq 缓存，您需要重新启动它： sudo service dnsmasq restart Nscd​ 要清除 Nscd 缓存，您还需要重新启动服务： sudo service nscd restart BIND​ 要刷新 BIND DNS 缓存，请运行以下命令： rndc flush 然后你需要重新加载 BIND： rndc reload 您将收到服务器已成功重新加载的消息。 "},{"title":"Android（安卓）​","type":1,"pageTitle":"如何刷新DNS缓存","url":"public-dns/solving-problems/how-to-flush-dns-cache/#android安卓","content":"清除 Android 设备上的 DNS 缓存的最简单方法是打开和关闭飞行模式。 您可以在“快速设置”窗格中 启用/禁用 飞行模式。 硬重启还可以帮助刷新设备的 DNS 缓存。 为了做到这一点，按住电源按钮至少20秒。 它（通常）会强制您的设备手动重启，并且 DNS 缓存将被清除。 另一种选择是在“设置”应用中重置设备的网络设置。 打开 设置 &gt; 系统 &gt; 高级 &gt; 重置选项 &gt; 重置网络设置 并点击 重置设置 进行确认。 注意：这样做，您将失去与 Wi-Fi 路由器和其他特定网络设置（包括 DNS 服务器自定义）的连接。 您将需要手动重置它们。 "},{"title":"iOS​","type":1,"pageTitle":"如何刷新DNS缓存","url":"public-dns/solving-problems/how-to-flush-dns-cache/#ios","content":"有多种方法可以清除 iPad 或 iPhone 上的 DNS 缓存。 最简单的方法是激活飞行模式（例如，在控制中心或设置应用程序中）并再次将其停用。 DNS 缓存将被刷新。 另一种选择是在“设置”应用中重置设备的网络设置。 打开 常规，向下滚动，找到 重置 然后点击 重置网络设置。 注意：这样做，您将失去与 Wi-Fi 路由器和其他特定网络设置（包括 DNS 服务器自定义）的连接。 您将需要手动重置它们。 "}]